2025-02-18 17:14:37 [INFO]: Server is running on port 3000 
2025-02-18 17:14:42 [INFO]: Server is running on port 3000 
2025-02-18 17:14:42 [INFO]: Environment: development 
2025-02-18 17:14:42 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:14:50 [INFO]: Server is running on port 3000 
2025-02-18 17:14:50 [INFO]: Environment: development 
2025-02-18 17:14:50 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:14:54 [INFO]: Server is running on port 3000 
2025-02-18 17:14:54 [INFO]: Environment: development 
2025-02-18 17:14:54 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:15:00 [INFO]: Server is running on port 3000 
2025-02-18 17:15:00 [INFO]: Environment: development 
2025-02-18 17:15:00 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:15:00 [INFO]: Connected to MongoDB 
2025-02-18 17:15:03 [INFO]: Server is running on port 3000 
2025-02-18 17:15:03 [INFO]: Environment: development 
2025-02-18 17:15:03 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:15:03 [INFO]: Connected to MongoDB 
2025-02-18 17:15:07 [ERROR]: Invalid dev secret key {
  "stack": "Error: Invalid dev secret key\n    at DevController.registerAdmin (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/dev.controller.js:15:15)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/routes/dev.routes.js:19:23\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/middleware/validate.middleware.js:19:13\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:284:15"
}
2025-02-18 17:15:24 [INFO]: Server is running on port 3000 
2025-02-18 17:15:24 [INFO]: Environment: development 
2025-02-18 17:15:24 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:15:24 [INFO]: Connected to MongoDB 
2025-02-18 17:15:37 [INFO]: Server is running on port 3000 
2025-02-18 17:15:37 [INFO]: Environment: development 
2025-02-18 17:15:37 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:15:37 [INFO]: Connected to MongoDB 
2025-02-18 17:15:40 [ERROR]: Invalid dev secret key {
  "stack": "Error: Invalid dev secret key\n    at DevController.registerAdmin (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/dev.controller.js:15:15)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/routes/dev.routes.js:19:23\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/middleware/validate.middleware.js:19:13\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:284:15"
}
2025-02-18 17:15:57 [INFO]: Server is running on port 3000 
2025-02-18 17:15:57 [INFO]: Environment: development 
2025-02-18 17:15:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:15:57 [INFO]: Connected to MongoDB 
2025-02-18 17:15:59 [ERROR]: Invalid dev secret key {
  "stack": "Error: Invalid dev secret key\n    at DevController.registerAdmin (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/dev.controller.js:15:15)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/routes/dev.routes.js:19:23\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/middleware/validate.middleware.js:19:13\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:284:15"
}
2025-02-18 17:15:59 [ERROR]: Invalid dev secret key {
  "stack": "Error: Invalid dev secret key\n    at DevController.registerAdmin (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/dev.controller.js:15:15)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/routes/dev.routes.js:19:23\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/middleware/validate.middleware.js:19:13\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:284:15",
  "path": "/api/dev/register-admin",
  "method": "POST",
  "body": {
    "name": "string",
    "email": "user@example.com",
    "password": "string",
    "dev_secret_key": "string"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 17:16:25 [ERROR]: Email already exists {
  "stack": "Error: Email already exists\n    at UserService.createUser (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/user.service.js:83:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DevController.registerAdmin (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/dev.controller.js:24:21)"
}
2025-02-18 17:16:25 [ERROR]: Email already exists {
  "stack": "Error: Email already exists\n    at UserService.createUser (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/user.service.js:83:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DevController.registerAdmin (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/dev.controller.js:24:21)",
  "path": "/api/dev/register-admin",
  "method": "POST",
  "body": {
    "name": "Admin",
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003",
    "dev_secret_key": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 17:16:53 [INFO]: Server is running on port 3000 
2025-02-18 17:16:53 [INFO]: Environment: development 
2025-02-18 17:16:53 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:16:53 [INFO]: Connected to MongoDB 
2025-02-18 17:17:30 [INFO]: Server is running on port 3000 
2025-02-18 17:17:30 [INFO]: Environment: development 
2025-02-18 17:17:30 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:17:30 [INFO]: Connected to MongoDB 
2025-02-18 17:17:33 [INFO]: Server is running on port 3000 
2025-02-18 17:17:33 [INFO]: Environment: development 
2025-02-18 17:17:33 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:17:33 [INFO]: Connected to MongoDB 
2025-02-18 17:17:41 [INFO]: Server is running on port 3000 
2025-02-18 17:17:41 [INFO]: Environment: development 
2025-02-18 17:17:41 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:17:41 [INFO]: Connected to MongoDB 
2025-02-18 17:17:42 [INFO]: Dev admin created {
  "adminId": "67b45e46236970796c68985e",
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 17:18:24 [ERROR]: Unhandled Rejection: Cannot read properties of undefined (reading 'handleError') {
  "stack": "TypeError: Cannot read properties of undefined (reading 'handleError')\n    at login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:59:18)"
}
2025-02-18 17:19:18 [INFO]: Server is running on port 3000 
2025-02-18 17:19:18 [INFO]: Environment: development 
2025-02-18 17:19:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:19:18 [INFO]: Connected to MongoDB 
2025-02-18 17:19:21 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 17:20:39 [INFO]: Server is running on port 3000 
2025-02-18 17:20:39 [INFO]: Environment: development 
2025-02-18 17:20:39 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:20:39 [INFO]: Connected to MongoDB 
2025-02-18 17:21:36 [INFO]: Server is running on port 3000 
2025-02-18 17:21:36 [INFO]: Environment: development 
2025-02-18 17:21:36 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:21:36 [INFO]: Connected to MongoDB 
2025-02-18 17:23:13 [INFO]: Server is running on port 3000 
2025-02-18 17:23:13 [INFO]: Environment: development 
2025-02-18 17:23:13 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:23:13 [INFO]: Connected to MongoDB 
2025-02-18 17:23:24 [INFO]: Server is running on port 3000 
2025-02-18 17:23:24 [INFO]: Environment: development 
2025-02-18 17:23:24 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:23:24 [INFO]: Connected to MongoDB 
2025-02-18 17:23:25 [INFO]: Server is running on port 3000 
2025-02-18 17:23:25 [INFO]: Environment: development 
2025-02-18 17:23:25 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:23:25 [INFO]: Connected to MongoDB 
2025-02-18 17:23:26 [INFO]: Server is running on port 3000 
2025-02-18 17:23:26 [INFO]: Environment: development 
2025-02-18 17:23:26 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:23:26 [INFO]: Connected to MongoDB 
2025-02-18 17:24:06 [INFO]: Reset password email sent {
  "userId": "67b45e46236970796c68985e"
}
2025-02-18 17:24:06 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 17:31:31 [INFO]: Server is running on port 3000 
2025-02-18 17:31:31 [INFO]: Environment: development 
2025-02-18 17:31:31 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:31:31 [INFO]: Connected to MongoDB 
2025-02-18 17:37:06 [INFO]: Server is running on port 3000 
2025-02-18 17:37:06 [INFO]: Environment: development 
2025-02-18 17:37:06 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:37:06 [INFO]: Connected to MongoDB 
2025-02-18 17:37:33 [INFO]: Reset password email sent {
  "userId": "67b45e46236970796c68985e"
}
2025-02-18 17:37:33 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 17:38:45 [INFO]: Server is running on port 3000 
2025-02-18 17:38:45 [INFO]: Environment: development 
2025-02-18 17:38:45 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:38:45 [INFO]: Connected to MongoDB 
2025-02-18 17:39:02 [INFO]: Reset password email sent {
  "userId": "67b45e46236970796c68985e"
}
2025-02-18 17:39:02 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 17:40:24 [INFO]: Mobile user registered {
  "userId": "67b46394404940a4ce4b8880"
}
2025-02-18 17:40:24 [INFO]: Mobile user registered {
  "email": "gangal.dat@gmail.com"
}
2025-02-18 17:40:24 [ERROR]: res.created is not a function {
  "stack": "TypeError: res.created is not a function\n    at AuthController.createdResponse (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/base.controller.js:13:13)\n    at AuthController.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:24:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)"
}
2025-02-18 17:40:24 [ERROR]: res.created is not a function {
  "stack": "TypeError: res.created is not a function\n    at AuthController.createdResponse (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/base.controller.js:13:13)\n    at AuthController.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:24:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
  "path": "/api/auth/register/mobile",
  "method": "POST",
  "body": {
    "name": "NgoVanTienDat",
    "email": "gangal.dat@gmail.com",
    "password": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 17:43:07 [INFO]: Server is running on port 3000 
2025-02-18 17:43:07 [INFO]: Environment: development 
2025-02-18 17:43:07 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:43:07 [INFO]: Connected to MongoDB 
2025-02-18 17:43:21 [INFO]: Mobile user registered {
  "userId": "67b46445a26adb83470780f7"
}
2025-02-18 17:43:21 [INFO]: Mobile user registered {
  "email": "gangal.dat@gmail.com"
}
2025-02-18 17:43:21 [ERROR]: res.created is not a function {
  "stack": "TypeError: res.created is not a function\n    at AuthController.createdResponse (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/base.controller.js:13:13)\n    at AuthController.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:24:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)"
}
2025-02-18 17:43:21 [ERROR]: res.created is not a function {
  "stack": "TypeError: res.created is not a function\n    at AuthController.createdResponse (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/base.controller.js:13:13)\n    at AuthController.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:24:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
  "path": "/api/auth/register/mobile",
  "method": "POST",
  "body": {
    "name": "NgoVanTienDat",
    "email": "gangal.dat@gmail.com",
    "password": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 17:46:26 [INFO]: Server is running on port 3000 
2025-02-18 17:46:26 [INFO]: Environment: development 
2025-02-18 17:46:26 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:46:26 [INFO]: Connected to MongoDB 
2025-02-18 17:46:35 [INFO]: Mobile user registered {
  "userId": "67b46507bdfebb2a1ff8c00e"
}
2025-02-18 17:46:35 [INFO]: Mobile user registered {
  "email": "gangal.dat@gmail.com"
}
2025-02-18 17:48:21 [ERROR]: Dữ liệu không hợp lệ {
  "stack": "Error: Dữ liệu không hợp lệ\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/middleware/validate.middleware.js:16:23\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:47:12)",
  "path": "/api/auth/verify-otp",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "otp": "302896"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 17:56:52 [INFO]: Server is running on port 3000 
2025-02-18 17:56:52 [INFO]: Environment: development 
2025-02-18 17:56:52 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:56:52 [INFO]: Connected to MongoDB 
2025-02-18 17:56:56 [INFO]: Server is running on port 3000 
2025-02-18 17:56:56 [INFO]: Environment: development 
2025-02-18 17:56:56 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:56:56 [INFO]: Connected to MongoDB 
2025-02-18 17:57:58 [INFO]: Server is running on port 3000 
2025-02-18 17:57:58 [INFO]: Environment: development 
2025-02-18 17:57:58 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:57:58 [INFO]: Connected to MongoDB 
2025-02-18 17:58:06 [INFO]: Server is running on port 3000 
2025-02-18 17:58:06 [INFO]: Environment: development 
2025-02-18 17:58:06 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:58:06 [INFO]: Connected to MongoDB 
2025-02-18 17:58:07 [INFO]: Server is running on port 3000 
2025-02-18 17:58:07 [INFO]: Environment: development 
2025-02-18 17:58:07 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:58:07 [INFO]: Connected to MongoDB 
2025-02-18 17:58:08 [INFO]: Server is running on port 3000 
2025-02-18 17:58:08 [INFO]: Environment: development 
2025-02-18 17:58:08 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:58:08 [INFO]: Connected to MongoDB 
2025-02-18 17:58:11 [ERROR]: otp.notFound {
  "stack": "Error: otp.notFound\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:35:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)"
}
2025-02-18 17:58:11 [ERROR]: otp.notFound {
  "stack": "Error: otp.notFound\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:35:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)",
  "path": "/api/auth/verify-otp",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "otp": "302896"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 17:58:30 [INFO]: Mobile user registered {
  "userId": "67b467d2930761488f779a17"
}
2025-02-18 17:58:30 [INFO]: Mobile user registered {
  "email": "gangal.dat@gmail.com"
}
2025-02-18 17:58:48 [ERROR]: otp.notFound {
  "stack": "Error: otp.notFound\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:35:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)"
}
2025-02-18 17:58:48 [ERROR]: otp.notFound {
  "stack": "Error: otp.notFound\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:35:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)",
  "path": "/api/auth/verify-otp",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "otp": "970739"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 17:58:51 [ERROR]: otp.notFound {
  "stack": "Error: otp.notFound\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:35:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)"
}
2025-02-18 17:58:51 [ERROR]: otp.notFound {
  "stack": "Error: otp.notFound\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:35:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)",
  "path": "/api/auth/verify-otp",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "otp": "970739"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 18:06:23 [INFO]: Server is running on port 3000 
2025-02-18 18:06:23 [INFO]: Environment: development 
2025-02-18 18:06:23 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 18:06:23 [INFO]: Connected to MongoDB 
2025-02-18 18:06:39 [INFO]: Dev fetched all users {
  "totalUsers": 6,
  "page": 1,
  "limit": 10
}
2025-02-18 19:31:05 [INFO]: MongoDB disconnected 
2025-02-18 20:05:10 [INFO]: Mobile user registered {
  "userId": "67b485839489112649a9948d"
}
2025-02-18 20:05:10 [INFO]: Mobile user registered {
  "email": "haha@example.com"
}
2025-02-18 20:05:14 [INFO]: Dev fetched all users {
  "totalUsers": 7,
  "page": 1,
  "limit": 10
}
2025-02-18 20:38:03 [INFO]: Server is running on port 3000 
2025-02-18 20:38:03 [INFO]: Environment: development 
2025-02-18 20:38:03 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:38:03 [INFO]: Connected to MongoDB 
2025-02-18 20:38:31 [INFO]: Server is running on port 3000 
2025-02-18 20:38:31 [INFO]: Environment: development 
2025-02-18 20:38:31 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:38:31 [INFO]: Connected to MongoDB 
2025-02-18 20:38:47 [INFO]: Server is running on port 3000 
2025-02-18 20:38:47 [INFO]: Environment: development 
2025-02-18 20:38:47 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:38:47 [INFO]: Connected to MongoDB 
2025-02-18 20:40:38 [INFO]: Server is running on port 3000 
2025-02-18 20:40:38 [INFO]: Environment: development 
2025-02-18 20:40:38 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:40:38 [INFO]: Connected to MongoDB 
2025-02-18 20:40:49 [INFO]: Server is running on port 3000 
2025-02-18 20:40:49 [INFO]: Environment: development 
2025-02-18 20:40:49 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:40:49 [INFO]: Connected to MongoDB 
2025-02-18 20:40:54 [INFO]: Server is running on port 3000 
2025-02-18 20:40:54 [INFO]: Environment: development 
2025-02-18 20:40:54 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:40:54 [INFO]: Connected to MongoDB 
2025-02-18 20:41:04 [INFO]: Server is running on port 3000 
2025-02-18 20:41:04 [INFO]: Environment: development 
2025-02-18 20:41:04 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:41:04 [INFO]: Connected to MongoDB 
2025-02-18 20:41:08 [INFO]: Server is running on port 3000 
2025-02-18 20:41:08 [INFO]: Environment: development 
2025-02-18 20:41:08 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:41:08 [INFO]: Connected to MongoDB 
2025-02-18 20:42:05 [INFO]: Server is running on port 3000 
2025-02-18 20:42:05 [INFO]: Environment: development 
2025-02-18 20:42:05 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:42:05 [INFO]: Connected to MongoDB 
2025-02-18 20:42:16 [INFO]: Server is running on port 3000 
2025-02-18 20:42:16 [INFO]: Environment: development 
2025-02-18 20:42:16 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:42:16 [INFO]: Connected to MongoDB 
2025-02-18 20:42:32 [INFO]: Server is running on port 3000 
2025-02-18 20:42:32 [INFO]: Environment: development 
2025-02-18 20:42:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:42:32 [INFO]: Connected to MongoDB 
2025-02-18 20:42:45 [ERROR]: bcrypt is not defined {
  "stack": "ReferenceError: bcrypt is not defined\n    at HashService.hashData (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/hash.service.js:3:9)\n    at OTPService.saveOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:23:36)\n    at OTPService.generateAndSendOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:67:20)\n    at AuthService.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:176:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:22:28)"
}
2025-02-18 20:42:45 [ERROR]: bcrypt is not defined {
  "stack": "ReferenceError: bcrypt is not defined\n    at HashService.hashData (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/hash.service.js:3:9)\n    at OTPService.saveOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:23:36)\n    at OTPService.generateAndSendOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:67:20)\n    at AuthService.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:176:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:22:28)",
  "path": "/api/auth/register/mobile",
  "method": "POST",
  "body": {
    "name": "string",
    "email": "haha@example.com",
    "password": "string"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 20:43:35 [INFO]: Server is running on port 3000 
2025-02-18 20:43:35 [INFO]: Environment: development 
2025-02-18 20:43:35 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:43:35 [INFO]: Connected to MongoDB 
2025-02-18 20:43:37 [INFO]: Server is running on port 3000 
2025-02-18 20:43:37 [INFO]: Environment: development 
2025-02-18 20:43:37 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:43:37 [INFO]: Connected to MongoDB 
2025-02-18 20:43:51 [INFO]: Mobile user registered {
  "userId": "67b48e94cab365627a8b03dd"
}
2025-02-18 20:43:51 [INFO]: Mobile user registered {
  "email": "haha@example.com"
}
2025-02-18 20:44:14 [INFO]: Dev fetched all users {
  "totalUsers": 7,
  "page": 1,
  "limit": 10
}
2025-02-18 20:45:16 [INFO]: Server is running on port 3000 
2025-02-18 20:45:16 [INFO]: Environment: development 
2025-02-18 20:45:16 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:45:16 [INFO]: Connected to MongoDB 
2025-02-18 20:45:26 [INFO]: Server is running on port 3000 
2025-02-18 20:45:26 [INFO]: Environment: development 
2025-02-18 20:45:26 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:45:26 [INFO]: Connected to MongoDB 
2025-02-18 20:45:47 [INFO]: Server is running on port 3000 
2025-02-18 20:45:47 [INFO]: Environment: development 
2025-02-18 20:45:47 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:45:47 [INFO]: Connected to MongoDB 
2025-02-18 21:09:59 [INFO]: Server is running on port 3000 
2025-02-18 21:09:59 [INFO]: Environment: development 
2025-02-18 21:09:59 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:10:04 [INFO]: Connected to MongoDB 
2025-02-18 21:11:27 [INFO]: Server is running on port 3000 
2025-02-18 21:11:27 [INFO]: Environment: development 
2025-02-18 21:11:27 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:11:32 [INFO]: Connected to MongoDB 
2025-02-18 21:13:25 [INFO]: Mobile user registered {
  "userId": "67b495809d35c758607e27c7"
}
2025-02-18 21:13:25 [INFO]: Mobile user registered {
  "email": "haha@example.com"
}
2025-02-18 21:14:38 [INFO]: Mobile user registered {
  "userId": "67b495ca9d35c758607e27cc"
}
2025-02-18 21:14:38 [INFO]: Mobile user registered {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:15:07 [ERROR]: otp.invalid {
  "stack": "Error: otp.invalid\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:44:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)"
}
2025-02-18 21:15:07 [ERROR]: otp.invalid {
  "stack": "Error: otp.invalid\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:44:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)",
  "path": "/api/auth/verify-otp",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "otp": "773164"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 21:15:53 [INFO]: Server is running on port 3000 
2025-02-18 21:15:53 [INFO]: Environment: development 
2025-02-18 21:15:53 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:15:58 [INFO]: Connected to MongoDB 
2025-02-18 21:16:02 [ERROR]: user.notActive {
  "stack": "Error: user.notActive\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:44:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)"
}
2025-02-18 21:16:02 [ERROR]: user.notActive {
  "stack": "Error: user.notActive\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:44:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)",
  "path": "/api/auth/verify-otp",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "otp": "773164"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 21:16:12 [INFO]: Server is running on port 3000 
2025-02-18 21:16:12 [INFO]: Environment: development 
2025-02-18 21:16:12 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:16:16 [INFO]: Connected to MongoDB 
2025-02-18 21:16:20 [INFO]: OTP verified successfully {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:16:20 [INFO]: OTP verified {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:17:14 [ERROR]: Invalid email or password {
  "stack": "Error: Invalid email or password\n    at AuthService.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:80:19)\n    at async AuthController.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:55:28)"
}
2025-02-18 21:17:14 [ERROR]: Invalid email or password {
  "stack": "Error: Invalid email or password\n    at AuthService.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:80:19)\n    at async AuthController.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:55:28)",
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "string"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 21:17:46 [INFO]: Server is running on port 3000 
2025-02-18 21:17:46 [INFO]: Environment: development 
2025-02-18 21:17:46 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:17:51 [INFO]: Connected to MongoDB 
2025-02-18 21:17:54 [ERROR]: Invalid email or password {}
2025-02-18 21:17:54 [ERROR]: Invalid email or password {
  "stack": "Error: Invalid email or password\n    at AuthService.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:80:19)\n    at async AuthController.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:55:28)",
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "string"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 21:18:15 [ERROR]: Invalid email or password {}
2025-02-18 21:18:15 [ERROR]: Invalid email or password {
  "stack": "Error: Invalid email or password\n    at AuthService.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:80:19)\n    at async AuthController.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:55:28)",
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "string"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 21:18:51 [INFO]: Server is running on port 3000 
2025-02-18 21:18:51 [INFO]: Environment: development 
2025-02-18 21:18:51 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:18:57 [INFO]: Connected to MongoDB 
2025-02-18 21:19:02 [ERROR]: Invalid email or password {}
2025-02-18 21:19:02 [ERROR]: Invalid email or password {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "string"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 21:19:13 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:20:21 [INFO]: Server is running on port 3000 
2025-02-18 21:20:21 [INFO]: Environment: development 
2025-02-18 21:20:21 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:20:26 [INFO]: Connected to MongoDB 
2025-02-18 21:20:31 [INFO]: Server is running on port 3000 
2025-02-18 21:20:31 [INFO]: Environment: development 
2025-02-18 21:20:31 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:20:34 [INFO]: Connected to MongoDB 
2025-02-18 21:21:14 [INFO]: Server is running on port 3000 
2025-02-18 21:21:14 [INFO]: Environment: development 
2025-02-18 21:21:14 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:21:16 [INFO]: Server is running on port 3000 
2025-02-18 21:21:16 [INFO]: Environment: development 
2025-02-18 21:21:16 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:21:20 [INFO]: Connected to MongoDB 
2025-02-18 21:21:35 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:22:31 [INFO]: Server is running on port 3000 
2025-02-18 21:22:31 [INFO]: Environment: development 
2025-02-18 21:22:31 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:22:36 [INFO]: Connected to MongoDB 
2025-02-18 21:24:51 [INFO]: Reset password email sent {
  "userId": "67b495ca9d35c758607e27cc"
}
2025-02-18 21:24:51 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:25:38 [INFO]: Forgot password mobile initiated {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:27:28 [INFO]: Server is running on port 3000 
2025-02-18 21:27:28 [INFO]: Environment: development 
2025-02-18 21:27:28 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:27:32 [INFO]: Connected to MongoDB 
2025-02-18 21:27:40 [INFO]: Forgot password mobile initiated {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:32:02 [INFO]: Server is running on port 3000 
2025-02-18 21:32:02 [INFO]: Environment: development 
2025-02-18 21:32:02 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:32:06 [INFO]: Connected to MongoDB 
2025-02-18 21:35:08 [INFO]: MongoDB disconnected 
2025-02-19 13:03:14 [INFO]: Server is running on port 3000 
2025-02-19 13:03:14 [INFO]: Environment: development 
2025-02-19 13:03:14 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:03:17 [INFO]: Connected to MongoDB 
2025-02-19 13:08:45 [INFO]: Server is running on port 3000 
2025-02-19 13:08:45 [INFO]: Environment: development 
2025-02-19 13:08:45 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:08:48 [INFO]: Connected to MongoDB 
2025-02-19 13:09:09 [INFO]: Server is running on port 3000 
2025-02-19 13:09:09 [INFO]: Environment: development 
2025-02-19 13:09:09 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:09:13 [INFO]: Connected to MongoDB 
2025-02-19 13:11:49 [INFO]: Reset password email sent {
  "userId": "67b495ca9d35c758607e27cc"
}
2025-02-19 13:11:49 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 13:13:40 [INFO]: Server is running on port 3000 
2025-02-19 13:13:40 [INFO]: Environment: development 
2025-02-19 13:13:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:13:43 [INFO]: Connected to MongoDB 
2025-02-19 13:13:44 [INFO]: Server is running on port 3000 
2025-02-19 13:13:44 [INFO]: Environment: development 
2025-02-19 13:13:44 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:13:47 [INFO]: Connected to MongoDB 
2025-02-19 13:13:55 [INFO]: Server is running on port 3000 
2025-02-19 13:13:55 [INFO]: Environment: development 
2025-02-19 13:13:55 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:13:58 [INFO]: Connected to MongoDB 
2025-02-19 13:14:18 [INFO]: Server is running on port 3000 
2025-02-19 13:14:18 [INFO]: Environment: development 
2025-02-19 13:14:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:14:21 [INFO]: Connected to MongoDB 
2025-02-19 13:14:42 [INFO]: Server is running on port 3000 
2025-02-19 13:14:42 [INFO]: Environment: development 
2025-02-19 13:14:42 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:14:46 [INFO]: Connected to MongoDB 
2025-02-19 13:15:32 [INFO]: Reset password email sent {
  "userId": "67b495ca9d35c758607e27cc"
}
2025-02-19 13:15:32 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 13:17:08 [INFO]: Server is running on port 3000 
2025-02-19 13:17:08 [INFO]: Environment: development 
2025-02-19 13:17:08 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:17:10 [INFO]: Server is running on port 3000 
2025-02-19 13:17:10 [INFO]: Environment: development 
2025-02-19 13:17:10 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:17:13 [INFO]: Connected to MongoDB 
2025-02-19 13:17:21 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 13:18:26 [INFO]: Server is running on port 3000 
2025-02-19 13:18:26 [INFO]: Environment: development 
2025-02-19 13:18:26 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:18:27 [INFO]: Server is running on port 3000 
2025-02-19 13:18:27 [INFO]: Environment: development 
2025-02-19 13:18:27 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:18:30 [INFO]: Connected to MongoDB 
2025-02-19 13:18:36 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 13:19:17 [INFO]: Password reset completed {
  "token": "47f0774ea5c23941d2c986995d7e773ac7bc84ce9efef17e982745025ad01d06"
}
2025-02-19 13:19:41 [ERROR]: Invalid email or password {}
2025-02-19 13:19:41 [ERROR]: Invalid email or password {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 13:19:48 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 13:20:18 [INFO]: Server is running on port 3000 
2025-02-19 13:20:18 [INFO]: Environment: development 
2025-02-19 13:20:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:20:21 [INFO]: Connected to MongoDB 
2025-02-19 13:21:36 [INFO]: Dev fetched all users {
  "totalUsers": 2,
  "page": 1,
  "limit": 10
}
2025-02-19 13:22:21 [ERROR]: User is not defined {}
2025-02-19 13:22:21 [ERROR]: User is not defined {
  "path": "/api/auth/refresh-token",
  "method": "POST",
  "body": {
    "refresh_token": "40f78084117f14e2e24dc55748babd0d876aa776c99f0256b61466f3d79622b689da2127babd6798"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 13:22:39 [ERROR]: User is not defined {}
2025-02-19 13:22:39 [ERROR]: User is not defined {
  "path": "/api/auth/refresh-token",
  "method": "POST",
  "body": {
    "refresh_token": "40f78084117f14e2e24dc55748babd0d876aa776c99f0256b61466f3d79622b689da2127babd6798"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 13:25:16 [ERROR]: User is not defined {}
2025-02-19 13:25:16 [ERROR]: User is not defined {
  "path": "/api/auth/refresh-token",
  "method": "POST",
  "body": {
    "refresh_token": "40f78084117f14e2e24dc55748babd0d876aa776c99f0256b61466f3d79622b689da2127babd6798"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 13:25:42 [ERROR]: auth.invalidRefreshToken {}
2025-02-19 13:25:42 [ERROR]: auth.invalidRefreshToken {
  "path": "/api/auth/refresh-token",
  "method": "POST",
  "body": {
    "refresh_token": "40f78084117f14e2e24dc55748babd0d876"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 13:27:35 [INFO]: Server is running on port 3000 
2025-02-19 13:27:35 [INFO]: Environment: development 
2025-02-19 13:27:35 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:27:38 [INFO]: Connected to MongoDB 
2025-02-19 13:27:40 [INFO]: Server is running on port 3000 
2025-02-19 13:27:40 [INFO]: Environment: development 
2025-02-19 13:27:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:27:43 [INFO]: Connected to MongoDB 
2025-02-19 13:27:45 [ERROR]: Invalid refresh token {}
2025-02-19 13:27:45 [ERROR]: Invalid refresh token {
  "path": "/api/auth/refresh-token",
  "method": "POST",
  "body": {
    "refresh_token": "40f78084117f14e2e24dc55748babd0d876"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 13:30:14 [INFO]: Server is running on port 3000 
2025-02-19 13:30:14 [INFO]: Environment: development 
2025-02-19 13:30:14 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:30:17 [INFO]: Connected to MongoDB 
2025-02-19 13:30:20 [ERROR]: Invalid refresh token {}
2025-02-19 13:30:20 [ERROR]: Invalid refresh token {
  "path": "/api/auth/refresh-token",
  "method": "POST",
  "body": {
    "refresh_token": "40f78084117f14e2e24dc55748babd0d876"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 13:33:19 [INFO]: Server is running on port 3000 
2025-02-19 13:33:19 [INFO]: Environment: development 
2025-02-19 13:33:19 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:33:22 [INFO]: Connected to MongoDB 
2025-02-19 13:33:24 [INFO]: Server is running on port 3000 
2025-02-19 13:33:24 [INFO]: Environment: development 
2025-02-19 13:33:24 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:33:27 [INFO]: Server is running on port 3000 
2025-02-19 13:33:27 [INFO]: Environment: development 
2025-02-19 13:33:27 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:33:30 [INFO]: Connected to MongoDB 
2025-02-19 13:34:38 [INFO]: Server is running on port 3000 
2025-02-19 13:34:38 [INFO]: Environment: development 
2025-02-19 13:34:38 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:34:39 [INFO]: Server is running on port 3000 
2025-02-19 13:34:39 [INFO]: Environment: development 
2025-02-19 13:34:39 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:34:43 [INFO]: Connected to MongoDB 
2025-02-19 13:36:49 [INFO]: Server is running on port 3000 
2025-02-19 13:36:49 [INFO]: Environment: development 
2025-02-19 13:36:49 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:36:53 [INFO]: Connected to MongoDB 
2025-02-19 13:39:26 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 14:31:11 [INFO]: Server is running on port 3000 
2025-02-19 14:31:11 [INFO]: Environment: development 
2025-02-19 14:31:11 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:31:14 [INFO]: Connected to MongoDB 
2025-02-19 14:34:24 [INFO]: Server is running on port 3000 
2025-02-19 14:34:24 [INFO]: Environment: development 
2025-02-19 14:34:24 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:34:27 [INFO]: Connected to MongoDB 
2025-02-19 14:40:22 [INFO]: Server is running on port 3000 
2025-02-19 14:40:22 [INFO]: Environment: development 
2025-02-19 14:40:22 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:40:25 [INFO]: Connected to MongoDB 
2025-02-19 14:40:27 [INFO]: Server is running on port 3000 
2025-02-19 14:40:27 [INFO]: Environment: development 
2025-02-19 14:40:27 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:40:30 [INFO]: Connected to MongoDB 
2025-02-19 14:40:32 [INFO]: Server is running on port 3000 
2025-02-19 14:40:32 [INFO]: Environment: development 
2025-02-19 14:40:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:40:35 [INFO]: Connected to MongoDB 
2025-02-19 14:42:15 [ERROR]: Invalid token {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 14:42:21 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 14:42:34 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:43:50 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:43:52 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:44:19 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:45:08 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 14:45:21 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:46:57 [INFO]: MongoDB disconnected 
2025-02-19 14:47:03 [INFO]: Server is running on port 3000 
2025-02-19 14:47:03 [INFO]: Environment: development 
2025-02-19 14:47:03 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:47:07 [INFO]: Connected to MongoDB 
2025-02-19 14:47:14 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:47:44 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:48:18 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:50:17 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:50:42 [INFO]: Server is running on port 3000 
2025-02-19 14:50:42 [INFO]: Environment: development 
2025-02-19 14:50:42 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:50:46 [INFO]: Connected to MongoDB 
2025-02-19 14:50:55 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:53:49 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:53:50 [INFO]: Server is running on port 3000 
2025-02-19 14:53:50 [INFO]: Environment: development 
2025-02-19 14:53:50 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:53:54 [INFO]: Connected to MongoDB 
2025-02-19 14:53:54 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter",
    "price": "10000",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:54:38 [INFO]: Server is running on port 3000 
2025-02-19 14:54:38 [INFO]: Environment: development 
2025-02-19 14:54:38 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:54:41 [INFO]: Connected to MongoDB 
2025-02-19 14:54:43 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter",
    "price": "10000",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:55:22 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter",
    "price": "10000",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:55:52 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter",
    "price": "10000",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:55:59 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter",
    "price": "10000",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:56:30 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter",
    "price": "10000",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:56:55 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter",
    "price": "",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:57:13 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
    "price": "",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:57:39 [ERROR]: Course validation failed: instructor_id: Path `instructor_id` is required. {}
2025-02-19 14:57:39 [ERROR]: Course validation failed: instructor_id: Path `instructor_id` is required. {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
    "price": "111111",
    "status": "draft",
    "thumbnail_id": "ecourse/[object Object]/sbbl2u8b3yiwwzrmbckk"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:59:07 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter ",
    "price": "111111",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:03:25 [INFO]: MongoDB disconnected 
2025-02-19 15:04:43 [ERROR]: Invalid token {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 15:04:51 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 15:05:08 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter ",
    "price": "111111",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:05:35 [INFO]: Server is running on port 3000 
2025-02-19 15:05:35 [INFO]: Environment: development 
2025-02-19 15:05:35 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:05:42 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter ",
    "price": "111111",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:05:44 [INFO]: Connected to MongoDB 
2025-02-19 15:06:37 [ERROR]: Course validation failed: instructor_id: Path `instructor_id` is required. {}
2025-02-19 15:06:37 [ERROR]: Course validation failed: instructor_id: Path `instructor_id` is required. {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter for beginner hahahahahaha",
    "price": "111111",
    "status": "draft",
    "thumbnail_id": "ecourse/[object Object]/xs7kvykgvtpemlcn6tmy"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:07:48 [ERROR]: Course validation failed: instructor_id: Path `instructor_id` is required. {}
2025-02-19 15:07:48 [ERROR]: Course validation failed: instructor_id: Path `instructor_id` is required. {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter for beginner hahahahahaha",
    "price": "111111",
    "status": "draft",
    "thumbnail_id": "ecourse/[object Object]/tyuibfrqbun1tbp8uu5y"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:07:55 [INFO]: Server is running on port 3000 
2025-02-19 15:07:55 [INFO]: Environment: development 
2025-02-19 15:07:55 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:07:58 [INFO]: Connected to MongoDB 
2025-02-19 15:08:13 [INFO]: Course created {
  "id": "67b5916d1222c1d3e8ccfbd2"
}
2025-02-19 15:22:18 [INFO]: Server is running on port 3000 
2025-02-19 15:22:18 [INFO]: Environment: development 
2025-02-19 15:22:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:22:21 [INFO]: Connected to MongoDB 
2025-02-19 15:25:03 [ERROR]: Invalid email or password {}
2025-02-19 15:25:03 [ERROR]: Invalid email or password {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "john@example.com",
    "password": "password123"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 15:27:09 [INFO]: Server is running on port 3000 
2025-02-19 15:27:09 [INFO]: Environment: development 
2025-02-19 15:27:09 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:27:13 [INFO]: Connected to MongoDB 
2025-02-19 15:27:17 [ERROR]: Invalid token {
  "path": "/api/users/info",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 15:27:34 [ERROR]: Invalid email or password {}
2025-02-19 15:27:34 [ERROR]: Invalid email or password {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 15:27:41 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 15:27:56 [ERROR]: UserController.getUserById is not a function {
  "path": "/api/users/info",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:29:34 [ERROR]: UserController.getUserById is not a function {
  "path": "/api/users/info",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:29:53 [INFO]: Server is running on port 3000 
2025-02-19 15:29:53 [INFO]: Environment: development 
2025-02-19 15:29:53 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:29:54 [ERROR]: Cannot read properties of undefined (reading 'findById') {}
2025-02-19 15:29:54 [ERROR]: Cannot read properties of undefined (reading 'findById') {
  "path": "/api/users/info",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:29:56 [INFO]: Connected to MongoDB 
2025-02-19 15:33:37 [INFO]: Server is running on port 3000 
2025-02-19 15:33:37 [INFO]: Environment: development 
2025-02-19 15:33:37 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:33:41 [INFO]: Connected to MongoDB 
2025-02-19 15:34:04 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 15:34:17 [ERROR]: Cannot read properties of undefined (reading 'findById') {}
2025-02-19 15:34:17 [ERROR]: Cannot read properties of undefined (reading 'findById') {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:34:20 [ERROR]: Cannot read properties of undefined (reading 'findById') {}
2025-02-19 15:34:20 [ERROR]: Cannot read properties of undefined (reading 'findById') {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:35:34 [INFO]: Server is running on port 3000 
2025-02-19 15:35:34 [INFO]: Environment: development 
2025-02-19 15:35:34 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:35:37 [INFO]: Connected to MongoDB 
2025-02-19 15:36:01 [ERROR]: Invalid email or password {}
2025-02-19 15:36:01 [ERROR]: Invalid email or password {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 15:36:07 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 15:36:19 [ERROR]: User not found {}
2025-02-19 15:36:19 [ERROR]: User not found {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:36:42 [INFO]: Server is running on port 3000 
2025-02-19 15:36:42 [INFO]: Environment: development 
2025-02-19 15:36:42 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:36:47 [INFO]: Connected to MongoDB 
2025-02-19 15:36:51 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {}
2025-02-19 15:36:51 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:39:11 [INFO]: Server is running on port 3000 
2025-02-19 15:39:11 [INFO]: Environment: development 
2025-02-19 15:39:11 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:39:14 [INFO]: Connected to MongoDB 
2025-02-19 15:40:10 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 15:41:30 [ERROR]: CloudinaryService.upload is not a function {}
2025-02-19 15:41:30 [ERROR]: CloudinaryService.upload is not a function {
  "path": "/api/users/avatar",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:41:56 [INFO]: Server is running on port 3000 
2025-02-19 15:41:56 [INFO]: Environment: development 
2025-02-19 15:41:56 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:42:03 [INFO]: Connected to MongoDB 
2025-02-19 15:42:04 [ERROR]: upload.failed {}
2025-02-19 15:42:04 [ERROR]: upload.failed {
  "path": "/api/users/avatar",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:46:24 [ERROR]: upload.failed {}
2025-02-19 15:46:24 [ERROR]: upload.failed {
  "path": "/api/users/avatar",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:50:49 [ERROR]: upload.failed {}
2025-02-19 15:50:49 [ERROR]: upload.failed {
  "path": "/api/users/avatar",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:54:02 [INFO]: Server is running on port 3000 
2025-02-19 15:54:02 [INFO]: Environment: development 
2025-02-19 15:54:02 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:54:06 [INFO]: Connected to MongoDB 
2025-02-19 15:58:30 [ERROR]: Invalid token {
  "path": "/api/users/avatar",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 15:58:44 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 16:00:41 [INFO]: Server is running on port 3000 
2025-02-19 16:00:41 [INFO]: Environment: development 
2025-02-19 16:00:41 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 16:00:47 [INFO]: Connected to MongoDB 
2025-02-19 16:24:23 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 16:25:08 [INFO]: Server is running on port 3000 
2025-02-19 16:25:08 [INFO]: Environment: development 
2025-02-19 16:25:08 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 16:25:11 [INFO]: Connected to MongoDB 
2025-02-19 16:29:36 [INFO]: Server is running on port 3000 
2025-02-19 16:29:36 [INFO]: Environment: development 
2025-02-19 16:29:36 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 16:29:40 [INFO]: Connected to MongoDB 
2025-02-19 17:41:48 [INFO]: MongoDB disconnected 
2025-02-19 17:59:11 [INFO]: MongoDB disconnected 
2025-02-19 18:09:57 [INFO]: Server is running on port 3000 
2025-02-19 18:09:57 [INFO]: Environment: development 
2025-02-19 18:09:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 18:10:01 [INFO]: Connected to MongoDB 
2025-02-19 18:10:05 [ERROR]: Invalid token {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 18:10:14 [ERROR]: RefreshToken validation failed: expires_at: Cast to date failed for value "Invalid Date" (type Date) at path "expires_at" {}
2025-02-19 18:10:14 [ERROR]: RefreshToken validation failed: expires_at: Cast to date failed for value "Invalid Date" (type Date) at path "expires_at" {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003#!@"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 18:11:38 [INFO]: Server is running on port 3000 
2025-02-19 18:11:38 [INFO]: Environment: development 
2025-02-19 18:11:38 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 18:11:41 [INFO]: Connected to MongoDB 
2025-02-19 18:11:44 [ERROR]: RefreshToken validation failed: expires_at: Cast to date failed for value "Invalid Date" (type Date) at path "expires_at" {}
2025-02-19 18:11:44 [ERROR]: RefreshToken validation failed: expires_at: Cast to date failed for value "Invalid Date" (type Date) at path "expires_at" {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003#!@"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 18:12:24 [INFO]: Server is running on port 3000 
2025-02-19 18:12:24 [INFO]: Environment: development 
2025-02-19 18:12:24 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 18:12:27 [INFO]: Connected to MongoDB 
2025-02-19 18:12:30 [ERROR]: RefreshToken validation failed: expires_at: Cast to date failed for value "Invalid Date" (type Date) at path "expires_at" {}
2025-02-19 18:12:30 [ERROR]: RefreshToken validation failed: expires_at: Cast to date failed for value "Invalid Date" (type Date) at path "expires_at" {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003#!@"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 18:13:11 [INFO]: Server is running on port 3000 
2025-02-19 18:13:11 [INFO]: Environment: development 
2025-02-19 18:13:11 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 18:13:14 [INFO]: Connected to MongoDB 
2025-02-19 18:13:20 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 18:14:57 [INFO]: Server is running on port 3000 
2025-02-19 18:14:57 [INFO]: Environment: development 
2025-02-19 18:14:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 18:15:01 [INFO]: Connected to MongoDB 
2025-02-19 18:15:06 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 18:16:13 [INFO]: Server is running on port 3000 
2025-02-19 18:16:13 [INFO]: Environment: development 
2025-02-19 18:16:13 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 18:16:17 [INFO]: Connected to MongoDB 
2025-02-19 18:25:06 [ERROR]: Cannot destructure property 'search' of 'query' as it is undefined. {}
2025-02-19 18:25:06 [ERROR]: Cannot destructure property 'search' of 'query' as it is undefined. {
  "path": "/api/users",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 18:25:09 [ERROR]: Cannot destructure property 'search' of 'query' as it is undefined. {}
2025-02-19 18:25:09 [ERROR]: Cannot destructure property 'search' of 'query' as it is undefined. {
  "path": "/api/users",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 18:48:56 [INFO]: MongoDB disconnected 
2025-02-19 19:00:48 [INFO]: MongoDB disconnected 
2025-02-19 19:02:34 [ERROR]: User not found {
  "path": "/api/users/change-password",
  "method": "PUT",
  "body": {
    "currentPassword": "Code26102003#!@",
    "newPassword": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:03:00 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 19:03:17 [ERROR]: User not found {
  "path": "/api/users/change-password",
  "method": "PUT",
  "body": {
    "currentPassword": "Code26102003#!@",
    "newPassword": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:03:55 [ERROR]: User not found {
  "path": "/api/users/change-password",
  "method": "PUT",
  "body": {
    "currentPassword": "Code26102003#!@",
    "newPassword": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:03:58 [INFO]: Server is running on port 3000 
2025-02-19 19:03:58 [INFO]: Environment: development 
2025-02-19 19:03:58 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:04:02 [INFO]: Connected to MongoDB 
2025-02-19 19:04:06 [INFO]: Password changed {}
2025-02-19 19:04:19 [ERROR]: Invalid email or password {}
2025-02-19 19:04:19 [ERROR]: Invalid email or password {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003#!@"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 19:04:25 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 19:06:57 [ERROR]: Cannot destructure property 'search' of 'query' as it is undefined. {}
2025-02-19 19:06:57 [ERROR]: Cannot destructure property 'search' of 'query' as it is undefined. {
  "path": "/api/users",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:07:32 [INFO]: Server is running on port 3000 
2025-02-19 19:07:32 [INFO]: Environment: development 
2025-02-19 19:07:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:07:35 [INFO]: Connected to MongoDB 
2025-02-19 19:08:03 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 19:13:22 [INFO]: Server is running on port 3000 
2025-02-19 19:13:22 [INFO]: Environment: development 
2025-02-19 19:13:22 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:13:25 [INFO]: Connected to MongoDB 
2025-02-19 19:13:31 [INFO]: Server is running on port 3000 
2025-02-19 19:13:31 [INFO]: Environment: development 
2025-02-19 19:13:31 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:13:34 [INFO]: Connected to MongoDB 
2025-02-19 19:22:39 [INFO]: Server is running on port 3000 
2025-02-19 19:22:39 [INFO]: Environment: development 
2025-02-19 19:22:39 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:22:45 [INFO]: Connected to MongoDB 
2025-02-19 19:31:35 [INFO]: Server is running on port 3000 
2025-02-19 19:31:35 [INFO]: Environment: development 
2025-02-19 19:31:35 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:31:39 [INFO]: Connected to MongoDB 
2025-02-19 19:32:58 [INFO]: Server is running on port 3000 
2025-02-19 19:32:58 [INFO]: Environment: development 
2025-02-19 19:32:58 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:33:02 [INFO]: Connected to MongoDB 
2025-02-19 19:34:55 [INFO]: Server is running on port 3000 
2025-02-19 19:34:55 [INFO]: Environment: development 
2025-02-19 19:34:55 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:34:59 [INFO]: Connected to MongoDB 
2025-02-19 19:35:18 [INFO]: Server is running on port 3000 
2025-02-19 19:35:18 [INFO]: Environment: development 
2025-02-19 19:35:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:35:21 [INFO]: Connected to MongoDB 
2025-02-19 19:35:43 [INFO]: Server is running on port 3000 
2025-02-19 19:35:43 [INFO]: Environment: development 
2025-02-19 19:35:43 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:35:46 [INFO]: Connected to MongoDB 
2025-02-19 19:36:30 [INFO]: Server is running on port 3000 
2025-02-19 19:36:30 [INFO]: Environment: development 
2025-02-19 19:36:30 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:36:34 [INFO]: Connected to MongoDB 
2025-02-19 19:38:12 [INFO]: Server is running on port 3000 
2025-02-19 19:38:12 [INFO]: Environment: development 
2025-02-19 19:38:12 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:38:15 [ERROR]: Cannot read properties of undefined (reading 'findById') {}
2025-02-19 19:38:15 [ERROR]: Cannot read properties of undefined (reading 'findById') {
  "path": "/api/users/67b495ca9d35c758607e27cc",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:38:16 [INFO]: Connected to MongoDB 
2025-02-19 19:39:07 [INFO]: Server is running on port 3000 
2025-02-19 19:39:07 [INFO]: Environment: development 
2025-02-19 19:39:07 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:39:10 [INFO]: Connected to MongoDB 
2025-02-19 19:40:13 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {}
2025-02-19 19:40:13 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:40:30 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {}
2025-02-19 19:40:30 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:41:15 [INFO]: Server is running on port 3000 
2025-02-19 19:41:15 [INFO]: Environment: development 
2025-02-19 19:41:15 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:41:18 [INFO]: Server is running on port 3000 
2025-02-19 19:41:18 [INFO]: Environment: development 
2025-02-19 19:41:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:41:22 [INFO]: Connected to MongoDB 
2025-02-19 19:41:26 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {}
2025-02-19 19:41:26 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:42:17 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {}
2025-02-19 19:42:17 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:43:51 [INFO]: Server is running on port 3000 
2025-02-19 19:43:51 [INFO]: Environment: development 
2025-02-19 19:43:51 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:43:54 [INFO]: Connected to MongoDB 
2025-02-19 19:45:17 [INFO]: Server is running on port 3000 
2025-02-19 19:45:17 [INFO]: Environment: development 
2025-02-19 19:45:17 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:45:20 [INFO]: Connected to MongoDB 
2025-02-19 19:49:39 [INFO]: Server is running on port 3000 
2025-02-19 19:49:39 [INFO]: Environment: development 
2025-02-19 19:49:39 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:49:42 [INFO]: Connected to MongoDB 
2025-02-19 19:50:07 [ERROR]: Invalid token {
  "path": "/api/users/admin",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10",
    "sort": "-createdAt"
  },
  "user": null
}
2025-02-19 19:50:10 [ERROR]: Invalid token {
  "path": "/api/users/admin",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10",
    "sort": "-createdAt"
  },
  "user": null
}
2025-02-19 19:50:32 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 19:51:29 [INFO]: Server is running on port 3000 
2025-02-19 19:51:29 [INFO]: Environment: development 
2025-02-19 19:51:29 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:51:32 [INFO]: Connected to MongoDB 
2025-02-20 19:40:57 [INFO]: Server is running on port 3000 
2025-02-20 19:40:57 [INFO]: Environment: development 
2025-02-20 19:40:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 19:41:01 [INFO]: Connected to MongoDB 
2025-02-20 20:15:42 [INFO]: MongoDB disconnected 
2025-02-20 20:19:18 [INFO]: MongoDB disconnected 
2025-02-20 20:33:56 [INFO]: MongoDB disconnected 
2025-02-20 20:39:35 [INFO]: MongoDB disconnected 
2025-02-20 20:55:40 [INFO]: Server is running on port 3000 
2025-02-20 20:55:40 [INFO]: Environment: development 
2025-02-20 20:55:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:55:45 [INFO]: Connected to MongoDB 
2025-02-20 20:56:07 [INFO]: Server is running on port 3000 
2025-02-20 20:56:07 [INFO]: Environment: development 
2025-02-20 20:56:07 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:56:11 [INFO]: Connected to MongoDB 
2025-02-20 20:56:58 [INFO]: Server is running on port 3000 
2025-02-20 20:56:58 [INFO]: Environment: development 
2025-02-20 20:56:58 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:57:02 [INFO]: Connected to MongoDB 
2025-02-20 20:57:33 [INFO]: Server is running on port 3000 
2025-02-20 20:57:33 [INFO]: Environment: development 
2025-02-20 20:57:33 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:57:38 [INFO]: Connected to MongoDB 
2025-02-20 20:57:39 [INFO]: Server is running on port 3000 
2025-02-20 20:57:39 [INFO]: Environment: development 
2025-02-20 20:57:39 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:57:43 [INFO]: Server is running on port 3000 
2025-02-20 20:57:43 [INFO]: Environment: development 
2025-02-20 20:57:43 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:57:46 [INFO]: Connected to MongoDB 
2025-02-20 20:57:57 [INFO]: Server is running on port 3000 
2025-02-20 20:57:57 [INFO]: Environment: development 
2025-02-20 20:57:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:58:00 [INFO]: Server is running on port 3000 
2025-02-20 20:58:00 [INFO]: Environment: development 
2025-02-20 20:58:00 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:58:04 [INFO]: Connected to MongoDB 
2025-02-20 20:59:31 [INFO]: Server is running on port 3000 
2025-02-20 20:59:31 [INFO]: Environment: development 
2025-02-20 20:59:31 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:59:32 [INFO]: Server is running on port 3000 
2025-02-20 20:59:32 [INFO]: Environment: development 
2025-02-20 20:59:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:59:36 [INFO]: Connected to MongoDB 
2025-02-20 21:00:35 [INFO]: Server is running on port 3000 
2025-02-20 21:00:35 [INFO]: Environment: development 
2025-02-20 21:00:35 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 21:00:39 [INFO]: Connected to MongoDB 
2025-02-20 21:01:36 [INFO]: Server is running on port 3000 
2025-02-20 21:01:36 [INFO]: Environment: development 
2025-02-20 21:01:36 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 21:01:41 [INFO]: Connected to MongoDB 
2025-02-20 21:02:20 [INFO]: Server is running on port 3000 
2025-02-20 21:02:20 [INFO]: Environment: development 
2025-02-20 21:02:20 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 21:02:25 [INFO]: Connected to MongoDB 
2025-02-20 21:45:17 [INFO]: Server is running on port 3000 
2025-02-20 21:45:17 [INFO]: Environment: development 
2025-02-20 21:45:17 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 21:45:22 [INFO]: Connected to MongoDB 
2025-02-20 21:47:19 [INFO]: MongoDB disconnected 
2025-02-20 21:51:27 [INFO]: Server is running on port 3000 
2025-02-20 21:51:27 [INFO]: Environment: development 
2025-02-20 21:51:27 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 21:51:33 [INFO]: Connected to MongoDB 
2025-02-20 21:56:58 [ERROR]: Invalid email or password {}
2025-02-20 21:56:58 [ERROR]: Invalid email or password {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "john@example.com",
    "password": "password123"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-20 22:00:12 [INFO]: MongoDB disconnected 
2025-02-20 22:13:03 [INFO]: MongoDB disconnected 
2025-02-20 22:18:02 [INFO]: MongoDB disconnected 
2025-02-20 23:12:54 [INFO]: Server is running on port 3000 
2025-02-20 23:12:54 [INFO]: Environment: development 
2025-02-20 23:12:54 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:12:57 [INFO]: Server is running on port 3000 
2025-02-20 23:12:57 [INFO]: Environment: development 
2025-02-20 23:12:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:13:00 [INFO]: Connected to MongoDB 
2025-02-20 23:37:32 [INFO]: Server is running on port 3000 
2025-02-20 23:37:32 [INFO]: Environment: development 
2025-02-20 23:37:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:37:35 [INFO]: Connected to MongoDB 
2025-02-20 23:38:39 [INFO]: Server is running on port 3000 
2025-02-20 23:38:39 [INFO]: Environment: development 
2025-02-20 23:38:39 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:38:40 [INFO]: Server is running on port 3000 
2025-02-20 23:38:40 [INFO]: Environment: development 
2025-02-20 23:38:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:38:43 [INFO]: Connected to MongoDB 
2025-02-20 23:38:50 [INFO]: Server is running on port 3000 
2025-02-20 23:38:50 [INFO]: Environment: development 
2025-02-20 23:38:50 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:38:52 [INFO]: Connected to MongoDB 
2025-02-20 23:39:02 [INFO]: Server is running on port 3000 
2025-02-20 23:39:02 [INFO]: Environment: development 
2025-02-20 23:39:02 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:39:05 [INFO]: Connected to MongoDB 
2025-02-20 23:43:14 [INFO]: Server is running on port 3000 
2025-02-20 23:43:14 [INFO]: Environment: development 
2025-02-20 23:43:14 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:43:17 [INFO]: Connected to MongoDB 
2025-02-20 23:43:56 [INFO]: Server is running on port 3000 
2025-02-20 23:43:56 [INFO]: Environment: development 
2025-02-20 23:43:56 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:43:59 [INFO]: Connected to MongoDB 
2025-02-20 23:44:26 [INFO]: Server is running on port 3000 
2025-02-20 23:44:26 [INFO]: Environment: development 
2025-02-20 23:44:26 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:44:29 [INFO]: Connected to MongoDB 
2025-02-20 23:44:30 [INFO]: Server is running on port 3000 
2025-02-20 23:44:30 [INFO]: Environment: development 
2025-02-20 23:44:30 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:44:33 [INFO]: Connected to MongoDB 
2025-02-20 23:44:53 [INFO]: Server is running on port 3000 
2025-02-20 23:44:53 [INFO]: Environment: development 
2025-02-20 23:44:53 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:44:56 [INFO]: Connected to MongoDB 
2025-02-20 23:44:57 [INFO]: Server is running on port 3000 
2025-02-20 23:44:57 [INFO]: Environment: development 
2025-02-20 23:44:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:45:00 [INFO]: Connected to MongoDB 
2025-02-20 23:45:33 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-20 23:48:40 [ERROR]: upload.failed {}
2025-02-20 23:48:40 [ERROR]: upload.failed {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
    "description": "stringstringstringsthhhhhhhhhhhhhhhh",
    "price": "11111",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-20 23:49:31 [INFO]: MongoDB disconnected 
2025-02-20 23:49:37 [INFO]: Server is running on port 3000 
2025-02-20 23:49:37 [INFO]: Environment: development 
2025-02-20 23:49:37 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:49:40 [INFO]: Connected to MongoDB 
2025-02-20 23:50:33 [INFO]: Server is running on port 3000 
2025-02-20 23:50:33 [INFO]: Environment: development 
2025-02-20 23:50:33 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:50:35 [INFO]: Connected to MongoDB 
2025-02-20 23:50:39 [INFO]: Course created {
  "id": "67b75d5fafb6a48541650170"
}
2025-02-20 23:52:20 [INFO]: Course created {
  "id": "67b75dc4afb6a48541650174"
}
2025-02-20 23:53:44 [INFO]: Server is running on port 3000 
2025-02-20 23:53:44 [INFO]: Environment: development 
2025-02-20 23:53:44 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:53:47 [INFO]: Connected to MongoDB 
2025-02-20 23:53:58 [ERROR]: Course validation failed: thumbnail_id: Cast to ObjectId failed for value "course-thumbnails/yodo3gccxztnzzhvlsry" (type string) at path "thumbnail_id" because of "BSONError" {}
2025-02-20 23:53:58 [ERROR]: Course validation failed: thumbnail_id: Cast to ObjectId failed for value "course-thumbnails/yodo3gccxztnzzhvlsry" (type string) at path "thumbnail_id" because of "BSONError" {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
    "description": "stringstringstringsthhhhhhhhhhhhhhhh",
    "price": "11111",
    "status": "draft",
    "thumbnail_id": "course-thumbnails/yodo3gccxztnzzhvlsry",
    "instructor_id": "67b495ca9d35c758607e27cc"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-20 23:59:55 [INFO]: Server is running on port 3000 
2025-02-20 23:59:55 [INFO]: Environment: development 
2025-02-20 23:59:55 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:59:58 [INFO]: Connected to MongoDB 
2025-02-21 00:00:04 [ERROR]: CloudinaryFile validation failed: purpose: `course_thumbnail` is not a valid enum value for path `purpose`. {}
2025-02-21 00:00:04 [ERROR]: CloudinaryFile validation failed: purpose: `course_thumbnail` is not a valid enum value for path `purpose`. {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
    "description": "stringstringstringsthhhhhhhhhhhhhhhh",
    "price": "11111",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-21 00:00:58 [INFO]: Server is running on port 3000 
2025-02-21 00:00:58 [INFO]: Environment: development 
2025-02-21 00:00:58 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:01:01 [INFO]: Connected to MongoDB 
2025-02-21 00:01:13 [INFO]: Course created {
  "id": "67b75fd6e2e66f1197d5bec9"
}
2025-02-21 00:06:53 [ERROR]: CourseService.getById is not a function {}
2025-02-21 00:06:53 [ERROR]: CourseService.getById is not a function {
  "path": "/api/courses/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:07:23 [INFO]: Server is running on port 3000 
2025-02-21 00:07:23 [INFO]: Environment: development 
2025-02-21 00:07:23 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:07:26 [INFO]: Connected to MongoDB 
2025-02-21 00:07:30 [ERROR]: Schema hasn't been registered for model "thumbnail_id".
Use mongoose.model(name, schema) {}
2025-02-21 00:07:30 [ERROR]: Schema hasn't been registered for model "thumbnail_id".
Use mongoose.model(name, schema) {
  "path": "/api/courses/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:09:47 [ERROR]: Schema hasn't been registered for model "thumbnail_id".
Use mongoose.model(name, schema) {}
2025-02-21 00:09:47 [ERROR]: Schema hasn't been registered for model "thumbnail_id".
Use mongoose.model(name, schema) {
  "path": "/api/courses/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:10:22 [INFO]: Server is running on port 3000 
2025-02-21 00:10:22 [INFO]: Environment: development 
2025-02-21 00:10:22 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:10:25 [INFO]: Connected to MongoDB 
2025-02-21 00:10:27 [ERROR]: Cannot populate path `lessons` because it is not in your schema. Set the `strictPopulate` option to false to override. {}
2025-02-21 00:10:27 [ERROR]: Cannot populate path `lessons` because it is not in your schema. Set the `strictPopulate` option to false to override. {
  "path": "/api/courses/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:10:40 [INFO]: Server is running on port 3000 
2025-02-21 00:10:40 [INFO]: Environment: development 
2025-02-21 00:10:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:10:43 [INFO]: Connected to MongoDB 
2025-02-21 00:13:23 [INFO]: Server is running on port 3000 
2025-02-21 00:13:23 [INFO]: Environment: development 
2025-02-21 00:13:23 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:13:26 [INFO]: Connected to MongoDB 
2025-02-21 00:13:47 [INFO]: Server is running on port 3000 
2025-02-21 00:13:47 [INFO]: Environment: development 
2025-02-21 00:13:47 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:13:49 [INFO]: Connected to MongoDB 
2025-02-21 00:17:57 [INFO]: Server is running on port 3000 
2025-02-21 00:17:57 [INFO]: Environment: development 
2025-02-21 00:17:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:18:00 [INFO]: Connected to MongoDB 
2025-02-21 00:19:07 [INFO]: Server is running on port 3000 
2025-02-21 00:19:07 [INFO]: Environment: development 
2025-02-21 00:19:07 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:19:10 [INFO]: Connected to MongoDB 
2025-02-21 00:20:25 [INFO]: Server is running on port 3000 
2025-02-21 00:20:25 [INFO]: Environment: development 
2025-02-21 00:20:25 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:20:28 [INFO]: Connected to MongoDB 
2025-02-21 00:21:00 [INFO]: Server is running on port 3000 
2025-02-21 00:21:00 [INFO]: Environment: development 
2025-02-21 00:21:00 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:21:04 [INFO]: Connected to MongoDB 
2025-02-21 00:25:18 [INFO]: Server is running on port 3000 
2025-02-21 00:25:18 [INFO]: Environment: development 
2025-02-21 00:25:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:25:20 [ERROR]: Invalid token {
  "path": "/api/courses/haha/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:25:21 [INFO]: Connected to MongoDB 
2025-02-21 00:25:23 [ERROR]: Invalid token {
  "path": "/api/courses/haha/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:25:31 [ERROR]: Invalid token {
  "path": "/api/courses/haha/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:25:50 [ERROR]: Invalid token {
  "path": "/api/courses/haha/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:26:08 [ERROR]: Invalid token {
  "path": "/api/courses/haha/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:27:40 [INFO]: Server is running on port 3000 
2025-02-21 00:27:40 [INFO]: Environment: development 
2025-02-21 00:27:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:27:46 [INFO]: Connected to MongoDB 
2025-02-21 00:28:27 [INFO]: Server is running on port 3000 
2025-02-21 00:28:27 [INFO]: Environment: development 
2025-02-21 00:28:27 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:28:30 [INFO]: Connected to MongoDB 
2025-02-21 00:29:09 [INFO]: Server is running on port 3000 
2025-02-21 00:29:09 [INFO]: Environment: development 
2025-02-21 00:29:09 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:29:13 [INFO]: Connected to MongoDB 
2025-02-21 00:31:20 [INFO]: Server is running on port 3000 
2025-02-21 00:31:20 [INFO]: Environment: development 
2025-02-21 00:31:20 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:31:23 [INFO]: Connected to MongoDB 
2025-02-21 00:35:40 [INFO]: Server is running on port 3000 
2025-02-21 00:35:40 [INFO]: Environment: development 
2025-02-21 00:35:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:35:43 [INFO]: Connected to MongoDB 
2025-02-21 00:36:13 [INFO]: Server is running on port 3000 
2025-02-21 00:36:13 [INFO]: Environment: development 
2025-02-21 00:36:13 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:36:15 [INFO]: Connected to MongoDB 
2025-02-21 00:39:03 [INFO]: Server is running on port 3000 
2025-02-21 00:39:03 [INFO]: Environment: development 
2025-02-21 00:39:03 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:39:06 [INFO]: Connected to MongoDB 
2025-02-21 00:41:21 [INFO]: Server is running on port 3000 
2025-02-21 00:41:21 [INFO]: Environment: development 
2025-02-21 00:41:21 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:41:24 [INFO]: Connected to MongoDB 
2025-02-21 00:43:08 [INFO]: Server is running on port 3000 
2025-02-21 00:43:08 [INFO]: Environment: development 
2025-02-21 00:43:08 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:43:11 [INFO]: Connected to MongoDB 
2025-02-21 00:58:50 [INFO]: MongoDB disconnected 
2025-02-21 01:14:44 [INFO]: MongoDB disconnected 
2025-02-21 01:30:15 [INFO]: MongoDB disconnected 
2025-02-21 01:45:45 [INFO]: MongoDB disconnected 
2025-02-21 02:01:37 [INFO]: MongoDB disconnected 
2025-02-21 02:17:29 [INFO]: MongoDB disconnected 
2025-02-21 02:33:21 [INFO]: MongoDB disconnected 
2025-02-21 02:44:58 [INFO]: MongoDB disconnected 
2025-02-21 03:00:28 [INFO]: MongoDB disconnected 
2025-02-21 03:16:21 [INFO]: MongoDB disconnected 
2025-02-21 03:32:13 [INFO]: MongoDB disconnected 
2025-02-21 03:47:43 [INFO]: MongoDB disconnected 
2025-02-21 04:03:14 [INFO]: MongoDB disconnected 
2025-02-21 04:19:06 [INFO]: MongoDB disconnected 
2025-02-21 04:22:20 [INFO]: MongoDB disconnected 
2025-02-21 04:38:13 [INFO]: MongoDB disconnected 
2025-02-21 04:54:05 [INFO]: MongoDB disconnected 
2025-02-21 05:09:36 [INFO]: MongoDB disconnected 
2025-02-21 05:25:29 [INFO]: MongoDB disconnected 
2025-02-21 05:41:21 [INFO]: MongoDB disconnected 
2025-02-21 05:57:14 [INFO]: MongoDB disconnected 
2025-02-21 06:01:00 [INFO]: MongoDB disconnected 
2025-02-21 06:17:01 [INFO]: MongoDB disconnected 
2025-02-21 06:32:53 [INFO]: MongoDB disconnected 
2025-02-21 06:48:23 [INFO]: MongoDB disconnected 
2025-02-21 07:04:16 [INFO]: MongoDB disconnected 
2025-02-21 07:20:07 [INFO]: MongoDB disconnected 
2025-02-21 07:36:00 [INFO]: MongoDB disconnected 
2025-02-21 07:52:21 [INFO]: MongoDB disconnected 
2025-02-21 08:02:13 [INFO]: MongoDB disconnected 
2025-02-21 08:18:06 [INFO]: MongoDB disconnected 
2025-02-21 08:33:37 [INFO]: MongoDB disconnected 
2025-02-21 08:49:29 [INFO]: MongoDB disconnected 
2025-02-21 09:03:10 [INFO]: MongoDB disconnected 
2025-02-21 09:19:03 [INFO]: MongoDB disconnected 
2025-02-21 09:21:11 [INFO]: MongoDB disconnected 
2025-02-21 09:36:42 [INFO]: MongoDB disconnected 
2025-02-21 09:42:06 [INFO]: MongoDB disconnected 
2025-02-21 09:43:33 [INFO]: MongoDB disconnected 
2025-02-21 09:59:33 [INFO]: MongoDB disconnected 
2025-02-21 10:02:52 [INFO]: MongoDB disconnected 
2025-02-21 10:06:11 [INFO]: Server is running on port 3000 
2025-02-21 10:06:11 [INFO]: Environment: development 
2025-02-21 10:06:11 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:06:14 [INFO]: Connected to MongoDB 
2025-02-21 10:08:22 [INFO]: Server is running on port 3000 
2025-02-21 10:08:22 [INFO]: Environment: development 
2025-02-21 10:08:22 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:08:25 [INFO]: Connected to MongoDB 
2025-02-21 10:08:42 [ERROR]: Invalid token {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 10:08:55 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-21 10:09:32 [INFO]: Server is running on port 3000 
2025-02-21 10:09:32 [INFO]: Environment: development 
2025-02-21 10:09:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:09:36 [INFO]: Connected to MongoDB 
2025-02-21 10:09:38 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:09:38 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:11:16 [INFO]: Server is running on port 3000 
2025-02-21 10:11:16 [INFO]: Environment: development 
2025-02-21 10:11:16 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:11:20 [INFO]: Connected to MongoDB 
2025-02-21 10:11:22 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:11:22 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:18:27 [INFO]: MongoDB disconnected 
2025-02-21 10:34:23 [INFO]: Course created {
  "id": "67b7f43fe1eb5507e5a3daf5"
}
2025-02-21 10:34:31 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:34:31 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:41:39 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:41:39 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:45:52 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:45:52 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:47:12 [INFO]: Server is running on port 3000 
2025-02-21 10:47:12 [INFO]: Environment: development 
2025-02-21 10:47:12 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:47:15 [INFO]: Connected to MongoDB 
2025-02-21 10:47:21 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:47:21 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:48:48 [INFO]: Server is running on port 3000 
2025-02-21 10:48:48 [INFO]: Environment: development 
2025-02-21 10:48:48 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:48:51 [INFO]: Connected to MongoDB 
2025-02-21 10:49:05 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:49:05 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:49:47 [INFO]: Server is running on port 3000 
2025-02-21 10:49:47 [INFO]: Environment: development 
2025-02-21 10:49:47 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:49:50 [INFO]: Connected to MongoDB 
2025-02-21 10:49:55 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:49:55 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:55:47 [INFO]: Server is running on port 3000 
2025-02-21 10:55:47 [INFO]: Environment: development 
2025-02-21 10:55:47 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:55:50 [INFO]: Connected to MongoDB 
2025-02-21 10:55:56 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:55:56 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:56:15 [INFO]: Server is running on port 3000 
2025-02-21 10:56:15 [INFO]: Environment: development 
2025-02-21 10:56:15 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:56:17 [INFO]: Connected to MongoDB 
2025-02-21 10:56:27 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:56:27 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:57:04 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:57:04 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 11:14:08 [INFO]: MongoDB disconnected 
2025-02-21 11:59:52 [INFO]: Server is running on port 3000 
2025-02-21 11:59:52 [INFO]: Environment: development 
2025-02-21 11:59:52 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 11:59:55 [INFO]: Connected to MongoDB 
2025-02-21 12:00:19 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 12:00:19 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 12:00:26 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 12:00:26 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 12:00:30 [INFO]: Server is running on port 3000 
2025-02-21 12:00:30 [INFO]: Environment: development 
2025-02-21 12:00:30 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:00:33 [INFO]: Connected to MongoDB 
2025-02-21 12:00:36 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 12:00:36 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 12:01:27 [INFO]: Server is running on port 3000 
2025-02-21 12:01:27 [INFO]: Environment: development 
2025-02-21 12:01:27 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:01:30 [ERROR]: Cast to ObjectId failed for value "{ page: '1', limit: '10' }" (type Object) at path "_id" for model "Course" {}
2025-02-21 12:01:30 [ERROR]: Cast to ObjectId failed for value "{ page: '1', limit: '10' }" (type Object) at path "_id" for model "Course" {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 12:01:31 [INFO]: Connected to MongoDB 
2025-02-21 12:01:32 [INFO]: Server is running on port 3000 
2025-02-21 12:01:32 [INFO]: Environment: development 
2025-02-21 12:01:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:01:36 [INFO]: Connected to MongoDB 
2025-02-21 12:01:36 [ERROR]: Cast to ObjectId failed for value "{ page: '1', limit: '10' }" (type Object) at path "_id" for model "Course" {}
2025-02-21 12:01:36 [ERROR]: Cast to ObjectId failed for value "{ page: '1', limit: '10' }" (type Object) at path "_id" for model "Course" {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 12:01:55 [INFO]: Server is running on port 3000 
2025-02-21 12:01:55 [INFO]: Environment: development 
2025-02-21 12:01:55 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:01:58 [ERROR]: course.fetchError {}
2025-02-21 12:01:58 [ERROR]: course.fetchError {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 12:01:58 [INFO]: Connected to MongoDB 
2025-02-21 12:02:12 [INFO]: Server is running on port 3000 
2025-02-21 12:02:12 [INFO]: Environment: development 
2025-02-21 12:02:12 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:02:15 [INFO]: Connected to MongoDB 
2025-02-21 12:02:20 [ERROR]: course.fetchError {}
2025-02-21 12:02:20 [ERROR]: course.fetchError {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 12:02:29 [INFO]: Server is running on port 3000 
2025-02-21 12:02:29 [INFO]: Environment: development 
2025-02-21 12:02:29 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:02:32 [INFO]: Connected to MongoDB 
2025-02-21 12:02:37 [ERROR]: Unhandled Rejection: courseData is not defined {
  "stack": "ReferenceError: courseData is not defined\n    at CourseService._transformCourseData (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/course.service.js:304:5)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/course.service.js:35:29\n    at Array.map (<anonymous>)\n    at CourseService.getAll (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/course.service.js:33:42)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async CourseController.getAll (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/course.controller.js:13:23)"
}
2025-02-21 12:02:48 [INFO]: Server is running on port 3000 
2025-02-21 12:02:48 [INFO]: Environment: development 
2025-02-21 12:02:48 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:02:52 [INFO]: Connected to MongoDB 
2025-02-21 12:02:56 [ERROR]: Unhandled Rejection: courseData is not defined {
  "stack": "ReferenceError: courseData is not defined\n    at CourseService._transformCourseData (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/course.service.js:304:5)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/course.service.js:35:29\n    at Array.map (<anonymous>)\n    at CourseService.getAll (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/course.service.js:33:42)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async CourseController.getAll (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/course.controller.js:13:23)"
}
2025-02-21 12:03:43 [INFO]: Server is running on port 3000 
2025-02-21 12:03:43 [INFO]: Environment: development 
2025-02-21 12:03:43 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:03:47 [INFO]: Connected to MongoDB 
2025-02-21 12:04:12 [INFO]: Server is running on port 3000 
2025-02-21 12:04:12 [INFO]: Environment: development 
2025-02-21 12:04:12 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:04:15 [INFO]: Connected to MongoDB 
2025-02-21 12:35:14 [INFO]: MongoDB disconnected 
2025-02-21 12:38:33 [INFO]: MongoDB disconnected 
2025-02-21 12:38:51 [INFO]: Server is running on port 3000 
2025-02-21 12:38:51 [INFO]: Environment: development 
2025-02-21 12:38:51 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:38:55 [INFO]: Connected to MongoDB 
2025-02-21 12:40:18 [INFO]: Server is running on port 3000 
2025-02-21 12:40:18 [INFO]: Environment: development 
2025-02-21 12:40:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:40:21 [INFO]: Connected to MongoDB 
2025-02-21 12:43:05 [INFO]: Server is running on port 3000 
2025-02-21 12:43:05 [INFO]: Environment: development 
2025-02-21 12:43:05 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:43:08 [INFO]: Connected to MongoDB 
2025-02-21 12:44:12 [INFO]: Server is running on port 3000 
2025-02-21 12:44:12 [INFO]: Environment: development 
2025-02-21 12:44:12 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:44:15 [INFO]: Connected to MongoDB 
2025-02-21 12:44:49 [INFO]: Server is running on port 3000 
2025-02-21 12:44:49 [INFO]: Environment: development 
2025-02-21 12:44:49 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:44:52 [INFO]: Connected to MongoDB 
2025-02-21 12:45:02 [INFO]: Server is running on port 3000 
2025-02-21 12:45:02 [INFO]: Environment: development 
2025-02-21 12:45:02 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:45:05 [INFO]: Connected to MongoDB 
2025-02-21 12:45:39 [INFO]: Server is running on port 3000 
2025-02-21 12:45:39 [INFO]: Environment: development 
2025-02-21 12:45:39 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:45:42 [INFO]: Connected to MongoDB 
2025-02-21 12:53:56 [INFO]: Server is running on port 3000 
2025-02-21 12:53:56 [INFO]: Environment: development 
2025-02-21 12:53:56 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:53:59 [INFO]: Connected to MongoDB 
2025-02-21 12:54:08 [ERROR]: Invalid token {
  "path": "/api/vnpay/create_payment_url",
  "method": "POST",
  "body": {
    "amount": 10000,
    "bankCode": "NCB",
    "language": "vn"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 12:54:34 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-21 12:54:45 [ERROR]: Order validation failed: total_price: Path `total_price` is required. {}
2025-02-21 12:54:45 [ERROR]: Order validation failed: total_price: Path `total_price` is required. {
  "path": "/api/vnpay/create_payment_url",
  "method": "POST",
  "body": {
    "amount": 10000,
    "bankCode": "NCB",
    "language": "vn"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-21 12:55:38 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/vnpay/create_payment_url",
  "method": "POST",
  "body": {
    "total_price": 10000,
    "bankCode": "NCB",
    "language": "vn"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-21 12:55:50 [ERROR]: Order validation failed: total_price: Path `total_price` is required. {}
2025-02-21 12:55:50 [ERROR]: Order validation failed: total_price: Path `total_price` is required. {
  "path": "/api/vnpay/create_payment_url",
  "method": "POST",
  "body": {
    "amount": 10000,
    "total_price": 1111,
    "bankCode": "NCB",
    "language": "vn"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-21 12:56:07 [ERROR]: Order validation failed: total_price: Path `total_price` is required. {}
2025-02-21 12:56:07 [ERROR]: Order validation failed: total_price: Path `total_price` is required. {
  "path": "/api/vnpay/create_payment_url",
  "method": "POST",
  "body": {
    "amount": 10000,
    "total_price": 1111,
    "bankCode": "NCB",
    "language": "vn"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-21 12:57:02 [INFO]: Server is running on port 3000 
2025-02-21 12:57:02 [INFO]: Environment: development 
2025-02-21 12:57:02 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:57:05 [INFO]: Connected to MongoDB 
2025-02-21 12:57:08 [INFO]: Payment URL created {
  "orderId": "21125706",
  "amount": 10000,
  "userId": "67b495ca9d35c758607e27cc"
}
2025-02-21 12:57:08 [INFO]: Payment URL created {
  "userId": "67b495ca9d35c758607e27cc",
  "amount": 10000
}
2025-02-21 12:57:45 [INFO]: Payment URL created {
  "orderId": "21125745",
  "amount": 10000,
  "userId": "67b495ca9d35c758607e27cc"
}
2025-02-21 12:57:45 [INFO]: Payment URL created {
  "userId": "67b495ca9d35c758607e27cc",
  "amount": 10000
}
2025-02-21 12:59:59 [INFO]: Server is running on port 3000 
2025-02-21 12:59:59 [INFO]: Environment: development 
2025-02-21 12:59:59 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 13:00:03 [INFO]: Connected to MongoDB 
2025-02-21 13:00:05 [INFO]: Payment URL created {
  "orderId": "21130003",
  "amount": 10000,
  "userId": "67b495ca9d35c758607e27cc"
}
2025-02-21 13:00:05 [INFO]: Payment URL created {
  "userId": "67b495ca9d35c758607e27cc",
  "amount": 10000
}
2025-02-21 13:16:55 [INFO]: MongoDB disconnected 
2025-02-21 13:25:28 [INFO]: Server is running on port 3000 
2025-02-21 13:25:28 [INFO]: Environment: development 
2025-02-21 13:25:28 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 13:25:32 [INFO]: Connected to MongoDB 
2025-02-21 13:25:53 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-21 13:26:14 [INFO]: Payment URL created {
  "orderId": "21132614",
  "amount": 10000,
  "userId": "67b495ca9d35c758607e27cc"
}
2025-02-21 13:26:14 [INFO]: Payment URL created {
  "userId": "67b495ca9d35c758607e27cc",
  "amount": 10000
}
2025-02-21 13:28:54 [INFO]: Server is running on port 3000 
2025-02-21 13:28:54 [INFO]: Environment: development 
2025-02-21 13:28:54 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 13:28:58 [INFO]: Connected to MongoDB 
2025-02-21 13:29:00 [INFO]: Payment URL created {
  "orderId": "21132856",
  "amount": 10000,
  "userId": "67b495ca9d35c758607e27cc"
}
2025-02-21 13:29:00 [INFO]: Payment URL created {
  "userId": "67b495ca9d35c758607e27cc",
  "amount": 10000
}
2025-02-21 13:29:21 [INFO]: Server is running on port 3000 
2025-02-21 13:29:21 [INFO]: Environment: development 
2025-02-21 13:29:21 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 13:29:24 [INFO]: Connected to MongoDB 
2025-02-21 13:29:26 [INFO]: Payment URL created {
  "orderId": "21132923",
  "amount": 10000,
  "userId": "67b495ca9d35c758607e27cc"
}
2025-02-21 13:29:26 [INFO]: Payment URL created {
  "userId": "67b495ca9d35c758607e27cc",
  "amount": 10000
}
2025-02-21 13:58:32 [INFO]: Server is running on port 3000 
2025-02-21 13:58:32 [INFO]: Environment: development 
2025-02-21 13:58:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 13:58:35 [INFO]: Connected to MongoDB 
2025-02-21 13:59:41 [INFO]: Server is running on port 3000 
2025-02-21 13:59:41 [INFO]: Environment: development 
2025-02-21 13:59:41 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 13:59:44 [INFO]: Connected to MongoDB 
2025-02-21 13:59:51 [ERROR]: Invalid token {
  "path": "/api/momo/create",
  "method": "POST",
  "body": {
    "amount": 10000,
    "orderInfo": "Thanh toan khoa hoc ABC"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 14:00:08 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-21 14:00:17 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": "s",
  "60": ":",
  "61": "/",
  "62": "/",
  "63": "w",
  "64": "e",
  "65": "b",
  "66": "h",
  "67": "o",
  "68": "o",
  "69": "k",
  "70": ".",
  "71": "s",
  "72": "i",
  "73": "t",
  "74": "e",
  "75": "/",
  "76": "b",
  "77": "3",
  "78": "0",
  "79": "8",
  "80": "8",
  "81": "a",
  "82": "6",
  "83": "a",
  "84": "-",
  "85": "2",
  "86": "d",
  "87": "1",
  "88": "7",
  "89": "-",
  "90": "4",
  "91": "f",
  "92": "8",
  "93": "d",
  "94": "-",
  "95": "a",
  "96": "3",
  "97": "8",
  "98": "3",
  "99": "-",
  "100": "7",
  "101": "1",
  "102": "3",
  "103": "8",
  "104": "9",
  "105": "a",
  "106": "6",
  "107": "c",
  "108": "6",
  "109": "0",
  "110": "0",
  "111": "b",
  "112": "&",
  "113": "o",
  "114": "r",
  "115": "d",
  "116": "e",
  "117": "r",
  "118": "I",
  "119": "d",
  "120": "=",
  "121": "1",
  "122": "7",
  "123": "4",
  "124": "0",
  "125": "1",
  "126": "2",
  "127": "1",
  "128": "2",
  "129": "1",
  "130": "7",
  "131": "7",
  "132": "5",
  "133": "2",
  "134": "_",
  "135": "6",
  "136": "7",
  "137": "b",
  "138": "4",
  "139": "9",
  "140": "5",
  "141": "c",
  "142": "a",
  "143": "9",
  "144": "d",
  "145": "3",
  "146": "5",
  "147": "c",
  "148": "7",
  "149": "5",
  "150": "8",
  "151": "6",
  "152": "0",
  "153": "7",
  "154": "e",
  "155": "2",
  "156": "7",
  "157": "c",
  "158": "c",
  "159": "&",
  "160": "o",
  "161": "r",
  "162": "d",
  "163": "e",
  "164": "r",
  "165": "I",
  "166": "n",
  "167": "f",
  "168": "o",
  "169": "=",
  "170": "P",
  "171": "a",
  "172": "y",
  "173": "m",
  "174": "e",
  "175": "n",
  "176": "t",
  "177": " ",
  "178": "f",
  "179": "o",
  "180": "r",
  "181": " ",
  "182": "o",
  "183": "r",
  "184": "d",
  "185": "e",
  "186": "r",
  "187": " ",
  "188": "1",
  "189": "7",
  "190": "4",
  "191": "0",
  "192": "1",
  "193": "2",
  "194": "1",
  "195": "2",
  "196": "1",
  "197": "7",
  "198": "7",
  "199": "5",
  "200": "2",
  "201": "_",
  "202": "6",
  "203": "7",
  "204": "b",
  "205": "4",
  "206": "9",
  "207": "5",
  "208": "c",
  "209": "a",
  "210": "9",
  "211": "d",
  "212": "3",
  "213": "5",
  "214": "c",
  "215": "7",
  "216": "5",
  "217": "8",
  "218": "6",
  "219": "0",
  "220": "7",
  "221": "e",
  "222": "2",
  "223": "7",
  "224": "c",
  "225": "c",
  "226": "&",
  "227": "p",
  "228": "a",
  "229": "r",
  "230": "t",
  "231": "n",
  "232": "e",
  "233": "r",
  "234": "C",
  "235": "o",
  "236": "d",
  "237": "e",
  "238": "=",
  "239": "M",
  "240": "O",
  "241": "M",
  "242": "O",
  "243": "&",
  "244": "r",
  "245": "e",
  "246": "d",
  "247": "i",
  "248": "r",
  "249": "e",
  "250": "c",
  "251": "t",
  "252": "U",
  "253": "r",
  "254": "l",
  "255": "=",
  "256": "h",
  "257": "t",
  "258": "t",
  "259": "p",
  "260": "s",
  "261": ":",
  "262": "/",
  "263": "/",
  "264": "w",
  "265": "e",
  "266": "b",
  "267": "h",
  "268": "o",
  "269": "o",
  "270": "k",
  "271": ".",
  "272": "s",
  "273": "i",
  "274": "t",
  "275": "e",
  "276": "/",
  "277": "b",
  "278": "3",
  "279": "0",
  "280": "8",
  "281": "8",
  "282": "a",
  "283": "6",
  "284": "a",
  "285": "-",
  "286": "2",
  "287": "d",
  "288": "1",
  "289": "7",
  "290": "-",
  "291": "4",
  "292": "f",
  "293": "8",
  "294": "d",
  "295": "-",
  "296": "a",
  "297": "3",
  "298": "8",
  "299": "3",
  "300": "-",
  "301": "7",
  "302": "1",
  "303": "3",
  "304": "8",
  "305": "9",
  "306": "a",
  "307": "6",
  "308": "c",
  "309": "6",
  "310": "0",
  "311": "0",
  "312": "b",
  "313": "&",
  "314": "r",
  "315": "e",
  "316": "q",
  "317": "u",
  "318": "e",
  "319": "s",
  "320": "t",
  "321": "I",
  "322": "d",
  "323": "=",
  "324": "1",
  "325": "7",
  "326": "4",
  "327": "0",
  "328": "1",
  "329": "2",
  "330": "1",
  "331": "2",
  "332": "1",
  "333": "7",
  "334": "7",
  "335": "5",
  "336": "2",
  "337": "_",
  "338": "6",
  "339": "7",
  "340": "b",
  "341": "4",
  "342": "9",
  "343": "5",
  "344": "c",
  "345": "a",
  "346": "9",
  "347": "d",
  "348": "3",
  "349": "5",
  "350": "c",
  "351": "7",
  "352": "5",
  "353": "8",
  "354": "6",
  "355": "0",
  "356": "7",
  "357": "e",
  "358": "2",
  "359": "7",
  "360": "c",
  "361": "c",
  "362": "&",
  "363": "r",
  "364": "e",
  "365": "q",
  "366": "u",
  "367": "e",
  "368": "s",
  "369": "t",
  "370": "T",
  "371": "y",
  "372": "p",
  "373": "e",
  "374": "=",
  "375": "p",
  "376": "a",
  "377": "y",
  "378": "W",
  "379": "i",
  "380": "t",
  "381": "h",
  "382": "M",
  "383": "e",
  "384": "t",
  "385": "h",
  "386": "o",
  "387": "d"
}
2025-02-21 14:00:17 [INFO]: Signature: {
  "0": "2",
  "1": "3",
  "2": "1",
  "3": "0",
  "4": "7",
  "5": "f",
  "6": "6",
  "7": "4",
  "8": "b",
  "9": "c",
  "10": "4",
  "11": "3",
  "12": "8",
  "13": "3",
  "14": "0",
  "15": "b",
  "16": "a",
  "17": "d",
  "18": "3",
  "19": "a",
  "20": "a",
  "21": "a",
  "22": "d",
  "23": "d",
  "24": "a",
  "25": "7",
  "26": "5",
  "27": "2",
  "28": "6",
  "29": "1",
  "30": "e",
  "31": "4",
  "32": "3",
  "33": "d",
  "34": "d",
  "35": "e",
  "36": "a",
  "37": "5",
  "38": "2",
  "39": "9",
  "40": "b",
  "41": "f",
  "42": "f",
  "43": "9",
  "44": "2",
  "45": "9",
  "46": "8",
  "47": "0",
  "48": "c",
  "49": "3",
  "50": "0",
  "51": "9",
  "52": "1",
  "53": "0",
  "54": "3",
  "55": "f",
  "56": "6",
  "57": "b",
  "58": "a",
  "59": "3",
  "60": "0",
  "61": "2",
  "62": "f",
  "63": "a"
}
2025-02-21 14:00:17 [INFO]: MoMo API Response: {
  "statusCode": 200,
  "resultCode": 0
}
2025-02-21 14:00:17 [ERROR]: Error creating MoMo payment: Order validation failed: total_price: Path `total_price` is required., user_id: Path `user_id` is required. {
  "errors": {
    "total_price": {
      "name": "ValidatorError",
      "message": "Path `total_price` is required.",
      "properties": {
        "message": "Path `total_price` is required.",
        "type": "required",
        "path": "total_price"
      },
      "kind": "required",
      "path": "total_price"
    },
    "user_id": {
      "name": "ValidatorError",
      "message": "Path `user_id` is required.",
      "properties": {
        "message": "Path `user_id` is required.",
        "type": "required",
        "path": "user_id"
      },
      "kind": "required",
      "path": "user_id"
    }
  },
  "_message": "Order validation failed",
  "stack": "ValidationError: Order validation failed: total_price: Path `total_price` is required., user_id: Path `user_id` is required.\n    at Document.invalidate (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/document.js:3219:32)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/document.js:3012:17\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)"
}
2025-02-21 14:00:17 [ERROR]: Order validation failed: total_price: Path `total_price` is required., user_id: Path `user_id` is required. {}
2025-02-21 14:00:17 [ERROR]: Order validation failed: total_price: Path `total_price` is required., user_id: Path `user_id` is required. {
  "path": "/api/momo/create",
  "method": "POST",
  "body": {
    "amount": 10000,
    "orderInfo": "Thanh toan khoa hoc ABC"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-21 14:02:06 [INFO]: Server is running on port 3000 
2025-02-21 14:02:06 [INFO]: Environment: development 
2025-02-21 14:02:06 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 14:02:08 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": "s",
  "60": ":",
  "61": "/",
  "62": "/",
  "63": "w",
  "64": "e",
  "65": "b",
  "66": "h",
  "67": "o",
  "68": "o",
  "69": "k",
  "70": ".",
  "71": "s",
  "72": "i",
  "73": "t",
  "74": "e",
  "75": "/",
  "76": "b",
  "77": "3",
  "78": "0",
  "79": "8",
  "80": "8",
  "81": "a",
  "82": "6",
  "83": "a",
  "84": "-",
  "85": "2",
  "86": "d",
  "87": "1",
  "88": "7",
  "89": "-",
  "90": "4",
  "91": "f",
  "92": "8",
  "93": "d",
  "94": "-",
  "95": "a",
  "96": "3",
  "97": "8",
  "98": "3",
  "99": "-",
  "100": "7",
  "101": "1",
  "102": "3",
  "103": "8",
  "104": "9",
  "105": "a",
  "106": "6",
  "107": "c",
  "108": "6",
  "109": "0",
  "110": "0",
  "111": "b",
  "112": "&",
  "113": "o",
  "114": "r",
  "115": "d",
  "116": "e",
  "117": "r",
  "118": "I",
  "119": "d",
  "120": "=",
  "121": "1",
  "122": "7",
  "123": "4",
  "124": "0",
  "125": "1",
  "126": "2",
  "127": "1",
  "128": "3",
  "129": "2",
  "130": "8",
  "131": "0",
  "132": "4",
  "133": "0",
  "134": "_",
  "135": "6",
  "136": "7",
  "137": "b",
  "138": "4",
  "139": "9",
  "140": "5",
  "141": "c",
  "142": "a",
  "143": "9",
  "144": "d",
  "145": "3",
  "146": "5",
  "147": "c",
  "148": "7",
  "149": "5",
  "150": "8",
  "151": "6",
  "152": "0",
  "153": "7",
  "154": "e",
  "155": "2",
  "156": "7",
  "157": "c",
  "158": "c",
  "159": "&",
  "160": "o",
  "161": "r",
  "162": "d",
  "163": "e",
  "164": "r",
  "165": "I",
  "166": "n",
  "167": "f",
  "168": "o",
  "169": "=",
  "170": "P",
  "171": "a",
  "172": "y",
  "173": "m",
  "174": "e",
  "175": "n",
  "176": "t",
  "177": " ",
  "178": "f",
  "179": "o",
  "180": "r",
  "181": " ",
  "182": "o",
  "183": "r",
  "184": "d",
  "185": "e",
  "186": "r",
  "187": " ",
  "188": "1",
  "189": "7",
  "190": "4",
  "191": "0",
  "192": "1",
  "193": "2",
  "194": "1",
  "195": "3",
  "196": "2",
  "197": "8",
  "198": "0",
  "199": "4",
  "200": "0",
  "201": "_",
  "202": "6",
  "203": "7",
  "204": "b",
  "205": "4",
  "206": "9",
  "207": "5",
  "208": "c",
  "209": "a",
  "210": "9",
  "211": "d",
  "212": "3",
  "213": "5",
  "214": "c",
  "215": "7",
  "216": "5",
  "217": "8",
  "218": "6",
  "219": "0",
  "220": "7",
  "221": "e",
  "222": "2",
  "223": "7",
  "224": "c",
  "225": "c",
  "226": "&",
  "227": "p",
  "228": "a",
  "229": "r",
  "230": "t",
  "231": "n",
  "232": "e",
  "233": "r",
  "234": "C",
  "235": "o",
  "236": "d",
  "237": "e",
  "238": "=",
  "239": "M",
  "240": "O",
  "241": "M",
  "242": "O",
  "243": "&",
  "244": "r",
  "245": "e",
  "246": "d",
  "247": "i",
  "248": "r",
  "249": "e",
  "250": "c",
  "251": "t",
  "252": "U",
  "253": "r",
  "254": "l",
  "255": "=",
  "256": "h",
  "257": "t",
  "258": "t",
  "259": "p",
  "260": "s",
  "261": ":",
  "262": "/",
  "263": "/",
  "264": "w",
  "265": "e",
  "266": "b",
  "267": "h",
  "268": "o",
  "269": "o",
  "270": "k",
  "271": ".",
  "272": "s",
  "273": "i",
  "274": "t",
  "275": "e",
  "276": "/",
  "277": "b",
  "278": "3",
  "279": "0",
  "280": "8",
  "281": "8",
  "282": "a",
  "283": "6",
  "284": "a",
  "285": "-",
  "286": "2",
  "287": "d",
  "288": "1",
  "289": "7",
  "290": "-",
  "291": "4",
  "292": "f",
  "293": "8",
  "294": "d",
  "295": "-",
  "296": "a",
  "297": "3",
  "298": "8",
  "299": "3",
  "300": "-",
  "301": "7",
  "302": "1",
  "303": "3",
  "304": "8",
  "305": "9",
  "306": "a",
  "307": "6",
  "308": "c",
  "309": "6",
  "310": "0",
  "311": "0",
  "312": "b",
  "313": "&",
  "314": "r",
  "315": "e",
  "316": "q",
  "317": "u",
  "318": "e",
  "319": "s",
  "320": "t",
  "321": "I",
  "322": "d",
  "323": "=",
  "324": "1",
  "325": "7",
  "326": "4",
  "327": "0",
  "328": "1",
  "329": "2",
  "330": "1",
  "331": "3",
  "332": "2",
  "333": "8",
  "334": "0",
  "335": "4",
  "336": "0",
  "337": "_",
  "338": "6",
  "339": "7",
  "340": "b",
  "341": "4",
  "342": "9",
  "343": "5",
  "344": "c",
  "345": "a",
  "346": "9",
  "347": "d",
  "348": "3",
  "349": "5",
  "350": "c",
  "351": "7",
  "352": "5",
  "353": "8",
  "354": "6",
  "355": "0",
  "356": "7",
  "357": "e",
  "358": "2",
  "359": "7",
  "360": "c",
  "361": "c",
  "362": "&",
  "363": "r",
  "364": "e",
  "365": "q",
  "366": "u",
  "367": "e",
  "368": "s",
  "369": "t",
  "370": "T",
  "371": "y",
  "372": "p",
  "373": "e",
  "374": "=",
  "375": "p",
  "376": "a",
  "377": "y",
  "378": "W",
  "379": "i",
  "380": "t",
  "381": "h",
  "382": "M",
  "383": "e",
  "384": "t",
  "385": "h",
  "386": "o",
  "387": "d"
}
2025-02-21 14:02:08 [INFO]: Signature: {
  "0": "8",
  "1": "f",
  "2": "e",
  "3": "3",
  "4": "d",
  "5": "3",
  "6": "e",
  "7": "3",
  "8": "6",
  "9": "7",
  "10": "d",
  "11": "e",
  "12": "1",
  "13": "0",
  "14": "3",
  "15": "0",
  "16": "2",
  "17": "d",
  "18": "9",
  "19": "4",
  "20": "a",
  "21": "3",
  "22": "7",
  "23": "6",
  "24": "e",
  "25": "7",
  "26": "7",
  "27": "6",
  "28": "8",
  "29": "5",
  "30": "f",
  "31": "5",
  "32": "c",
  "33": "3",
  "34": "e",
  "35": "7",
  "36": "c",
  "37": "b",
  "38": "f",
  "39": "f",
  "40": "2",
  "41": "e",
  "42": "b",
  "43": "d",
  "44": "3",
  "45": "7",
  "46": "1",
  "47": "c",
  "48": "5",
  "49": "3",
  "50": "b",
  "51": "7",
  "52": "e",
  "53": "a",
  "54": "d",
  "55": "c",
  "56": "7",
  "57": "2",
  "58": "6",
  "59": "5",
  "60": "0",
  "61": "3",
  "62": "3",
  "63": "1"
}
2025-02-21 14:02:08 [INFO]: MoMo API Response: {
  "statusCode": 200,
  "resultCode": 0
}
2025-02-21 14:02:08 [ERROR]: Error creating MoMo payment: userId is not defined {
  "stack": "ReferenceError: userId is not defined\n    at MoMoService.createPaymentUrl (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/momo.service.js:80:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async MoMoController.createPayment (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/momo.controller.js:22:27)"
}
2025-02-21 14:02:08 [ERROR]: userId is not defined {}
2025-02-21 14:02:08 [ERROR]: userId is not defined {
  "path": "/api/momo/create",
  "method": "POST",
  "body": {
    "amount": 10000,
    "orderInfo": "Thanh toan khoa hoc ABC"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-21 14:02:09 [INFO]: Connected to MongoDB 
2025-02-21 14:02:21 [INFO]: Server is running on port 3000 
2025-02-21 14:02:21 [INFO]: Environment: development 
2025-02-21 14:02:21 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 14:02:24 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": "s",
  "60": ":",
  "61": "/",
  "62": "/",
  "63": "w",
  "64": "e",
  "65": "b",
  "66": "h",
  "67": "o",
  "68": "o",
  "69": "k",
  "70": ".",
  "71": "s",
  "72": "i",
  "73": "t",
  "74": "e",
  "75": "/",
  "76": "b",
  "77": "3",
  "78": "0",
  "79": "8",
  "80": "8",
  "81": "a",
  "82": "6",
  "83": "a",
  "84": "-",
  "85": "2",
  "86": "d",
  "87": "1",
  "88": "7",
  "89": "-",
  "90": "4",
  "91": "f",
  "92": "8",
  "93": "d",
  "94": "-",
  "95": "a",
  "96": "3",
  "97": "8",
  "98": "3",
  "99": "-",
  "100": "7",
  "101": "1",
  "102": "3",
  "103": "8",
  "104": "9",
  "105": "a",
  "106": "6",
  "107": "c",
  "108": "6",
  "109": "0",
  "110": "0",
  "111": "b",
  "112": "&",
  "113": "o",
  "114": "r",
  "115": "d",
  "116": "e",
  "117": "r",
  "118": "I",
  "119": "d",
  "120": "=",
  "121": "1",
  "122": "7",
  "123": "4",
  "124": "0",
  "125": "1",
  "126": "2",
  "127": "1",
  "128": "3",
  "129": "4",
  "130": "4",
  "131": "1",
  "132": "7",
  "133": "7",
  "134": "_",
  "135": "6",
  "136": "7",
  "137": "b",
  "138": "4",
  "139": "9",
  "140": "5",
  "141": "c",
  "142": "a",
  "143": "9",
  "144": "d",
  "145": "3",
  "146": "5",
  "147": "c",
  "148": "7",
  "149": "5",
  "150": "8",
  "151": "6",
  "152": "0",
  "153": "7",
  "154": "e",
  "155": "2",
  "156": "7",
  "157": "c",
  "158": "c",
  "159": "&",
  "160": "o",
  "161": "r",
  "162": "d",
  "163": "e",
  "164": "r",
  "165": "I",
  "166": "n",
  "167": "f",
  "168": "o",
  "169": "=",
  "170": "P",
  "171": "a",
  "172": "y",
  "173": "m",
  "174": "e",
  "175": "n",
  "176": "t",
  "177": " ",
  "178": "f",
  "179": "o",
  "180": "r",
  "181": " ",
  "182": "o",
  "183": "r",
  "184": "d",
  "185": "e",
  "186": "r",
  "187": " ",
  "188": "1",
  "189": "7",
  "190": "4",
  "191": "0",
  "192": "1",
  "193": "2",
  "194": "1",
  "195": "3",
  "196": "4",
  "197": "4",
  "198": "1",
  "199": "7",
  "200": "7",
  "201": "_",
  "202": "6",
  "203": "7",
  "204": "b",
  "205": "4",
  "206": "9",
  "207": "5",
  "208": "c",
  "209": "a",
  "210": "9",
  "211": "d",
  "212": "3",
  "213": "5",
  "214": "c",
  "215": "7",
  "216": "5",
  "217": "8",
  "218": "6",
  "219": "0",
  "220": "7",
  "221": "e",
  "222": "2",
  "223": "7",
  "224": "c",
  "225": "c",
  "226": "&",
  "227": "p",
  "228": "a",
  "229": "r",
  "230": "t",
  "231": "n",
  "232": "e",
  "233": "r",
  "234": "C",
  "235": "o",
  "236": "d",
  "237": "e",
  "238": "=",
  "239": "M",
  "240": "O",
  "241": "M",
  "242": "O",
  "243": "&",
  "244": "r",
  "245": "e",
  "246": "d",
  "247": "i",
  "248": "r",
  "249": "e",
  "250": "c",
  "251": "t",
  "252": "U",
  "253": "r",
  "254": "l",
  "255": "=",
  "256": "h",
  "257": "t",
  "258": "t",
  "259": "p",
  "260": "s",
  "261": ":",
  "262": "/",
  "263": "/",
  "264": "w",
  "265": "e",
  "266": "b",
  "267": "h",
  "268": "o",
  "269": "o",
  "270": "k",
  "271": ".",
  "272": "s",
  "273": "i",
  "274": "t",
  "275": "e",
  "276": "/",
  "277": "b",
  "278": "3",
  "279": "0",
  "280": "8",
  "281": "8",
  "282": "a",
  "283": "6",
  "284": "a",
  "285": "-",
  "286": "2",
  "287": "d",
  "288": "1",
  "289": "7",
  "290": "-",
  "291": "4",
  "292": "f",
  "293": "8",
  "294": "d",
  "295": "-",
  "296": "a",
  "297": "3",
  "298": "8",
  "299": "3",
  "300": "-",
  "301": "7",
  "302": "1",
  "303": "3",
  "304": "8",
  "305": "9",
  "306": "a",
  "307": "6",
  "308": "c",
  "309": "6",
  "310": "0",
  "311": "0",
  "312": "b",
  "313": "&",
  "314": "r",
  "315": "e",
  "316": "q",
  "317": "u",
  "318": "e",
  "319": "s",
  "320": "t",
  "321": "I",
  "322": "d",
  "323": "=",
  "324": "1",
  "325": "7",
  "326": "4",
  "327": "0",
  "328": "1",
  "329": "2",
  "330": "1",
  "331": "3",
  "332": "4",
  "333": "4",
  "334": "1",
  "335": "7",
  "336": "7",
  "337": "_",
  "338": "6",
  "339": "7",
  "340": "b",
  "341": "4",
  "342": "9",
  "343": "5",
  "344": "c",
  "345": "a",
  "346": "9",
  "347": "d",
  "348": "3",
  "349": "5",
  "350": "c",
  "351": "7",
  "352": "5",
  "353": "8",
  "354": "6",
  "355": "0",
  "356": "7",
  "357": "e",
  "358": "2",
  "359": "7",
  "360": "c",
  "361": "c",
  "362": "&",
  "363": "r",
  "364": "e",
  "365": "q",
  "366": "u",
  "367": "e",
  "368": "s",
  "369": "t",
  "370": "T",
  "371": "y",
  "372": "p",
  "373": "e",
  "374": "=",
  "375": "p",
  "376": "a",
  "377": "y",
  "378": "W",
  "379": "i",
  "380": "t",
  "381": "h",
  "382": "M",
  "383": "e",
  "384": "t",
  "385": "h",
  "386": "o",
  "387": "d"
}
2025-02-21 14:02:24 [INFO]: Signature: {
  "0": "d",
  "1": "1",
  "2": "1",
  "3": "5",
  "4": "0",
  "5": "0",
  "6": "5",
  "7": "5",
  "8": "7",
  "9": "0",
  "10": "8",
  "11": "5",
  "12": "0",
  "13": "2",
  "14": "9",
  "15": "a",
  "16": "a",
  "17": "9",
  "18": "2",
  "19": "4",
  "20": "f",
  "21": "6",
  "22": "3",
  "23": "b",
  "24": "2",
  "25": "f",
  "26": "d",
  "27": "7",
  "28": "f",
  "29": "d",
  "30": "6",
  "31": "f",
  "32": "7",
  "33": "5",
  "34": "b",
  "35": "4",
  "36": "7",
  "37": "9",
  "38": "f",
  "39": "4",
  "40": "8",
  "41": "7",
  "42": "1",
  "43": "6",
  "44": "0",
  "45": "4",
  "46": "3",
  "47": "0",
  "48": "6",
  "49": "b",
  "50": "8",
  "51": "6",
  "52": "f",
  "53": "b",
  "54": "e",
  "55": "c",
  "56": "3",
  "57": "a",
  "58": "1",
  "59": "6",
  "60": "7",
  "61": "6",
  "62": "4",
  "63": "9"
}
2025-02-21 14:02:24 [INFO]: MoMo API Response: {
  "statusCode": 200,
  "resultCode": 0
}
2025-02-21 14:02:24 [INFO]: Connected to MongoDB 
2025-02-21 14:02:27 [INFO]: MoMo payment created {
  "orderId": "1740121344177_67b495ca9d35c758607e27cc",
  "amount": 10000,
  "resultCode": 0
}
2025-02-21 14:11:24 [INFO]: MongoDB disconnected 
2025-02-21 14:25:22 [INFO]: MongoDB disconnected 
2025-02-21 14:36:28 [INFO]: MongoDB disconnected 
2025-02-21 14:51:32 [INFO]: MongoDB disconnected 
2025-02-21 14:56:39 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": "s",
  "60": ":",
  "61": "/",
  "62": "/",
  "63": "w",
  "64": "e",
  "65": "b",
  "66": "h",
  "67": "o",
  "68": "o",
  "69": "k",
  "70": ".",
  "71": "s",
  "72": "i",
  "73": "t",
  "74": "e",
  "75": "/",
  "76": "b",
  "77": "3",
  "78": "0",
  "79": "8",
  "80": "8",
  "81": "a",
  "82": "6",
  "83": "a",
  "84": "-",
  "85": "2",
  "86": "d",
  "87": "1",
  "88": "7",
  "89": "-",
  "90": "4",
  "91": "f",
  "92": "8",
  "93": "d",
  "94": "-",
  "95": "a",
  "96": "3",
  "97": "8",
  "98": "3",
  "99": "-",
  "100": "7",
  "101": "1",
  "102": "3",
  "103": "8",
  "104": "9",
  "105": "a",
  "106": "6",
  "107": "c",
  "108": "6",
  "109": "0",
  "110": "0",
  "111": "b",
  "112": "&",
  "113": "o",
  "114": "r",
  "115": "d",
  "116": "e",
  "117": "r",
  "118": "I",
  "119": "d",
  "120": "=",
  "121": "1",
  "122": "7",
  "123": "4",
  "124": "0",
  "125": "1",
  "126": "2",
  "127": "4",
  "128": "5",
  "129": "9",
  "130": "9",
  "131": "7",
  "132": "1",
  "133": "0",
  "134": "_",
  "135": "6",
  "136": "7",
  "137": "b",
  "138": "4",
  "139": "9",
  "140": "5",
  "141": "c",
  "142": "a",
  "143": "9",
  "144": "d",
  "145": "3",
  "146": "5",
  "147": "c",
  "148": "7",
  "149": "5",
  "150": "8",
  "151": "6",
  "152": "0",
  "153": "7",
  "154": "e",
  "155": "2",
  "156": "7",
  "157": "c",
  "158": "c",
  "159": "&",
  "160": "o",
  "161": "r",
  "162": "d",
  "163": "e",
  "164": "r",
  "165": "I",
  "166": "n",
  "167": "f",
  "168": "o",
  "169": "=",
  "170": "P",
  "171": "a",
  "172": "y",
  "173": "m",
  "174": "e",
  "175": "n",
  "176": "t",
  "177": " ",
  "178": "f",
  "179": "o",
  "180": "r",
  "181": " ",
  "182": "o",
  "183": "r",
  "184": "d",
  "185": "e",
  "186": "r",
  "187": " ",
  "188": "1",
  "189": "7",
  "190": "4",
  "191": "0",
  "192": "1",
  "193": "2",
  "194": "4",
  "195": "5",
  "196": "9",
  "197": "9",
  "198": "7",
  "199": "1",
  "200": "0",
  "201": "_",
  "202": "6",
  "203": "7",
  "204": "b",
  "205": "4",
  "206": "9",
  "207": "5",
  "208": "c",
  "209": "a",
  "210": "9",
  "211": "d",
  "212": "3",
  "213": "5",
  "214": "c",
  "215": "7",
  "216": "5",
  "217": "8",
  "218": "6",
  "219": "0",
  "220": "7",
  "221": "e",
  "222": "2",
  "223": "7",
  "224": "c",
  "225": "c",
  "226": "&",
  "227": "p",
  "228": "a",
  "229": "r",
  "230": "t",
  "231": "n",
  "232": "e",
  "233": "r",
  "234": "C",
  "235": "o",
  "236": "d",
  "237": "e",
  "238": "=",
  "239": "M",
  "240": "O",
  "241": "M",
  "242": "O",
  "243": "&",
  "244": "r",
  "245": "e",
  "246": "d",
  "247": "i",
  "248": "r",
  "249": "e",
  "250": "c",
  "251": "t",
  "252": "U",
  "253": "r",
  "254": "l",
  "255": "=",
  "256": "h",
  "257": "t",
  "258": "t",
  "259": "p",
  "260": "s",
  "261": ":",
  "262": "/",
  "263": "/",
  "264": "w",
  "265": "e",
  "266": "b",
  "267": "h",
  "268": "o",
  "269": "o",
  "270": "k",
  "271": ".",
  "272": "s",
  "273": "i",
  "274": "t",
  "275": "e",
  "276": "/",
  "277": "b",
  "278": "3",
  "279": "0",
  "280": "8",
  "281": "8",
  "282": "a",
  "283": "6",
  "284": "a",
  "285": "-",
  "286": "2",
  "287": "d",
  "288": "1",
  "289": "7",
  "290": "-",
  "291": "4",
  "292": "f",
  "293": "8",
  "294": "d",
  "295": "-",
  "296": "a",
  "297": "3",
  "298": "8",
  "299": "3",
  "300": "-",
  "301": "7",
  "302": "1",
  "303": "3",
  "304": "8",
  "305": "9",
  "306": "a",
  "307": "6",
  "308": "c",
  "309": "6",
  "310": "0",
  "311": "0",
  "312": "b",
  "313": "&",
  "314": "r",
  "315": "e",
  "316": "q",
  "317": "u",
  "318": "e",
  "319": "s",
  "320": "t",
  "321": "I",
  "322": "d",
  "323": "=",
  "324": "1",
  "325": "7",
  "326": "4",
  "327": "0",
  "328": "1",
  "329": "2",
  "330": "4",
  "331": "5",
  "332": "9",
  "333": "9",
  "334": "7",
  "335": "1",
  "336": "0",
  "337": "_",
  "338": "6",
  "339": "7",
  "340": "b",
  "341": "4",
  "342": "9",
  "343": "5",
  "344": "c",
  "345": "a",
  "346": "9",
  "347": "d",
  "348": "3",
  "349": "5",
  "350": "c",
  "351": "7",
  "352": "5",
  "353": "8",
  "354": "6",
  "355": "0",
  "356": "7",
  "357": "e",
  "358": "2",
  "359": "7",
  "360": "c",
  "361": "c",
  "362": "&",
  "363": "r",
  "364": "e",
  "365": "q",
  "366": "u",
  "367": "e",
  "368": "s",
  "369": "t",
  "370": "T",
  "371": "y",
  "372": "p",
  "373": "e",
  "374": "=",
  "375": "p",
  "376": "a",
  "377": "y",
  "378": "W",
  "379": "i",
  "380": "t",
  "381": "h",
  "382": "M",
  "383": "e",
  "384": "t",
  "385": "h",
  "386": "o",
  "387": "d"
}
2025-02-21 14:56:39 [INFO]: Signature: {
  "0": "1",
  "1": "2",
  "2": "c",
  "3": "b",
  "4": "b",
  "5": "3",
  "6": "9",
  "7": "e",
  "8": "c",
  "9": "2",
  "10": "6",
  "11": "2",
  "12": "f",
  "13": "4",
  "14": "3",
  "15": "9",
  "16": "5",
  "17": "9",
  "18": "c",
  "19": "2",
  "20": "d",
  "21": "d",
  "22": "c",
  "23": "c",
  "24": "6",
  "25": "6",
  "26": "7",
  "27": "a",
  "28": "e",
  "29": "7",
  "30": "3",
  "31": "4",
  "32": "d",
  "33": "b",
  "34": "e",
  "35": "a",
  "36": "2",
  "37": "f",
  "38": "2",
  "39": "b",
  "40": "7",
  "41": "8",
  "42": "6",
  "43": "6",
  "44": "7",
  "45": "7",
  "46": "f",
  "47": "4",
  "48": "e",
  "49": "d",
  "50": "e",
  "51": "c",
  "52": "2",
  "53": "3",
  "54": "5",
  "55": "4",
  "56": "7",
  "57": "9",
  "58": "6",
  "59": "5",
  "60": "d",
  "61": "0",
  "62": "9",
  "63": "4"
}
2025-02-21 14:56:39 [INFO]: MoMo API Response: {
  "statusCode": 200,
  "resultCode": 0
}
2025-02-21 14:56:42 [INFO]: MoMo payment created {
  "orderId": "1740124599710_67b495ca9d35c758607e27cc",
  "amount": 10000,
  "resultCode": 0
}
2025-02-21 15:00:07 [INFO]: Server is running on port 3000 
2025-02-21 15:00:07 [INFO]: Environment: development 
2025-02-21 15:00:07 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 15:00:10 [INFO]: Connected to MongoDB 
2025-02-21 15:00:12 [INFO]: Server is running on port 3000 
2025-02-21 15:00:12 [INFO]: Environment: development 
2025-02-21 15:00:12 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 15:00:13 [ERROR]: Invalid token {
  "path": "/api/momo/create",
  "method": "POST",
  "body": {
    "amount": 10000,
    "orderInfo": "Thanh toan khoa hoc ABC"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 15:00:15 [INFO]: Connected to MongoDB 
2025-02-21 15:00:21 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-21 15:00:32 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": ":",
  "60": "/",
  "61": "/",
  "62": "l",
  "63": "o",
  "64": "c",
  "65": "a",
  "66": "l",
  "67": "h",
  "68": "o",
  "69": "s",
  "70": "t",
  "71": ":",
  "72": "3",
  "73": "0",
  "74": "0",
  "75": "0",
  "76": "/",
  "77": "p",
  "78": "a",
  "79": "y",
  "80": "m",
  "81": "e",
  "82": "n",
  "83": "t",
  "84": "/",
  "85": "m",
  "86": "o",
  "87": "m",
  "88": "o",
  "89": "/",
  "90": "r",
  "91": "e",
  "92": "t",
  "93": "u",
  "94": "r",
  "95": "n",
  "96": "&",
  "97": "o",
  "98": "r",
  "99": "d",
  "100": "e",
  "101": "r",
  "102": "I",
  "103": "d",
  "104": "=",
  "105": "1",
  "106": "7",
  "107": "4",
  "108": "0",
  "109": "1",
  "110": "2",
  "111": "4",
  "112": "8",
  "113": "3",
  "114": "2",
  "115": "2",
  "116": "3",
  "117": "3",
  "118": "_",
  "119": "6",
  "120": "7",
  "121": "b",
  "122": "4",
  "123": "9",
  "124": "5",
  "125": "c",
  "126": "a",
  "127": "9",
  "128": "d",
  "129": "3",
  "130": "5",
  "131": "c",
  "132": "7",
  "133": "5",
  "134": "8",
  "135": "6",
  "136": "0",
  "137": "7",
  "138": "e",
  "139": "2",
  "140": "7",
  "141": "c",
  "142": "c",
  "143": "&",
  "144": "o",
  "145": "r",
  "146": "d",
  "147": "e",
  "148": "r",
  "149": "I",
  "150": "n",
  "151": "f",
  "152": "o",
  "153": "=",
  "154": "P",
  "155": "a",
  "156": "y",
  "157": "m",
  "158": "e",
  "159": "n",
  "160": "t",
  "161": " ",
  "162": "f",
  "163": "o",
  "164": "r",
  "165": " ",
  "166": "o",
  "167": "r",
  "168": "d",
  "169": "e",
  "170": "r",
  "171": " ",
  "172": "1",
  "173": "7",
  "174": "4",
  "175": "0",
  "176": "1",
  "177": "2",
  "178": "4",
  "179": "8",
  "180": "3",
  "181": "2",
  "182": "2",
  "183": "3",
  "184": "3",
  "185": "_",
  "186": "6",
  "187": "7",
  "188": "b",
  "189": "4",
  "190": "9",
  "191": "5",
  "192": "c",
  "193": "a",
  "194": "9",
  "195": "d",
  "196": "3",
  "197": "5",
  "198": "c",
  "199": "7",
  "200": "5",
  "201": "8",
  "202": "6",
  "203": "0",
  "204": "7",
  "205": "e",
  "206": "2",
  "207": "7",
  "208": "c",
  "209": "c",
  "210": "&",
  "211": "p",
  "212": "a",
  "213": "r",
  "214": "t",
  "215": "n",
  "216": "e",
  "217": "r",
  "218": "C",
  "219": "o",
  "220": "d",
  "221": "e",
  "222": "=",
  "223": "M",
  "224": "O",
  "225": "M",
  "226": "O",
  "227": "&",
  "228": "r",
  "229": "e",
  "230": "d",
  "231": "i",
  "232": "r",
  "233": "e",
  "234": "c",
  "235": "t",
  "236": "U",
  "237": "r",
  "238": "l",
  "239": "=",
  "240": "h",
  "241": "t",
  "242": "t",
  "243": "p",
  "244": ":",
  "245": "/",
  "246": "/",
  "247": "l",
  "248": "o",
  "249": "c",
  "250": "a",
  "251": "l",
  "252": "h",
  "253": "o",
  "254": "s",
  "255": "t",
  "256": ":",
  "257": "3",
  "258": "0",
  "259": "0",
  "260": "0",
  "261": "/",
  "262": "p",
  "263": "a",
  "264": "y",
  "265": "m",
  "266": "e",
  "267": "n",
  "268": "t",
  "269": "/",
  "270": "m",
  "271": "o",
  "272": "m",
  "273": "o",
  "274": "/",
  "275": "r",
  "276": "e",
  "277": "t",
  "278": "u",
  "279": "r",
  "280": "n",
  "281": "&",
  "282": "r",
  "283": "e",
  "284": "q",
  "285": "u",
  "286": "e",
  "287": "s",
  "288": "t",
  "289": "I",
  "290": "d",
  "291": "=",
  "292": "1",
  "293": "7",
  "294": "4",
  "295": "0",
  "296": "1",
  "297": "2",
  "298": "4",
  "299": "8",
  "300": "3",
  "301": "2",
  "302": "2",
  "303": "3",
  "304": "3",
  "305": "_",
  "306": "6",
  "307": "7",
  "308": "b",
  "309": "4",
  "310": "9",
  "311": "5",
  "312": "c",
  "313": "a",
  "314": "9",
  "315": "d",
  "316": "3",
  "317": "5",
  "318": "c",
  "319": "7",
  "320": "5",
  "321": "8",
  "322": "6",
  "323": "0",
  "324": "7",
  "325": "e",
  "326": "2",
  "327": "7",
  "328": "c",
  "329": "c",
  "330": "&",
  "331": "r",
  "332": "e",
  "333": "q",
  "334": "u",
  "335": "e",
  "336": "s",
  "337": "t",
  "338": "T",
  "339": "y",
  "340": "p",
  "341": "e",
  "342": "=",
  "343": "p",
  "344": "a",
  "345": "y",
  "346": "W",
  "347": "i",
  "348": "t",
  "349": "h",
  "350": "M",
  "351": "e",
  "352": "t",
  "353": "h",
  "354": "o",
  "355": "d"
}
2025-02-21 15:00:32 [INFO]: Signature: {
  "0": "0",
  "1": "9",
  "2": "2",
  "3": "3",
  "4": "7",
  "5": "c",
  "6": "9",
  "7": "b",
  "8": "b",
  "9": "4",
  "10": "7",
  "11": "d",
  "12": "1",
  "13": "7",
  "14": "9",
  "15": "e",
  "16": "f",
  "17": "0",
  "18": "c",
  "19": "5",
  "20": "f",
  "21": "d",
  "22": "5",
  "23": "9",
  "24": "1",
  "25": "0",
  "26": "a",
  "27": "c",
  "28": "5",
  "29": "1",
  "30": "0",
  "31": "f",
  "32": "5",
  "33": "2",
  "34": "3",
  "35": "8",
  "36": "c",
  "37": "e",
  "38": "6",
  "39": "7",
  "40": "a",
  "41": "c",
  "42": "5",
  "43": "a",
  "44": "9",
  "45": "9",
  "46": "1",
  "47": "0",
  "48": "7",
  "49": "8",
  "50": "8",
  "51": "6",
  "52": "8",
  "53": "f",
  "54": "4",
  "55": "6",
  "56": "6",
  "57": "d",
  "58": "4",
  "59": "c",
  "60": "5",
  "61": "d",
  "62": "e",
  "63": "5"
}
2025-02-21 15:00:32 [INFO]: MoMo API Response: {
  "statusCode": 200,
  "resultCode": 0
}
2025-02-21 15:00:32 [INFO]: MoMo payment created {
  "orderId": "1740124832233_67b495ca9d35c758607e27cc",
  "amount": 10000,
  "resultCode": 0
}
2025-02-21 15:19:58 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": ":",
  "60": "/",
  "61": "/",
  "62": "l",
  "63": "o",
  "64": "c",
  "65": "a",
  "66": "l",
  "67": "h",
  "68": "o",
  "69": "s",
  "70": "t",
  "71": ":",
  "72": "3",
  "73": "0",
  "74": "0",
  "75": "0",
  "76": "/",
  "77": "p",
  "78": "a",
  "79": "y",
  "80": "m",
  "81": "e",
  "82": "n",
  "83": "t",
  "84": "/",
  "85": "m",
  "86": "o",
  "87": "m",
  "88": "o",
  "89": "/",
  "90": "r",
  "91": "e",
  "92": "t",
  "93": "u",
  "94": "r",
  "95": "n",
  "96": "&",
  "97": "o",
  "98": "r",
  "99": "d",
  "100": "e",
  "101": "r",
  "102": "I",
  "103": "d",
  "104": "=",
  "105": "1",
  "106": "7",
  "107": "4",
  "108": "0",
  "109": "1",
  "110": "2",
  "111": "5",
  "112": "9",
  "113": "9",
  "114": "8",
  "115": "0",
  "116": "1",
  "117": "8",
  "118": "_",
  "119": "6",
  "120": "7",
  "121": "b",
  "122": "4",
  "123": "9",
  "124": "5",
  "125": "c",
  "126": "a",
  "127": "9",
  "128": "d",
  "129": "3",
  "130": "5",
  "131": "c",
  "132": "7",
  "133": "5",
  "134": "8",
  "135": "6",
  "136": "0",
  "137": "7",
  "138": "e",
  "139": "2",
  "140": "7",
  "141": "c",
  "142": "c",
  "143": "&",
  "144": "o",
  "145": "r",
  "146": "d",
  "147": "e",
  "148": "r",
  "149": "I",
  "150": "n",
  "151": "f",
  "152": "o",
  "153": "=",
  "154": "P",
  "155": "a",
  "156": "y",
  "157": "m",
  "158": "e",
  "159": "n",
  "160": "t",
  "161": " ",
  "162": "f",
  "163": "o",
  "164": "r",
  "165": " ",
  "166": "o",
  "167": "r",
  "168": "d",
  "169": "e",
  "170": "r",
  "171": " ",
  "172": "1",
  "173": "7",
  "174": "4",
  "175": "0",
  "176": "1",
  "177": "2",
  "178": "5",
  "179": "9",
  "180": "9",
  "181": "8",
  "182": "0",
  "183": "1",
  "184": "8",
  "185": "_",
  "186": "6",
  "187": "7",
  "188": "b",
  "189": "4",
  "190": "9",
  "191": "5",
  "192": "c",
  "193": "a",
  "194": "9",
  "195": "d",
  "196": "3",
  "197": "5",
  "198": "c",
  "199": "7",
  "200": "5",
  "201": "8",
  "202": "6",
  "203": "0",
  "204": "7",
  "205": "e",
  "206": "2",
  "207": "7",
  "208": "c",
  "209": "c",
  "210": "&",
  "211": "p",
  "212": "a",
  "213": "r",
  "214": "t",
  "215": "n",
  "216": "e",
  "217": "r",
  "218": "C",
  "219": "o",
  "220": "d",
  "221": "e",
  "222": "=",
  "223": "M",
  "224": "O",
  "225": "M",
  "226": "O",
  "227": "&",
  "228": "r",
  "229": "e",
  "230": "d",
  "231": "i",
  "232": "r",
  "233": "e",
  "234": "c",
  "235": "t",
  "236": "U",
  "237": "r",
  "238": "l",
  "239": "=",
  "240": "h",
  "241": "t",
  "242": "t",
  "243": "p",
  "244": ":",
  "245": "/",
  "246": "/",
  "247": "l",
  "248": "o",
  "249": "c",
  "250": "a",
  "251": "l",
  "252": "h",
  "253": "o",
  "254": "s",
  "255": "t",
  "256": ":",
  "257": "3",
  "258": "0",
  "259": "0",
  "260": "0",
  "261": "/",
  "262": "p",
  "263": "a",
  "264": "y",
  "265": "m",
  "266": "e",
  "267": "n",
  "268": "t",
  "269": "/",
  "270": "m",
  "271": "o",
  "272": "m",
  "273": "o",
  "274": "/",
  "275": "r",
  "276": "e",
  "277": "t",
  "278": "u",
  "279": "r",
  "280": "n",
  "281": "&",
  "282": "r",
  "283": "e",
  "284": "q",
  "285": "u",
  "286": "e",
  "287": "s",
  "288": "t",
  "289": "I",
  "290": "d",
  "291": "=",
  "292": "1",
  "293": "7",
  "294": "4",
  "295": "0",
  "296": "1",
  "297": "2",
  "298": "5",
  "299": "9",
  "300": "9",
  "301": "8",
  "302": "0",
  "303": "1",
  "304": "8",
  "305": "_",
  "306": "6",
  "307": "7",
  "308": "b",
  "309": "4",
  "310": "9",
  "311": "5",
  "312": "c",
  "313": "a",
  "314": "9",
  "315": "d",
  "316": "3",
  "317": "5",
  "318": "c",
  "319": "7",
  "320": "5",
  "321": "8",
  "322": "6",
  "323": "0",
  "324": "7",
  "325": "e",
  "326": "2",
  "327": "7",
  "328": "c",
  "329": "c",
  "330": "&",
  "331": "r",
  "332": "e",
  "333": "q",
  "334": "u",
  "335": "e",
  "336": "s",
  "337": "t",
  "338": "T",
  "339": "y",
  "340": "p",
  "341": "e",
  "342": "=",
  "343": "p",
  "344": "a",
  "345": "y",
  "346": "W",
  "347": "i",
  "348": "t",
  "349": "h",
  "350": "M",
  "351": "e",
  "352": "t",
  "353": "h",
  "354": "o",
  "355": "d"
}
2025-02-21 15:19:58 [INFO]: Signature: {
  "0": "e",
  "1": "7",
  "2": "2",
  "3": "a",
  "4": "f",
  "5": "e",
  "6": "5",
  "7": "3",
  "8": "4",
  "9": "b",
  "10": "f",
  "11": "a",
  "12": "c",
  "13": "1",
  "14": "c",
  "15": "b",
  "16": "5",
  "17": "b",
  "18": "0",
  "19": "b",
  "20": "7",
  "21": "9",
  "22": "f",
  "23": "2",
  "24": "b",
  "25": "7",
  "26": "f",
  "27": "c",
  "28": "d",
  "29": "2",
  "30": "e",
  "31": "c",
  "32": "b",
  "33": "d",
  "34": "4",
  "35": "1",
  "36": "5",
  "37": "b",
  "38": "e",
  "39": "8",
  "40": "1",
  "41": "1",
  "42": "f",
  "43": "8",
  "44": "2",
  "45": "f",
  "46": "7",
  "47": "3",
  "48": "f",
  "49": "b",
  "50": "8",
  "51": "e",
  "52": "e",
  "53": "4",
  "54": "3",
  "55": "f",
  "56": "4",
  "57": "7",
  "58": "a",
  "59": "5",
  "60": "4",
  "61": "6",
  "62": "2",
  "63": "c"
}
2025-02-21 15:19:58 [INFO]: MoMo API Response: {
  "statusCode": 200,
  "resultCode": 0
}
2025-02-21 15:19:58 [INFO]: MoMo payment created {
  "orderId": "1740125998018_67b495ca9d35c758607e27cc",
  "amount": 10000,
  "resultCode": 0
}
2025-02-21 15:21:47 [INFO]: Server is running on port 3000 
2025-02-21 15:21:47 [INFO]: Environment: development 
2025-02-21 15:21:47 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 15:21:50 [INFO]: Connected to MongoDB 
2025-02-21 15:21:57 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": ":",
  "60": "/",
  "61": "/",
  "62": "l",
  "63": "o",
  "64": "c",
  "65": "a",
  "66": "l",
  "67": "h",
  "68": "o",
  "69": "s",
  "70": "t",
  "71": ":",
  "72": "3",
  "73": "0",
  "74": "0",
  "75": "0",
  "76": "/",
  "77": "a",
  "78": "p",
  "79": "i",
  "80": "/",
  "81": "m",
  "82": "o",
  "83": "m",
  "84": "o",
  "85": "/",
  "86": "i",
  "87": "p",
  "88": "n",
  "89": "&",
  "90": "o",
  "91": "r",
  "92": "d",
  "93": "e",
  "94": "r",
  "95": "I",
  "96": "d",
  "97": "=",
  "98": "1",
  "99": "7",
  "100": "4",
  "101": "0",
  "102": "1",
  "103": "2",
  "104": "6",
  "105": "1",
  "106": "1",
  "107": "7",
  "108": "6",
  "109": "7",
  "110": "6",
  "111": "_",
  "112": "6",
  "113": "7",
  "114": "b",
  "115": "4",
  "116": "9",
  "117": "5",
  "118": "c",
  "119": "a",
  "120": "9",
  "121": "d",
  "122": "3",
  "123": "5",
  "124": "c",
  "125": "7",
  "126": "5",
  "127": "8",
  "128": "6",
  "129": "0",
  "130": "7",
  "131": "e",
  "132": "2",
  "133": "7",
  "134": "c",
  "135": "c",
  "136": "&",
  "137": "o",
  "138": "r",
  "139": "d",
  "140": "e",
  "141": "r",
  "142": "I",
  "143": "n",
  "144": "f",
  "145": "o",
  "146": "=",
  "147": "P",
  "148": "a",
  "149": "y",
  "150": "m",
  "151": "e",
  "152": "n",
  "153": "t",
  "154": " ",
  "155": "f",
  "156": "o",
  "157": "r",
  "158": " ",
  "159": "o",
  "160": "r",
  "161": "d",
  "162": "e",
  "163": "r",
  "164": " ",
  "165": "1",
  "166": "7",
  "167": "4",
  "168": "0",
  "169": "1",
  "170": "2",
  "171": "6",
  "172": "1",
  "173": "1",
  "174": "7",
  "175": "6",
  "176": "7",
  "177": "6",
  "178": "_",
  "179": "6",
  "180": "7",
  "181": "b",
  "182": "4",
  "183": "9",
  "184": "5",
  "185": "c",
  "186": "a",
  "187": "9",
  "188": "d",
  "189": "3",
  "190": "5",
  "191": "c",
  "192": "7",
  "193": "5",
  "194": "8",
  "195": "6",
  "196": "0",
  "197": "7",
  "198": "e",
  "199": "2",
  "200": "7",
  "201": "c",
  "202": "c",
  "203": "&",
  "204": "p",
  "205": "a",
  "206": "r",
  "207": "t",
  "208": "n",
  "209": "e",
  "210": "r",
  "211": "C",
  "212": "o",
  "213": "d",
  "214": "e",
  "215": "=",
  "216": "M",
  "217": "O",
  "218": "M",
  "219": "O",
  "220": "&",
  "221": "r",
  "222": "e",
  "223": "d",
  "224": "i",
  "225": "r",
  "226": "e",
  "227": "c",
  "228": "t",
  "229": "U",
  "230": "r",
  "231": "l",
  "232": "=",
  "233": "h",
  "234": "t",
  "235": "t",
  "236": "p",
  "237": ":",
  "238": "/",
  "239": "/",
  "240": "l",
  "241": "o",
  "242": "c",
  "243": "a",
  "244": "l",
  "245": "h",
  "246": "o",
  "247": "s",
  "248": "t",
  "249": ":",
  "250": "3",
  "251": "0",
  "252": "0",
  "253": "0",
  "254": "/",
  "255": "a",
  "256": "p",
  "257": "i",
  "258": "-",
  "259": "d",
  "260": "o",
  "261": "c",
  "262": "s",
  "263": "&",
  "264": "r",
  "265": "e",
  "266": "q",
  "267": "u",
  "268": "e",
  "269": "s",
  "270": "t",
  "271": "I",
  "272": "d",
  "273": "=",
  "274": "1",
  "275": "7",
  "276": "4",
  "277": "0",
  "278": "1",
  "279": "2",
  "280": "6",
  "281": "1",
  "282": "1",
  "283": "7",
  "284": "6",
  "285": "7",
  "286": "6",
  "287": "_",
  "288": "6",
  "289": "7",
  "290": "b",
  "291": "4",
  "292": "9",
  "293": "5",
  "294": "c",
  "295": "a",
  "296": "9",
  "297": "d",
  "298": "3",
  "299": "5",
  "300": "c",
  "301": "7",
  "302": "5",
  "303": "8",
  "304": "6",
  "305": "0",
  "306": "7",
  "307": "e",
  "308": "2",
  "309": "7",
  "310": "c",
  "311": "c",
  "312": "&",
  "313": "r",
  "314": "e",
  "315": "q",
  "316": "u",
  "317": "e",
  "318": "s",
  "319": "t",
  "320": "T",
  "321": "y",
  "322": "p",
  "323": "e",
  "324": "=",
  "325": "p",
  "326": "a",
  "327": "y",
  "328": "W",
  "329": "i",
  "330": "t",
  "331": "h",
  "332": "M",
  "333": "e",
  "334": "t",
  "335": "h",
  "336": "o",
  "337": "d"
}
2025-02-21 15:21:57 [INFO]: Signature: {
  "0": "5",
  "1": "9",
  "2": "c",
  "3": "0",
  "4": "4",
  "5": "e",
  "6": "2",
  "7": "1",
  "8": "7",
  "9": "1",
  "10": "3",
  "11": "6",
  "12": "5",
  "13": "f",
  "14": "f",
  "15": "8",
  "16": "8",
  "17": "d",
  "18": "6",
  "19": "e",
  "20": "7",
  "21": "0",
  "22": "e",
  "23": "e",
  "24": "8",
  "25": "f",
  "26": "5",
  "27": "d",
  "28": "4",
  "29": "c",
  "30": "c",
  "31": "7",
  "32": "4",
  "33": "6",
  "34": "9",
  "35": "4",
  "36": "8",
  "37": "6",
  "38": "4",
  "39": "b",
  "40": "3",
  "41": "3",
  "42": "4",
  "43": "a",
  "44": "4",
  "45": "e",
  "46": "b",
  "47": "8",
  "48": "5",
  "49": "5",
  "50": "4",
  "51": "3",
  "52": "4",
  "53": "8",
  "54": "f",
  "55": "2",
  "56": "5",
  "57": "e",
  "58": "8",
  "59": "6",
  "60": "1",
  "61": "e",
  "62": "e",
  "63": "b"
}
2025-02-21 15:21:57 [INFO]: MoMo API Response: {
  "statusCode": 200,
  "resultCode": 0
}
2025-02-21 15:21:58 [INFO]: MoMo payment created {
  "orderId": "1740126117676_67b495ca9d35c758607e27cc",
  "amount": 10000,
  "resultCode": 0
}
2025-02-21 15:25:34 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": ":",
  "60": "/",
  "61": "/",
  "62": "l",
  "63": "o",
  "64": "c",
  "65": "a",
  "66": "l",
  "67": "h",
  "68": "o",
  "69": "s",
  "70": "t",
  "71": ":",
  "72": "3",
  "73": "0",
  "74": "0",
  "75": "0",
  "76": "/",
  "77": "a",
  "78": "p",
  "79": "i",
  "80": "/",
  "81": "m",
  "82": "o",
  "83": "m",
  "84": "o",
  "85": "/",
  "86": "i",
  "87": "p",
  "88": "n",
  "89": "&",
  "90": "o",
  "91": "r",
  "92": "d",
  "93": "e",
  "94": "r",
  "95": "I",
  "96": "d",
  "97": "=",
  "98": "1",
  "99": "7",
  "100": "4",
  "101": "0",
  "102": "1",
  "103": "2",
  "104": "6",
  "105": "3",
  "106": "3",
  "107": "4",
  "108": "8",
  "109": "7",
  "110": "9",
  "111": "_",
  "112": "6",
  "113": "7",
  "114": "b",
  "115": "4",
  "116": "9",
  "117": "5",
  "118": "c",
  "119": "a",
  "120": "9",
  "121": "d",
  "122": "3",
  "123": "5",
  "124": "c",
  "125": "7",
  "126": "5",
  "127": "8",
  "128": "6",
  "129": "0",
  "130": "7",
  "131": "e",
  "132": "2",
  "133": "7",
  "134": "c",
  "135": "c",
  "136": "&",
  "137": "o",
  "138": "r",
  "139": "d",
  "140": "e",
  "141": "r",
  "142": "I",
  "143": "n",
  "144": "f",
  "145": "o",
  "146": "=",
  "147": "P",
  "148": "a",
  "149": "y",
  "150": "m",
  "151": "e",
  "152": "n",
  "153": "t",
  "154": " ",
  "155": "f",
  "156": "o",
  "157": "r",
  "158": " ",
  "159": "o",
  "160": "r",
  "161": "d",
  "162": "e",
  "163": "r",
  "164": " ",
  "165": "1",
  "166": "7",
  "167": "4",
  "168": "0",
  "169": "1",
  "170": "2",
  "171": "6",
  "172": "3",
  "173": "3",
  "174": "4",
  "175": "8",
  "176": "7",
  "177": "9",
  "178": "_",
  "179": "6",
  "180": "7",
  "181": "b",
  "182": "4",
  "183": "9",
  "184": "5",
  "185": "c",
  "186": "a",
  "187": "9",
  "188": "d",
  "189": "3",
  "190": "5",
  "191": "c",
  "192": "7",
  "193": "5",
  "194": "8",
  "195": "6",
  "196": "0",
  "197": "7",
  "198": "e",
  "199": "2",
  "200": "7",
  "201": "c",
  "202": "c",
  "203": "&",
  "204": "p",
  "205": "a",
  "206": "r",
  "207": "t",
  "208": "n",
  "209": "e",
  "210": "r",
  "211": "C",
  "212": "o",
  "213": "d",
  "214": "e",
  "215": "=",
  "216": "M",
  "217": "O",
  "218": "M",
  "219": "O",
  "220": "&",
  "221": "r",
  "222": "e",
  "223": "d",
  "224": "i",
  "225": "r",
  "226": "e",
  "227": "c",
  "228": "t",
  "229": "U",
  "230": "r",
  "231": "l",
  "232": "=",
  "233": "h",
  "234": "t",
  "235": "t",
  "236": "p",
  "237": ":",
  "238": "/",
  "239": "/",
  "240": "l",
  "241": "o",
  "242": "c",
  "243": "a",
  "244": "l",
  "245": "h",
  "246": "o",
  "247": "s",
  "248": "t",
  "249": ":",
  "250": "3",
  "251": "0",
  "252": "0",
  "253": "0",
  "254": "/",
  "255": "a",
  "256": "p",
  "257": "i",
  "258": "-",
  "259": "d",
  "260": "o",
  "261": "c",
  "262": "s",
  "263": "&",
  "264": "r",
  "265": "e",
  "266": "q",
  "267": "u",
  "268": "e",
  "269": "s",
  "270": "t",
  "271": "I",
  "272": "d",
  "273": "=",
  "274": "1",
  "275": "7",
  "276": "4",
  "277": "0",
  "278": "1",
  "279": "2",
  "280": "6",
  "281": "3",
  "282": "3",
  "283": "4",
  "284": "8",
  "285": "7",
  "286": "9",
  "287": "_",
  "288": "6",
  "289": "7",
  "290": "b",
  "291": "4",
  "292": "9",
  "293": "5",
  "294": "c",
  "295": "a",
  "296": "9",
  "297": "d",
  "298": "3",
  "299": "5",
  "300": "c",
  "301": "7",
  "302": "5",
  "303": "8",
  "304": "6",
  "305": "0",
  "306": "7",
  "307": "e",
  "308": "2",
  "309": "7",
  "310": "c",
  "311": "c",
  "312": "&",
  "313": "r",
  "314": "e",
  "315": "q",
  "316": "u",
  "317": "e",
  "318": "s",
  "319": "t",
  "320": "T",
  "321": "y",
  "322": "p",
  "323": "e",
  "324": "=",
  "325": "p",
  "326": "a",
  "327": "y",
  "328": "W",
  "329": "i",
  "330": "t",
  "331": "h",
  "332": "M",
  "333": "e",
  "334": "t",
  "335": "h",
  "336": "o",
  "337": "d"
}
2025-02-21 15:25:34 [INFO]: Signature: {
  "0": "a",
  "1": "4",
  "2": "2",
  "3": "7",
  "4": "8",
  "5": "e",
  "6": "8",
  "7": "5",
  "8": "5",
  "9": "3",
  "10": "a",
  "11": "0",
  "12": "e",
  "13": "a",
  "14": "8",
  "15": "7",
  "16": "f",
  "17": "c",
  "18": "f",
  "19": "a",
  "20": "e",
  "21": "9",
  "22": "5",
  "23": "1",
  "24": "d",
  "25": "6",
  "26": "e",
  "27": "a",
  "28": "7",
  "29": "e",
  "30": "7",
  "31": "e",
  "32": "6",
  "33": "5",
  "34": "d",
  "35": "a",
  "36": "0",
  "37": "6",
  "38": "0",
  "39": "f",
  "40": "e",
  "41": "6",
  "42": "b",
  "43": "9",
  "44": "4",
  "45": "a",
  "46": "4",
  "47": "b",
  "48": "b",
  "49": "d",
  "50": "4",
  "51": "c",
  "52": "0",
  "53": "2",
  "54": "2",
  "55": "d",
  "56": "9",
  "57": "a",
  "58": "3",
  "59": "b",
  "60": "c",
  "61": "e",
  "62": "8",
  "63": "c"
}
2025-02-21 15:25:34 [INFO]: MoMo API Response: {
  "statusCode": 200,
  "resultCode": 0
}
2025-02-21 15:25:35 [INFO]: MoMo payment created {
  "orderId": "1740126334879_67b495ca9d35c758607e27cc",
  "amount": 10000,
  "resultCode": 0
}
2025-02-21 16:49:35 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": ":",
  "60": "/",
  "61": "/",
  "62": "l",
  "63": "o",
  "64": "c",
  "65": "a",
  "66": "l",
  "67": "h",
  "68": "o",
  "69": "s",
  "70": "t",
  "71": ":",
  "72": "3",
  "73": "0",
  "74": "0",
  "75": "0",
  "76": "/",
  "77": "a",
  "78": "p",
  "79": "i",
  "80": "/",
  "81": "m",
  "82": "o",
  "83": "m",
  "84": "o",
  "85": "/",
  "86": "i",
  "87": "p",
  "88": "n",
  "89": "&",
  "90": "o",
  "91": "r",
  "92": "d",
  "93": "e",
  "94": "r",
  "95": "I",
  "96": "d",
  "97": "=",
  "98": "1",
  "99": "7",
  "100": "4",
  "101": "0",
  "102": "1",
  "103": "2",
  "104": "6",
  "105": "8",
  "106": "9",
  "107": "4",
  "108": "5",
  "109": "9",
  "110": "4",
  "111": "_",
  "112": "6",
  "113": "7",
  "114": "b",
  "115": "4",
  "116": "9",
  "117": "5",
  "118": "c",
  "119": "a",
  "120": "9",
  "121": "d",
  "122": "3",
  "123": "5",
  "124": "c",
  "125": "7",
  "126": "5",
  "127": "8",
  "128": "6",
  "129": "0",
  "130": "7",
  "131": "e",
  "132": "2",
  "133": "7",
  "134": "c",
  "135": "c",
  "136": "&",
  "137": "o",
  "138": "r",
  "139": "d",
  "140": "e",
  "141": "r",
  "142": "I",
  "143": "n",
  "144": "f",
  "145": "o",
  "146": "=",
  "147": "P",
  "148": "a",
  "149": "y",
  "150": "m",
  "151": "e",
  "152": "n",
  "153": "t",
  "154": " ",
  "155": "f",
  "156": "o",
  "157": "r",
  "158": " ",
  "159": "o",
  "160": "r",
  "161": "d",
  "162": "e",
  "163": "r",
  "164": " ",
  "165": "1",
  "166": "7",
  "167": "4",
  "168": "0",
  "169": "1",
  "170": "2",
  "171": "6",
  "172": "8",
  "173": "9",
  "174": "4",
  "175": "5",
  "176": "9",
  "177": "4",
  "178": "_",
  "179": "6",
  "180": "7",
  "181": "b",
  "182": "4",
  "183": "9",
  "184": "5",
  "185": "c",
  "186": "a",
  "187": "9",
  "188": "d",
  "189": "3",
  "190": "5",
  "191": "c",
  "192": "7",
  "193": "5",
  "194": "8",
  "195": "6",
  "196": "0",
  "197": "7",
  "198": "e",
  "199": "2",
  "200": "7",
  "201": "c",
  "202": "c",
  "203": "&",
  "204": "p",
  "205": "a",
  "206": "r",
  "207": "t",
  "208": "n",
  "209": "e",
  "210": "r",
  "211": "C",
  "212": "o",
  "213": "d",
  "214": "e",
  "215": "=",
  "216": "M",
  "217": "O",
  "218": "M",
  "219": "O",
  "220": "&",
  "221": "r",
  "222": "e",
  "223": "d",
  "224": "i",
  "225": "r",
  "226": "e",
  "227": "c",
  "228": "t",
  "229": "U",
  "230": "r",
  "231": "l",
  "232": "=",
  "233": "h",
  "234": "t",
  "235": "t",
  "236": "p",
  "237": ":",
  "238": "/",
  "239": "/",
  "240": "l",
  "241": "o",
  "242": "c",
  "243": "a",
  "244": "l",
  "245": "h",
  "246": "o",
  "247": "s",
  "248": "t",
  "249": ":",
  "250": "3",
  "251": "0",
  "252": "0",
  "253": "0",
  "254": "/",
  "255": "a",
  "256": "p",
  "257": "i",
  "258": "-",
  "259": "d",
  "260": "o",
  "261": "c",
  "262": "s",
  "263": "&",
  "264": "r",
  "265": "e",
  "266": "q",
  "267": "u",
  "268": "e",
  "269": "s",
  "270": "t",
  "271": "I",
  "272": "d",
  "273": "=",
  "274": "1",
  "275": "7",
  "276": "4",
  "277": "0",
  "278": "1",
  "279": "2",
  "280": "6",
  "281": "8",
  "282": "9",
  "283": "4",
  "284": "5",
  "285": "9",
  "286": "4",
  "287": "_",
  "288": "6",
  "289": "7",
  "290": "b",
  "291": "4",
  "292": "9",
  "293": "5",
  "294": "c",
  "295": "a",
  "296": "9",
  "297": "d",
  "298": "3",
  "299": "5",
  "300": "c",
  "301": "7",
  "302": "5",
  "303": "8",
  "304": "6",
  "305": "0",
  "306": "7",
  "307": "e",
  "308": "2",
  "309": "7",
  "310": "c",
  "311": "c",
  "312": "&",
  "313": "r",
  "314": "e",
  "315": "q",
  "316": "u",
  "317": "e",
  "318": "s",
  "319": "t",
  "320": "T",
  "321": "y",
  "322": "p",
  "323": "e",
  "324": "=",
  "325": "p",
  "326": "a",
  "327": "y",
  "328": "W",
  "329": "i",
  "330": "t",
  "331": "h",
  "332": "M",
  "333": "e",
  "334": "t",
  "335": "h",
  "336": "o",
  "337": "d"
}
2025-02-21 16:49:35 [INFO]: Signature: {
  "0": "0",
  "1": "1",
  "2": "7",
  "3": "c",
  "4": "5",
  "5": "a",
  "6": "0",
  "7": "7",
  "8": "2",
  "9": "c",
  "10": "c",
  "11": "6",
  "12": "4",
  "13": "0",
  "14": "5",
  "15": "f",
  "16": "1",
  "17": "f",
  "18": "b",
  "19": "2",
  "20": "1",
  "21": "4",
  "22": "8",
  "23": "b",
  "24": "3",
  "25": "b",
  "26": "c",
  "27": "9",
  "28": "e",
  "29": "3",
  "30": "f",
  "31": "1",
  "32": "f",
  "33": "d",
  "34": "5",
  "35": "a",
  "36": "3",
  "37": "0",
  "38": "9",
  "39": "a",
  "40": "6",
  "41": "a",
  "42": "1",
  "43": "9",
  "44": "0",
  "45": "7",
  "46": "2",
  "47": "5",
  "48": "3",
  "49": "5",
  "50": "7",
  "51": "0",
  "52": "e",
  "53": "3",
  "54": "0",
  "55": "b",
  "56": "4",
  "57": "1",
  "58": "9",
  "59": "9",
  "60": "a",
  "61": "b",
  "62": "c",
  "63": "d"
}
2025-02-21 16:49:35 [INFO]: MoMo API Response: {
  "statusCode": 200,
  "resultCode": 0
}
2025-02-21 16:49:35 [INFO]: MoMo payment created {
  "orderId": "1740126894594_67b495ca9d35c758607e27cc",
  "amount": 10000,
  "resultCode": 0
}
2025-02-21 17:05:49 [INFO]: Server is running on port 3000 
2025-02-21 17:05:49 [INFO]: Environment: development 
2025-02-21 17:05:49 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:05:52 [INFO]: Connected to MongoDB 
2025-02-21 17:06:17 [INFO]: Server is running on port 3000 
2025-02-21 17:06:17 [INFO]: Environment: development 
2025-02-21 17:06:17 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:06:20 [INFO]: Connected to MongoDB 
2025-02-21 17:06:30 [ERROR]: Invalid token {
  "path": "/api/momo/create",
  "method": "POST",
  "body": {
    "amount": 10000,
    "orderInfo": "Thanh toan khoa hoc ABC"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 17:06:40 [ERROR]: Invalid email or password {}
2025-02-21 17:06:40 [ERROR]: Invalid email or password {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "john@example.com",
    "password": "password123"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 17:06:56 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-21 17:07:06 [ERROR]: Error creating MoMo payment: env is not defined {
  "stack": "ReferenceError: env is not defined\n    at MoMoService._createRedirectUrl (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/momo.service.js:15:5)\n    at MoMoService.createPaymentUrl (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/momo.service.js:41:29)\n    at MoMoController.createPayment (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/momo.controller.js:22:45)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/routes/momo.routes.js:12:38\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/middleware/validate.middleware.js:19:13\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at verifyToken (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/middleware/auth.middleware.js:22:7)"
}
2025-02-21 17:07:06 [ERROR]: env is not defined {}
2025-02-21 17:07:06 [ERROR]: env is not defined {
  "path": "/api/momo/create",
  "method": "POST",
  "body": {
    "amount": 10000,
    "orderInfo": "Thanh toan khoa hoc ABC"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-21 17:09:38 [INFO]: Server is running on port 3000 
2025-02-21 17:09:38 [INFO]: Environment: development 
2025-02-21 17:09:38 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:09:41 [INFO]: Connected to MongoDB 
2025-02-21 17:10:12 [INFO]: Server is running on port 3000 
2025-02-21 17:10:12 [INFO]: Environment: development 
2025-02-21 17:10:12 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:10:15 [INFO]: Connected to MongoDB 
2025-02-21 17:10:40 [INFO]: Server is running on port 3000 
2025-02-21 17:10:40 [INFO]: Environment: development 
2025-02-21 17:10:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:10:43 [INFO]: Connected to MongoDB 
2025-02-21 17:10:59 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-21 17:11:19 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": ":",
  "60": "/",
  "61": "/",
  "62": "l",
  "63": "o",
  "64": "c",
  "65": "a",
  "66": "l",
  "67": "h",
  "68": "o",
  "69": "s",
  "70": "t",
  "71": ":",
  "72": "3",
  "73": "0",
  "74": "0",
  "75": "0",
  "76": "/",
  "77": "a",
  "78": "p",
  "79": "i",
  "80": "/",
  "81": "m",
  "82": "o",
  "83": "m",
  "84": "o",
  "85": "/",
  "86": "i",
  "87": "p",
  "88": "n",
  "89": "&",
  "90": "o",
  "91": "r",
  "92": "d",
  "93": "e",
  "94": "r",
  "95": "I",
  "96": "d",
  "97": "=",
  "98": "1",
  "99": "7",
  "100": "4",
  "101": "0",
  "102": "1",
  "103": "3",
  "104": "2",
  "105": "6",
  "106": "7",
  "107": "9",
  "108": "3",
  "109": "9",
  "110": "2",
  "111": "_",
  "112": "6",
  "113": "7",
  "114": "b",
  "115": "4",
  "116": "9",
  "117": "5",
  "118": "c",
  "119": "a",
  "120": "9",
  "121": "d",
  "122": "3",
  "123": "5",
  "124": "c",
  "125": "7",
  "126": "5",
  "127": "8",
  "128": "6",
  "129": "0",
  "130": "7",
  "131": "e",
  "132": "2",
  "133": "7",
  "134": "c",
  "135": "c",
  "136": "&",
  "137": "o",
  "138": "r",
  "139": "d",
  "140": "e",
  "141": "r",
  "142": "I",
  "143": "n",
  "144": "f",
  "145": "o",
  "146": "=",
  "147": "P",
  "148": "a",
  "149": "y",
  "150": "m",
  "151": "e",
  "152": "n",
  "153": "t",
  "154": " ",
  "155": "f",
  "156": "o",
  "157": "r",
  "158": " ",
  "159": "o",
  "160": "r",
  "161": "d",
  "162": "e",
  "163": "r",
  "164": " ",
  "165": "1",
  "166": "7",
  "167": "4",
  "168": "0",
  "169": "1",
  "170": "3",
  "171": "2",
  "172": "6",
  "173": "7",
  "174": "9",
  "175": "3",
  "176": "9",
  "177": "2",
  "178": "_",
  "179": "6",
  "180": "7",
  "181": "b",
  "182": "4",
  "183": "9",
  "184": "5",
  "185": "c",
  "186": "a",
  "187": "9",
  "188": "d",
  "189": "3",
  "190": "5",
  "191": "c",
  "192": "7",
  "193": "5",
  "194": "8",
  "195": "6",
  "196": "0",
  "197": "7",
  "198": "e",
  "199": "2",
  "200": "7",
  "201": "c",
  "202": "c",
  "203": "&",
  "204": "p",
  "205": "a",
  "206": "r",
  "207": "t",
  "208": "n",
  "209": "e",
  "210": "r",
  "211": "C",
  "212": "o",
  "213": "d",
  "214": "e",
  "215": "=",
  "216": "M",
  "217": "O",
  "218": "M",
  "219": "O",
  "220": "&",
  "221": "r",
  "222": "e",
  "223": "d",
  "224": "i",
  "225": "r",
  "226": "e",
  "227": "c",
  "228": "t",
  "229": "U",
  "230": "r",
  "231": "l",
  "232": "=",
  "233": "h",
  "234": "t",
  "235": "t",
  "236": "p",
  "237": ":",
  "238": "/",
  "239": "/",
  "240": "l",
  "241": "o",
  "242": "c",
  "243": "a",
  "244": "l",
  "245": "h",
  "246": "o",
  "247": "s",
  "248": "t",
  "249": ":",
  "250": "3",
  "251": "0",
  "252": "0",
  "253": "0",
  "254": "/",
  "255": "a",
  "256": "p",
  "257": "i",
  "258": "/",
  "259": "m",
  "260": "o",
  "261": "m",
  "262": "o",
  "263": "/",
  "264": "i",
  "265": "p",
  "266": "n",
  "267": "/",
  "268": "d",
  "269": "e",
  "270": "v",
  "271": "?",
  "272": "o",
  "273": "r",
  "274": "d",
  "275": "e",
  "276": "r",
  "277": "I",
  "278": "d",
  "279": "=",
  "280": "1",
  "281": "7",
  "282": "4",
  "283": "0",
  "284": "1",
  "285": "3",
  "286": "2",
  "287": "6",
  "288": "7",
  "289": "9",
  "290": "3",
  "291": "9",
  "292": "2",
  "293": "_",
  "294": "6",
  "295": "7",
  "296": "b",
  "297": "4",
  "298": "9",
  "299": "5",
  "300": "c",
  "301": "a",
  "302": "9",
  "303": "d",
  "304": "3",
  "305": "5",
  "306": "c",
  "307": "7",
  "308": "5",
  "309": "8",
  "310": "6",
  "311": "0",
  "312": "7",
  "313": "e",
  "314": "2",
  "315": "7",
  "316": "c",
  "317": "c",
  "318": "&",
  "319": "a",
  "320": "m",
  "321": "o",
  "322": "u",
  "323": "n",
  "324": "t",
  "325": "=",
  "326": "1",
  "327": "0",
  "328": "0",
  "329": "0",
  "330": "0",
  "331": "&",
  "332": "r",
  "333": "e",
  "334": "q",
  "335": "u",
  "336": "e",
  "337": "s",
  "338": "t",
  "339": "I",
  "340": "d",
  "341": "=",
  "342": "1",
  "343": "7",
  "344": "4",
  "345": "0",
  "346": "1",
  "347": "3",
  "348": "2",
  "349": "6",
  "350": "7",
  "351": "9",
  "352": "3",
  "353": "9",
  "354": "2",
  "355": "_",
  "356": "6",
  "357": "7",
  "358": "b",
  "359": "4",
  "360": "9",
  "361": "5",
  "362": "c",
  "363": "a",
  "364": "9",
  "365": "d",
  "366": "3",
  "367": "5",
  "368": "c",
  "369": "7",
  "370": "5",
  "371": "8",
  "372": "6",
  "373": "0",
  "374": "7",
  "375": "e",
  "376": "2",
  "377": "7",
  "378": "c",
  "379": "c",
  "380": "&",
  "381": "r",
  "382": "e",
  "383": "q",
  "384": "u",
  "385": "e",
  "386": "s",
  "387": "t",
  "388": "T",
  "389": "y",
  "390": "p",
  "391": "e",
  "392": "=",
  "393": "p",
  "394": "a",
  "395": "y",
  "396": "W",
  "397": "i",
  "398": "t",
  "399": "h",
  "400": "M",
  "401": "e",
  "402": "t",
  "403": "h",
  "404": "o",
  "405": "d"
}
2025-02-21 17:11:19 [INFO]: Signature: {
  "0": "d",
  "1": "f",
  "2": "2",
  "3": "e",
  "4": "a",
  "5": "b",
  "6": "d",
  "7": "d",
  "8": "e",
  "9": "7",
  "10": "4",
  "11": "b",
  "12": "0",
  "13": "1",
  "14": "f",
  "15": "a",
  "16": "a",
  "17": "6",
  "18": "d",
  "19": "e",
  "20": "3",
  "21": "e",
  "22": "f",
  "23": "f",
  "24": "0",
  "25": "e",
  "26": "1",
  "27": "a",
  "28": "a",
  "29": "1",
  "30": "2",
  "31": "b",
  "32": "4",
  "33": "1",
  "34": "8",
  "35": "6",
  "36": "f",
  "37": "5",
  "38": "9",
  "39": "9",
  "40": "a",
  "41": "f",
  "42": "a",
  "43": "b",
  "44": "9",
  "45": "0",
  "46": "f",
  "47": "c",
  "48": "9",
  "49": "8",
  "50": "f",
  "51": "9",
  "52": "6",
  "53": "e",
  "54": "2",
  "55": "c",
  "56": "6",
  "57": "b",
  "58": "6",
  "59": "5",
  "60": "c",
  "61": "6",
  "62": "a",
  "63": "2"
}
2025-02-21 17:12:10 [INFO]: MoMo API Response: {
  "statusCode": 400,
  "resultCode": 11007
}
2025-02-21 17:12:10 [INFO]: MoMo payment created {
  "orderId": "1740132679392_67b495ca9d35c758607e27cc",
  "amount": 10000,
  "resultCode": 11007
}
2025-02-21 17:12:36 [INFO]: Server is running on port 3000 
2025-02-21 17:12:36 [INFO]: Environment: development 
2025-02-21 17:12:36 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:12:39 [INFO]: Connected to MongoDB 
2025-02-21 17:13:04 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-21 17:13:14 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": ":",
  "60": "/",
  "61": "/",
  "62": "l",
  "63": "o",
  "64": "c",
  "65": "a",
  "66": "l",
  "67": "h",
  "68": "o",
  "69": "s",
  "70": "t",
  "71": ":",
  "72": "3",
  "73": "0",
  "74": "0",
  "75": "0",
  "76": "/",
  "77": "a",
  "78": "p",
  "79": "i",
  "80": "/",
  "81": "m",
  "82": "o",
  "83": "m",
  "84": "o",
  "85": "/",
  "86": "i",
  "87": "p",
  "88": "n",
  "89": "&",
  "90": "o",
  "91": "r",
  "92": "d",
  "93": "e",
  "94": "r",
  "95": "I",
  "96": "d",
  "97": "=",
  "98": "1",
  "99": "7",
  "100": "4",
  "101": "0",
  "102": "1",
  "103": "3",
  "104": "2",
  "105": "7",
  "106": "9",
  "107": "4",
  "108": "5",
  "109": "8",
  "110": "8",
  "111": "_",
  "112": "6",
  "113": "7",
  "114": "b",
  "115": "4",
  "116": "9",
  "117": "5",
  "118": "c",
  "119": "a",
  "120": "9",
  "121": "d",
  "122": "3",
  "123": "5",
  "124": "c",
  "125": "7",
  "126": "5",
  "127": "8",
  "128": "6",
  "129": "0",
  "130": "7",
  "131": "e",
  "132": "2",
  "133": "7",
  "134": "c",
  "135": "c",
  "136": "&",
  "137": "o",
  "138": "r",
  "139": "d",
  "140": "e",
  "141": "r",
  "142": "I",
  "143": "n",
  "144": "f",
  "145": "o",
  "146": "=",
  "147": "P",
  "148": "a",
  "149": "y",
  "150": "m",
  "151": "e",
  "152": "n",
  "153": "t",
  "154": " ",
  "155": "f",
  "156": "o",
  "157": "r",
  "158": " ",
  "159": "o",
  "160": "r",
  "161": "d",
  "162": "e",
  "163": "r",
  "164": " ",
  "165": "1",
  "166": "7",
  "167": "4",
  "168": "0",
  "169": "1",
  "170": "3",
  "171": "2",
  "172": "7",
  "173": "9",
  "174": "4",
  "175": "5",
  "176": "8",
  "177": "8",
  "178": "_",
  "179": "6",
  "180": "7",
  "181": "b",
  "182": "4",
  "183": "9",
  "184": "5",
  "185": "c",
  "186": "a",
  "187": "9",
  "188": "d",
  "189": "3",
  "190": "5",
  "191": "c",
  "192": "7",
  "193": "5",
  "194": "8",
  "195": "6",
  "196": "0",
  "197": "7",
  "198": "e",
  "199": "2",
  "200": "7",
  "201": "c",
  "202": "c",
  "203": "&",
  "204": "p",
  "205": "a",
  "206": "r",
  "207": "t",
  "208": "n",
  "209": "e",
  "210": "r",
  "211": "C",
  "212": "o",
  "213": "d",
  "214": "e",
  "215": "=",
  "216": "M",
  "217": "O",
  "218": "M",
  "219": "O",
  "220": "&",
  "221": "r",
  "222": "e",
  "223": "d",
  "224": "i",
  "225": "r",
  "226": "e",
  "227": "c",
  "228": "t",
  "229": "U",
  "230": "r",
  "231": "l",
  "232": "=",
  "233": "h",
  "234": "t",
  "235": "t",
  "236": "p",
  "237": ":",
  "238": "/",
  "239": "/",
  "240": "l",
  "241": "o",
  "242": "c",
  "243": "a",
  "244": "l",
  "245": "h",
  "246": "o",
  "247": "s",
  "248": "t",
  "249": ":",
  "250": "3",
  "251": "0",
  "252": "0",
  "253": "0",
  "254": "/",
  "255": "a",
  "256": "p",
  "257": "i",
  "258": "/",
  "259": "m",
  "260": "o",
  "261": "m",
  "262": "o",
  "263": "/",
  "264": "i",
  "265": "p",
  "266": "n",
  "267": "/",
  "268": "d",
  "269": "e",
  "270": "v",
  "271": "?",
  "272": "o",
  "273": "r",
  "274": "d",
  "275": "e",
  "276": "r",
  "277": "I",
  "278": "d",
  "279": "=",
  "280": "1",
  "281": "7",
  "282": "4",
  "283": "0",
  "284": "1",
  "285": "3",
  "286": "2",
  "287": "7",
  "288": "9",
  "289": "4",
  "290": "5",
  "291": "8",
  "292": "8",
  "293": "_",
  "294": "6",
  "295": "7",
  "296": "b",
  "297": "4",
  "298": "9",
  "299": "5",
  "300": "c",
  "301": "a",
  "302": "9",
  "303": "d",
  "304": "3",
  "305": "5",
  "306": "c",
  "307": "7",
  "308": "5",
  "309": "8",
  "310": "6",
  "311": "0",
  "312": "7",
  "313": "e",
  "314": "2",
  "315": "7",
  "316": "c",
  "317": "c",
  "318": "&",
  "319": "r",
  "320": "e",
  "321": "q",
  "322": "u",
  "323": "e",
  "324": "s",
  "325": "t",
  "326": "I",
  "327": "d",
  "328": "=",
  "329": "1",
  "330": "7",
  "331": "4",
  "332": "0",
  "333": "1",
  "334": "3",
  "335": "2",
  "336": "7",
  "337": "9",
  "338": "4",
  "339": "5",
  "340": "8",
  "341": "8",
  "342": "_",
  "343": "6",
  "344": "7",
  "345": "b",
  "346": "4",
  "347": "9",
  "348": "5",
  "349": "c",
  "350": "a",
  "351": "9",
  "352": "d",
  "353": "3",
  "354": "5",
  "355": "c",
  "356": "7",
  "357": "5",
  "358": "8",
  "359": "6",
  "360": "0",
  "361": "7",
  "362": "e",
  "363": "2",
  "364": "7",
  "365": "c",
  "366": "c",
  "367": "&",
  "368": "r",
  "369": "e",
  "370": "q",
  "371": "u",
  "372": "e",
  "373": "s",
  "374": "t",
  "375": "T",
  "376": "y",
  "377": "p",
  "378": "e",
  "379": "=",
  "380": "p",
  "381": "a",
  "382": "y",
  "383": "W",
  "384": "i",
  "385": "t",
  "386": "h",
  "387": "M",
  "388": "e",
  "389": "t",
  "390": "h",
  "391": "o",
  "392": "d"
}
2025-02-21 17:13:14 [INFO]: Signature: {
  "0": "3",
  "1": "0",
  "2": "e",
  "3": "4",
  "4": "b",
  "5": "d",
  "6": "a",
  "7": "8",
  "8": "5",
  "9": "9",
  "10": "c",
  "11": "d",
  "12": "1",
  "13": "3",
  "14": "1",
  "15": "4",
  "16": "8",
  "17": "9",
  "18": "9",
  "19": "6",
  "20": "4",
  "21": "2",
  "22": "b",
  "23": "c",
  "24": "5",
  "25": "c",
  "26": "3",
  "27": "7",
  "28": "4",
  "29": "b",
  "30": "9",
  "31": "d",
  "32": "c",
  "33": "a",
  "34": "e",
  "35": "1",
  "36": "a",
  "37": "6",
  "38": "7",
  "39": "c",
  "40": "e",
  "41": "4",
  "42": "d",
  "43": "1",
  "44": "2",
  "45": "2",
  "46": "c",
  "47": "e",
  "48": "3",
  "49": "b",
  "50": "1",
  "51": "0",
  "52": "7",
  "53": "d",
  "54": "3",
  "55": "9",
  "56": "2",
  "57": "4",
  "58": "2",
  "59": "9",
  "60": "e",
  "61": "f",
  "62": "3",
  "63": "4"
}
2025-02-21 17:13:17 [INFO]: MoMo API Response: {
  "statusCode": 400,
  "resultCode": 11007
}
2025-02-21 17:13:17 [INFO]: MoMo payment created {
  "orderId": "1740132794588_67b495ca9d35c758607e27cc",
  "amount": 10000,
  "resultCode": 11007
}
2025-02-21 17:15:51 [INFO]: Server is running on port 3000 
2025-02-21 17:15:51 [INFO]: Environment: development 
2025-02-21 17:15:51 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:15:54 [INFO]: Connected to MongoDB 
2025-02-21 17:15:55 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": ":",
  "60": "/",
  "61": "/",
  "62": "l",
  "63": "o",
  "64": "c",
  "65": "a",
  "66": "l",
  "67": "h",
  "68": "o",
  "69": "s",
  "70": "t",
  "71": ":",
  "72": "3",
  "73": "0",
  "74": "0",
  "75": "0",
  "76": "/",
  "77": "a",
  "78": "p",
  "79": "i",
  "80": "/",
  "81": "m",
  "82": "o",
  "83": "m",
  "84": "o",
  "85": "/",
  "86": "i",
  "87": "p",
  "88": "n",
  "89": "&",
  "90": "o",
  "91": "r",
  "92": "d",
  "93": "e",
  "94": "r",
  "95": "I",
  "96": "d",
  "97": "=",
  "98": "1",
  "99": "7",
  "100": "4",
  "101": "0",
  "102": "1",
  "103": "3",
  "104": "2",
  "105": "9",
  "106": "5",
  "107": "5",
  "108": "5",
  "109": "7",
  "110": "2",
  "111": "_",
  "112": "6",
  "113": "7",
  "114": "b",
  "115": "4",
  "116": "9",
  "117": "5",
  "118": "c",
  "119": "a",
  "120": "9",
  "121": "d",
  "122": "3",
  "123": "5",
  "124": "c",
  "125": "7",
  "126": "5",
  "127": "8",
  "128": "6",
  "129": "0",
  "130": "7",
  "131": "e",
  "132": "2",
  "133": "7",
  "134": "c",
  "135": "c",
  "136": "&",
  "137": "o",
  "138": "r",
  "139": "d",
  "140": "e",
  "141": "r",
  "142": "I",
  "143": "n",
  "144": "f",
  "145": "o",
  "146": "=",
  "147": "P",
  "148": "a",
  "149": "y",
  "150": "m",
  "151": "e",
  "152": "n",
  "153": "t",
  "154": " ",
  "155": "f",
  "156": "o",
  "157": "r",
  "158": " ",
  "159": "o",
  "160": "r",
  "161": "d",
  "162": "e",
  "163": "r",
  "164": " ",
  "165": "1",
  "166": "7",
  "167": "4",
  "168": "0",
  "169": "1",
  "170": "3",
  "171": "2",
  "172": "9",
  "173": "5",
  "174": "5",
  "175": "5",
  "176": "7",
  "177": "2",
  "178": "_",
  "179": "6",
  "180": "7",
  "181": "b",
  "182": "4",
  "183": "9",
  "184": "5",
  "185": "c",
  "186": "a",
  "187": "9",
  "188": "d",
  "189": "3",
  "190": "5",
  "191": "c",
  "192": "7",
  "193": "5",
  "194": "8",
  "195": "6",
  "196": "0",
  "197": "7",
  "198": "e",
  "199": "2",
  "200": "7",
  "201": "c",
  "202": "c",
  "203": "&",
  "204": "p",
  "205": "a",
  "206": "r",
  "207": "t",
  "208": "n",
  "209": "e",
  "210": "r",
  "211": "C",
  "212": "o",
  "213": "d",
  "214": "e",
  "215": "=",
  "216": "M",
  "217": "O",
  "218": "M",
  "219": "O",
  "220": "&",
  "221": "r",
  "222": "e",
  "223": "d",
  "224": "i",
  "225": "r",
  "226": "e",
  "227": "c",
  "228": "t",
  "229": "U",
  "230": "r",
  "231": "l",
  "232": "=",
  "233": "h",
  "234": "t",
  "235": "t",
  "236": "p",
  "237": ":",
  "238": "/",
  "239": "/",
  "240": "l",
  "241": "o",
  "242": "c",
  "243": "a",
  "244": "l",
  "245": "h",
  "246": "o",
  "247": "s",
  "248": "t",
  "249": ":",
  "250": "3",
  "251": "0",
  "252": "0",
  "253": "0",
  "254": "/",
  "255": "a",
  "256": "p",
  "257": "i",
  "258": "/",
  "259": "m",
  "260": "o",
  "261": "m",
  "262": "o",
  "263": "/",
  "264": "i",
  "265": "p",
  "266": "n",
  "267": "&",
  "268": "r",
  "269": "e",
  "270": "q",
  "271": "u",
  "272": "e",
  "273": "s",
  "274": "t",
  "275": "I",
  "276": "d",
  "277": "=",
  "278": "1",
  "279": "7",
  "280": "4",
  "281": "0",
  "282": "1",
  "283": "3",
  "284": "2",
  "285": "9",
  "286": "5",
  "287": "5",
  "288": "5",
  "289": "7",
  "290": "2",
  "291": "_",
  "292": "6",
  "293": "7",
  "294": "b",
  "295": "4",
  "296": "9",
  "297": "5",
  "298": "c",
  "299": "a",
  "300": "9",
  "301": "d",
  "302": "3",
  "303": "5",
  "304": "c",
  "305": "7",
  "306": "5",
  "307": "8",
  "308": "6",
  "309": "0",
  "310": "7",
  "311": "e",
  "312": "2",
  "313": "7",
  "314": "c",
  "315": "c",
  "316": "&",
  "317": "r",
  "318": "e",
  "319": "q",
  "320": "u",
  "321": "e",
  "322": "s",
  "323": "t",
  "324": "T",
  "325": "y",
  "326": "p",
  "327": "e",
  "328": "=",
  "329": "p",
  "330": "a",
  "331": "y",
  "332": "W",
  "333": "i",
  "334": "t",
  "335": "h",
  "336": "M",
  "337": "e",
  "338": "t",
  "339": "h",
  "340": "o",
  "341": "d"
}
2025-02-21 17:15:55 [INFO]: Signature: {
  "0": "2",
  "1": "8",
  "2": "0",
  "3": "5",
  "4": "1",
  "5": "0",
  "6": "5",
  "7": "9",
  "8": "f",
  "9": "1",
  "10": "5",
  "11": "4",
  "12": "c",
  "13": "c",
  "14": "3",
  "15": "a",
  "16": "8",
  "17": "5",
  "18": "6",
  "19": "b",
  "20": "b",
  "21": "4",
  "22": "8",
  "23": "f",
  "24": "3",
  "25": "6",
  "26": "d",
  "27": "9",
  "28": "e",
  "29": "f",
  "30": "e",
  "31": "2",
  "32": "c",
  "33": "7",
  "34": "c",
  "35": "1",
  "36": "3",
  "37": "6",
  "38": "e",
  "39": "2",
  "40": "7",
  "41": "e",
  "42": "1",
  "43": "1",
  "44": "f",
  "45": "e",
  "46": "8",
  "47": "2",
  "48": "d",
  "49": "2",
  "50": "f",
  "51": "a",
  "52": "7",
  "53": "7",
  "54": "a",
  "55": "9",
  "56": "5",
  "57": "3",
  "58": "6",
  "59": "8",
  "60": "1",
  "61": "9",
  "62": "d",
  "63": "5"
}
2025-02-21 17:15:57 [INFO]: MoMo API Response: {
  "statusCode": 400,
  "resultCode": 11007
}
2025-02-21 17:15:59 [INFO]: MoMo payment created {
  "orderId": "1740132955572_67b495ca9d35c758607e27cc",
  "amount": 10000,
  "resultCode": 11007
}
2025-02-21 17:17:00 [INFO]: Server is running on port 3000 
2025-02-21 17:17:00 [INFO]: Environment: development 
2025-02-21 17:17:00 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:17:04 [INFO]: Connected to MongoDB 
2025-02-21 17:17:04 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": ":",
  "60": "/",
  "61": "/",
  "62": "l",
  "63": "o",
  "64": "c",
  "65": "a",
  "66": "l",
  "67": "h",
  "68": "o",
  "69": "s",
  "70": "t",
  "71": ":",
  "72": "3",
  "73": "0",
  "74": "0",
  "75": "0",
  "76": "/",
  "77": "a",
  "78": "p",
  "79": "i",
  "80": "/",
  "81": "m",
  "82": "o",
  "83": "m",
  "84": "o",
  "85": "/",
  "86": "i",
  "87": "p",
  "88": "n",
  "89": "&",
  "90": "o",
  "91": "r",
  "92": "d",
  "93": "e",
  "94": "r",
  "95": "I",
  "96": "d",
  "97": "=",
  "98": "1",
  "99": "7",
  "100": "4",
  "101": "0",
  "102": "1",
  "103": "3",
  "104": "3",
  "105": "0",
  "106": "2",
  "107": "4",
  "108": "6",
  "109": "6",
  "110": "9",
  "111": "_",
  "112": "6",
  "113": "7",
  "114": "b",
  "115": "4",
  "116": "9",
  "117": "5",
  "118": "c",
  "119": "a",
  "120": "9",
  "121": "d",
  "122": "3",
  "123": "5",
  "124": "c",
  "125": "7",
  "126": "5",
  "127": "8",
  "128": "6",
  "129": "0",
  "130": "7",
  "131": "e",
  "132": "2",
  "133": "7",
  "134": "c",
  "135": "c",
  "136": "&",
  "137": "o",
  "138": "r",
  "139": "d",
  "140": "e",
  "141": "r",
  "142": "I",
  "143": "n",
  "144": "f",
  "145": "o",
  "146": "=",
  "147": "P",
  "148": "a",
  "149": "y",
  "150": "m",
  "151": "e",
  "152": "n",
  "153": "t",
  "154": " ",
  "155": "f",
  "156": "o",
  "157": "r",
  "158": " ",
  "159": "o",
  "160": "r",
  "161": "d",
  "162": "e",
  "163": "r",
  "164": " ",
  "165": "1",
  "166": "7",
  "167": "4",
  "168": "0",
  "169": "1",
  "170": "3",
  "171": "3",
  "172": "0",
  "173": "2",
  "174": "4",
  "175": "6",
  "176": "6",
  "177": "9",
  "178": "_",
  "179": "6",
  "180": "7",
  "181": "b",
  "182": "4",
  "183": "9",
  "184": "5",
  "185": "c",
  "186": "a",
  "187": "9",
  "188": "d",
  "189": "3",
  "190": "5",
  "191": "c",
  "192": "7",
  "193": "5",
  "194": "8",
  "195": "6",
  "196": "0",
  "197": "7",
  "198": "e",
  "199": "2",
  "200": "7",
  "201": "c",
  "202": "c",
  "203": "&",
  "204": "p",
  "205": "a",
  "206": "r",
  "207": "t",
  "208": "n",
  "209": "e",
  "210": "r",
  "211": "C",
  "212": "o",
  "213": "d",
  "214": "e",
  "215": "=",
  "216": "M",
  "217": "O",
  "218": "M",
  "219": "O",
  "220": "&",
  "221": "r",
  "222": "e",
  "223": "d",
  "224": "i",
  "225": "r",
  "226": "e",
  "227": "c",
  "228": "t",
  "229": "U",
  "230": "r",
  "231": "l",
  "232": "=",
  "233": "h",
  "234": "t",
  "235": "t",
  "236": "p",
  "237": ":",
  "238": "/",
  "239": "/",
  "240": "l",
  "241": "o",
  "242": "c",
  "243": "a",
  "244": "l",
  "245": "h",
  "246": "o",
  "247": "s",
  "248": "t",
  "249": ":",
  "250": "3",
  "251": "0",
  "252": "0",
  "253": "0",
  "254": "/",
  "255": "a",
  "256": "p",
  "257": "i",
  "258": "-",
  "259": "d",
  "260": "o",
  "261": "c",
  "262": "s",
  "263": "&",
  "264": "r",
  "265": "e",
  "266": "q",
  "267": "u",
  "268": "e",
  "269": "s",
  "270": "t",
  "271": "I",
  "272": "d",
  "273": "=",
  "274": "1",
  "275": "7",
  "276": "4",
  "277": "0",
  "278": "1",
  "279": "3",
  "280": "3",
  "281": "0",
  "282": "2",
  "283": "4",
  "284": "6",
  "285": "6",
  "286": "9",
  "287": "_",
  "288": "6",
  "289": "7",
  "290": "b",
  "291": "4",
  "292": "9",
  "293": "5",
  "294": "c",
  "295": "a",
  "296": "9",
  "297": "d",
  "298": "3",
  "299": "5",
  "300": "c",
  "301": "7",
  "302": "5",
  "303": "8",
  "304": "6",
  "305": "0",
  "306": "7",
  "307": "e",
  "308": "2",
  "309": "7",
  "310": "c",
  "311": "c",
  "312": "&",
  "313": "r",
  "314": "e",
  "315": "q",
  "316": "u",
  "317": "e",
  "318": "s",
  "319": "t",
  "320": "T",
  "321": "y",
  "322": "p",
  "323": "e",
  "324": "=",
  "325": "p",
  "326": "a",
  "327": "y",
  "328": "W",
  "329": "i",
  "330": "t",
  "331": "h",
  "332": "M",
  "333": "e",
  "334": "t",
  "335": "h",
  "336": "o",
  "337": "d"
}
2025-02-21 17:17:04 [INFO]: Signature: {
  "0": "3",
  "1": "3",
  "2": "7",
  "3": "c",
  "4": "d",
  "5": "7",
  "6": "f",
  "7": "1",
  "8": "8",
  "9": "b",
  "10": "1",
  "11": "b",
  "12": "4",
  "13": "b",
  "14": "3",
  "15": "f",
  "16": "b",
  "17": "3",
  "18": "d",
  "19": "9",
  "20": "2",
  "21": "7",
  "22": "2",
  "23": "f",
  "24": "9",
  "25": "2",
  "26": "b",
  "27": "4",
  "28": "b",
  "29": "f",
  "30": "b",
  "31": "8",
  "32": "7",
  "33": "f",
  "34": "5",
  "35": "1",
  "36": "c",
  "37": "f",
  "38": "6",
  "39": "6",
  "40": "1",
  "41": "b",
  "42": "f",
  "43": "c",
  "44": "2",
  "45": "5",
  "46": "4",
  "47": "e",
  "48": "0",
  "49": "f",
  "50": "2",
  "51": "c",
  "52": "b",
  "53": "d",
  "54": "6",
  "55": "a",
  "56": "5",
  "57": "4",
  "58": "d",
  "59": "0",
  "60": "a",
  "61": "e",
  "62": "9",
  "63": "0"
}
2025-02-21 17:17:06 [INFO]: MoMo API Response: {
  "statusCode": 200,
  "resultCode": 0
}
2025-02-21 17:17:07 [INFO]: MoMo payment created {
  "orderId": "1740133024669_67b495ca9d35c758607e27cc",
  "amount": 10000,
  "resultCode": 0
}
2025-02-21 17:17:56 [INFO]: Server is running on port 3000 
2025-02-21 17:17:56 [INFO]: Environment: development 
2025-02-21 17:17:56 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:17:57 [INFO]: Server is running on port 3000 
2025-02-21 17:17:57 [INFO]: Environment: development 
2025-02-21 17:17:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:17:59 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": ":",
  "60": "/",
  "61": "/",
  "62": "l",
  "63": "o",
  "64": "c",
  "65": "a",
  "66": "l",
  "67": "h",
  "68": "o",
  "69": "s",
  "70": "t",
  "71": ":",
  "72": "3",
  "73": "0",
  "74": "0",
  "75": "0",
  "76": "/",
  "77": "a",
  "78": "p",
  "79": "i",
  "80": "/",
  "81": "m",
  "82": "o",
  "83": "m",
  "84": "o",
  "85": "/",
  "86": "i",
  "87": "p",
  "88": "n",
  "89": "&",
  "90": "o",
  "91": "r",
  "92": "d",
  "93": "e",
  "94": "r",
  "95": "I",
  "96": "d",
  "97": "=",
  "98": "1",
  "99": "7",
  "100": "4",
  "101": "0",
  "102": "1",
  "103": "3",
  "104": "3",
  "105": "0",
  "106": "7",
  "107": "9",
  "108": "7",
  "109": "0",
  "110": "8",
  "111": "_",
  "112": "6",
  "113": "7",
  "114": "b",
  "115": "4",
  "116": "9",
  "117": "5",
  "118": "c",
  "119": "a",
  "120": "9",
  "121": "d",
  "122": "3",
  "123": "5",
  "124": "c",
  "125": "7",
  "126": "5",
  "127": "8",
  "128": "6",
  "129": "0",
  "130": "7",
  "131": "e",
  "132": "2",
  "133": "7",
  "134": "c",
  "135": "c",
  "136": "&",
  "137": "o",
  "138": "r",
  "139": "d",
  "140": "e",
  "141": "r",
  "142": "I",
  "143": "n",
  "144": "f",
  "145": "o",
  "146": "=",
  "147": "P",
  "148": "a",
  "149": "y",
  "150": "m",
  "151": "e",
  "152": "n",
  "153": "t",
  "154": " ",
  "155": "f",
  "156": "o",
  "157": "r",
  "158": " ",
  "159": "o",
  "160": "r",
  "161": "d",
  "162": "e",
  "163": "r",
  "164": " ",
  "165": "1",
  "166": "7",
  "167": "4",
  "168": "0",
  "169": "1",
  "170": "3",
  "171": "3",
  "172": "0",
  "173": "7",
  "174": "9",
  "175": "7",
  "176": "0",
  "177": "8",
  "178": "_",
  "179": "6",
  "180": "7",
  "181": "b",
  "182": "4",
  "183": "9",
  "184": "5",
  "185": "c",
  "186": "a",
  "187": "9",
  "188": "d",
  "189": "3",
  "190": "5",
  "191": "c",
  "192": "7",
  "193": "5",
  "194": "8",
  "195": "6",
  "196": "0",
  "197": "7",
  "198": "e",
  "199": "2",
  "200": "7",
  "201": "c",
  "202": "c",
  "203": "&",
  "204": "p",
  "205": "a",
  "206": "r",
  "207": "t",
  "208": "n",
  "209": "e",
  "210": "r",
  "211": "C",
  "212": "o",
  "213": "d",
  "214": "e",
  "215": "=",
  "216": "M",
  "217": "O",
  "218": "M",
  "219": "O",
  "220": "&",
  "221": "r",
  "222": "e",
  "223": "d",
  "224": "i",
  "225": "r",
  "226": "e",
  "227": "c",
  "228": "t",
  "229": "U",
  "230": "r",
  "231": "l",
  "232": "=",
  "233": "h",
  "234": "t",
  "235": "t",
  "236": "p",
  "237": ":",
  "238": "/",
  "239": "/",
  "240": "l",
  "241": "o",
  "242": "c",
  "243": "a",
  "244": "l",
  "245": "h",
  "246": "o",
  "247": "s",
  "248": "t",
  "249": ":",
  "250": "3",
  "251": "0",
  "252": "0",
  "253": "0",
  "254": "/",
  "255": "a",
  "256": "p",
  "257": "i",
  "258": "/",
  "259": "m",
  "260": "o",
  "261": "m",
  "262": "o",
  "263": "/",
  "264": "i",
  "265": "p",
  "266": "n",
  "267": "&",
  "268": "r",
  "269": "e",
  "270": "q",
  "271": "u",
  "272": "e",
  "273": "s",
  "274": "t",
  "275": "I",
  "276": "d",
  "277": "=",
  "278": "1",
  "279": "7",
  "280": "4",
  "281": "0",
  "282": "1",
  "283": "3",
  "284": "3",
  "285": "0",
  "286": "7",
  "287": "9",
  "288": "7",
  "289": "0",
  "290": "8",
  "291": "_",
  "292": "6",
  "293": "7",
  "294": "b",
  "295": "4",
  "296": "9",
  "297": "5",
  "298": "c",
  "299": "a",
  "300": "9",
  "301": "d",
  "302": "3",
  "303": "5",
  "304": "c",
  "305": "7",
  "306": "5",
  "307": "8",
  "308": "6",
  "309": "0",
  "310": "7",
  "311": "e",
  "312": "2",
  "313": "7",
  "314": "c",
  "315": "c",
  "316": "&",
  "317": "r",
  "318": "e",
  "319": "q",
  "320": "u",
  "321": "e",
  "322": "s",
  "323": "t",
  "324": "T",
  "325": "y",
  "326": "p",
  "327": "e",
  "328": "=",
  "329": "p",
  "330": "a",
  "331": "y",
  "332": "W",
  "333": "i",
  "334": "t",
  "335": "h",
  "336": "M",
  "337": "e",
  "338": "t",
  "339": "h",
  "340": "o",
  "341": "d"
}
2025-02-21 17:17:59 [INFO]: Signature: {
  "0": "c",
  "1": "e",
  "2": "1",
  "3": "4",
  "4": "6",
  "5": "f",
  "6": "6",
  "7": "7",
  "8": "2",
  "9": "c",
  "10": "d",
  "11": "3",
  "12": "e",
  "13": "7",
  "14": "2",
  "15": "f",
  "16": "4",
  "17": "3",
  "18": "9",
  "19": "6",
  "20": "5",
  "21": "9",
  "22": "0",
  "23": "b",
  "24": "a",
  "25": "a",
  "26": "a",
  "27": "2",
  "28": "e",
  "29": "6",
  "30": "f",
  "31": "e",
  "32": "1",
  "33": "1",
  "34": "2",
  "35": "8",
  "36": "5",
  "37": "9",
  "38": "d",
  "39": "1",
  "40": "4",
  "41": "e",
  "42": "4",
  "43": "0",
  "44": "6",
  "45": "8",
  "46": "8",
  "47": "2",
  "48": "f",
  "49": "2",
  "50": "6",
  "51": "b",
  "52": "d",
  "53": "8",
  "54": "0",
  "55": "5",
  "56": "7",
  "57": "7",
  "58": "5",
  "59": "a",
  "60": "2",
  "61": "e",
  "62": "1",
  "63": "c"
}
2025-02-21 17:18:27 [INFO]: MoMo API Response: {
  "statusCode": 400,
  "resultCode": 11007
}
2025-02-21 17:18:27 [INFO]: Connected to MongoDB 
2025-02-21 17:18:29 [INFO]: MoMo payment created {
  "orderId": "1740133079708_67b495ca9d35c758607e27cc",
  "amount": 10000,
  "resultCode": 11007
}
2025-02-21 17:19:00 [INFO]: Server is running on port 3000 
2025-02-21 17:19:00 [INFO]: Environment: development 
2025-02-21 17:19:00 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:19:03 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": ":",
  "60": "/",
  "61": "/",
  "62": "l",
  "63": "o",
  "64": "c",
  "65": "a",
  "66": "l",
  "67": "h",
  "68": "o",
  "69": "s",
  "70": "t",
  "71": ":",
  "72": "3",
  "73": "0",
  "74": "0",
  "75": "0",
  "76": "/",
  "77": "a",
  "78": "p",
  "79": "i",
  "80": "/",
  "81": "m",
  "82": "o",
  "83": "m",
  "84": "o",
  "85": "/",
  "86": "i",
  "87": "p",
  "88": "n",
  "89": "&",
  "90": "o",
  "91": "r",
  "92": "d",
  "93": "e",
  "94": "r",
  "95": "I",
  "96": "d",
  "97": "=",
  "98": "1",
  "99": "7",
  "100": "4",
  "101": "0",
  "102": "1",
  "103": "3",
  "104": "3",
  "105": "1",
  "106": "4",
  "107": "3",
  "108": "4",
  "109": "4",
  "110": "3",
  "111": "_",
  "112": "6",
  "113": "7",
  "114": "b",
  "115": "4",
  "116": "9",
  "117": "5",
  "118": "c",
  "119": "a",
  "120": "9",
  "121": "d",
  "122": "3",
  "123": "5",
  "124": "c",
  "125": "7",
  "126": "5",
  "127": "8",
  "128": "6",
  "129": "0",
  "130": "7",
  "131": "e",
  "132": "2",
  "133": "7",
  "134": "c",
  "135": "c",
  "136": "&",
  "137": "o",
  "138": "r",
  "139": "d",
  "140": "e",
  "141": "r",
  "142": "I",
  "143": "n",
  "144": "f",
  "145": "o",
  "146": "=",
  "147": "P",
  "148": "a",
  "149": "y",
  "150": "m",
  "151": "e",
  "152": "n",
  "153": "t",
  "154": " ",
  "155": "f",
  "156": "o",
  "157": "r",
  "158": " ",
  "159": "o",
  "160": "r",
  "161": "d",
  "162": "e",
  "163": "r",
  "164": " ",
  "165": "1",
  "166": "7",
  "167": "4",
  "168": "0",
  "169": "1",
  "170": "3",
  "171": "3",
  "172": "1",
  "173": "4",
  "174": "3",
  "175": "4",
  "176": "4",
  "177": "3",
  "178": "_",
  "179": "6",
  "180": "7",
  "181": "b",
  "182": "4",
  "183": "9",
  "184": "5",
  "185": "c",
  "186": "a",
  "187": "9",
  "188": "d",
  "189": "3",
  "190": "5",
  "191": "c",
  "192": "7",
  "193": "5",
  "194": "8",
  "195": "6",
  "196": "0",
  "197": "7",
  "198": "e",
  "199": "2",
  "200": "7",
  "201": "c",
  "202": "c",
  "203": "&",
  "204": "p",
  "205": "a",
  "206": "r",
  "207": "t",
  "208": "n",
  "209": "e",
  "210": "r",
  "211": "C",
  "212": "o",
  "213": "d",
  "214": "e",
  "215": "=",
  "216": "M",
  "217": "O",
  "218": "M",
  "219": "O",
  "220": "&",
  "221": "r",
  "222": "e",
  "223": "d",
  "224": "i",
  "225": "r",
  "226": "e",
  "227": "c",
  "228": "t",
  "229": "U",
  "230": "r",
  "231": "l",
  "232": "=",
  "233": "h",
  "234": "t",
  "235": "t",
  "236": "p",
  "237": ":",
  "238": "/",
  "239": "/",
  "240": "l",
  "241": "o",
  "242": "c",
  "243": "a",
  "244": "l",
  "245": "h",
  "246": "o",
  "247": "s",
  "248": "t",
  "249": ":",
  "250": "3",
  "251": "0",
  "252": "0",
  "253": "0",
  "254": "/",
  "255": "a",
  "256": "p",
  "257": "i",
  "258": "/",
  "259": "m",
  "260": "o",
  "261": "m",
  "262": "o",
  "263": "/",
  "264": "i",
  "265": "p",
  "266": "n",
  "267": "/",
  "268": "d",
  "269": "e",
  "270": "v",
  "271": "?",
  "272": "o",
  "273": "r",
  "274": "d",
  "275": "e",
  "276": "r",
  "277": "I",
  "278": "d",
  "279": "=",
  "280": "1",
  "281": "7",
  "282": "4",
  "283": "0",
  "284": "1",
  "285": "3",
  "286": "3",
  "287": "1",
  "288": "4",
  "289": "3",
  "290": "4",
  "291": "4",
  "292": "3",
  "293": "_",
  "294": "6",
  "295": "7",
  "296": "b",
  "297": "4",
  "298": "9",
  "299": "5",
  "300": "c",
  "301": "a",
  "302": "9",
  "303": "d",
  "304": "3",
  "305": "5",
  "306": "c",
  "307": "7",
  "308": "5",
  "309": "8",
  "310": "6",
  "311": "0",
  "312": "7",
  "313": "e",
  "314": "2",
  "315": "7",
  "316": "c",
  "317": "c",
  "318": "&",
  "319": "r",
  "320": "e",
  "321": "q",
  "322": "u",
  "323": "e",
  "324": "s",
  "325": "t",
  "326": "I",
  "327": "d",
  "328": "=",
  "329": "1",
  "330": "7",
  "331": "4",
  "332": "0",
  "333": "1",
  "334": "3",
  "335": "3",
  "336": "1",
  "337": "4",
  "338": "3",
  "339": "4",
  "340": "4",
  "341": "3",
  "342": "_",
  "343": "6",
  "344": "7",
  "345": "b",
  "346": "4",
  "347": "9",
  "348": "5",
  "349": "c",
  "350": "a",
  "351": "9",
  "352": "d",
  "353": "3",
  "354": "5",
  "355": "c",
  "356": "7",
  "357": "5",
  "358": "8",
  "359": "6",
  "360": "0",
  "361": "7",
  "362": "e",
  "363": "2",
  "364": "7",
  "365": "c",
  "366": "c",
  "367": "&",
  "368": "r",
  "369": "e",
  "370": "q",
  "371": "u",
  "372": "e",
  "373": "s",
  "374": "t",
  "375": "T",
  "376": "y",
  "377": "p",
  "378": "e",
  "379": "=",
  "380": "p",
  "381": "a",
  "382": "y",
  "383": "W",
  "384": "i",
  "385": "t",
  "386": "h",
  "387": "M",
  "388": "e",
  "389": "t",
  "390": "h",
  "391": "o",
  "392": "d"
}
2025-02-21 17:19:03 [INFO]: Signature: {
  "0": "4",
  "1": "0",
  "2": "c",
  "3": "1",
  "4": "0",
  "5": "b",
  "6": "2",
  "7": "8",
  "8": "1",
  "9": "a",
  "10": "9",
  "11": "d",
  "12": "b",
  "13": "0",
  "14": "7",
  "15": "9",
  "16": "1",
  "17": "6",
  "18": "4",
  "19": "4",
  "20": "b",
  "21": "a",
  "22": "4",
  "23": "6",
  "24": "c",
  "25": "0",
  "26": "7",
  "27": "a",
  "28": "d",
  "29": "d",
  "30": "1",
  "31": "6",
  "32": "8",
  "33": "d",
  "34": "0",
  "35": "4",
  "36": "2",
  "37": "2",
  "38": "f",
  "39": "9",
  "40": "d",
  "41": "3",
  "42": "f",
  "43": "2",
  "44": "8",
  "45": "d",
  "46": "3",
  "47": "0",
  "48": "6",
  "49": "7",
  "50": "0",
  "51": "d",
  "52": "a",
  "53": "1",
  "54": "3",
  "55": "4",
  "56": "2",
  "57": "f",
  "58": "f",
  "59": "3",
  "60": "6",
  "61": "7",
  "62": "c",
  "63": "a"
}
2025-02-21 17:19:05 [INFO]: MoMo API Response: {
  "statusCode": 200,
  "resultCode": 0
}
2025-02-21 17:19:05 [INFO]: Connected to MongoDB 
2025-02-21 17:19:08 [INFO]: MoMo payment created {
  "orderId": "1740133143443_67b495ca9d35c758607e27cc",
  "amount": 10000,
  "resultCode": 0
}
2025-02-21 17:21:28 [INFO]: Server is running on port 3000 
2025-02-21 17:21:28 [INFO]: Environment: development 
2025-02-21 17:21:28 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:21:39 [INFO]: Connected to MongoDB 
2025-02-21 17:21:39 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "1",
  "32": "0",
  "33": "0",
  "34": "0",
  "35": "0",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": ":",
  "60": "/",
  "61": "/",
  "62": "l",
  "63": "o",
  "64": "c",
  "65": "a",
  "66": "l",
  "67": "h",
  "68": "o",
  "69": "s",
  "70": "t",
  "71": ":",
  "72": "3",
  "73": "0",
  "74": "0",
  "75": "0",
  "76": "/",
  "77": "a",
  "78": "p",
  "79": "i",
  "80": "/",
  "81": "m",
  "82": "o",
  "83": "m",
  "84": "o",
  "85": "/",
  "86": "i",
  "87": "p",
  "88": "n",
  "89": "&",
  "90": "o",
  "91": "r",
  "92": "d",
  "93": "e",
  "94": "r",
  "95": "I",
  "96": "d",
  "97": "=",
  "98": "1",
  "99": "7",
  "100": "4",
  "101": "0",
  "102": "1",
  "103": "3",
  "104": "3",
  "105": "2",
  "106": "9",
  "107": "9",
  "108": "7",
  "109": "8",
  "110": "6",
  "111": "_",
  "112": "6",
  "113": "7",
  "114": "b",
  "115": "4",
  "116": "9",
  "117": "5",
  "118": "c",
  "119": "a",
  "120": "9",
  "121": "d",
  "122": "3",
  "123": "5",
  "124": "c",
  "125": "7",
  "126": "5",
  "127": "8",
  "128": "6",
  "129": "0",
  "130": "7",
  "131": "e",
  "132": "2",
  "133": "7",
  "134": "c",
  "135": "c",
  "136": "&",
  "137": "o",
  "138": "r",
  "139": "d",
  "140": "e",
  "141": "r",
  "142": "I",
  "143": "n",
  "144": "f",
  "145": "o",
  "146": "=",
  "147": "P",
  "148": "a",
  "149": "y",
  "150": "m",
  "151": "e",
  "152": "n",
  "153": "t",
  "154": " ",
  "155": "f",
  "156": "o",
  "157": "r",
  "158": " ",
  "159": "o",
  "160": "r",
  "161": "d",
  "162": "e",
  "163": "r",
  "164": " ",
  "165": "1",
  "166": "7",
  "167": "4",
  "168": "0",
  "169": "1",
  "170": "3",
  "171": "3",
  "172": "2",
  "173": "9",
  "174": "9",
  "175": "7",
  "176": "8",
  "177": "6",
  "178": "_",
  "179": "6",
  "180": "7",
  "181": "b",
  "182": "4",
  "183": "9",
  "184": "5",
  "185": "c",
  "186": "a",
  "187": "9",
  "188": "d",
  "189": "3",
  "190": "5",
  "191": "c",
  "192": "7",
  "193": "5",
  "194": "8",
  "195": "6",
  "196": "0",
  "197": "7",
  "198": "e",
  "199": "2",
  "200": "7",
  "201": "c",
  "202": "c",
  "203": "&",
  "204": "p",
  "205": "a",
  "206": "r",
  "207": "t",
  "208": "n",
  "209": "e",
  "210": "r",
  "211": "C",
  "212": "o",
  "213": "d",
  "214": "e",
  "215": "=",
  "216": "M",
  "217": "O",
  "218": "M",
  "219": "O",
  "220": "&",
  "221": "r",
  "222": "e",
  "223": "d",
  "224": "i",
  "225": "r",
  "226": "e",
  "227": "c",
  "228": "t",
  "229": "U",
  "230": "r",
  "231": "l",
  "232": "=",
  "233": "h",
  "234": "t",
  "235": "t",
  "236": "p",
  "237": ":",
  "238": "/",
  "239": "/",
  "240": "l",
  "241": "o",
  "242": "c",
  "243": "a",
  "244": "l",
  "245": "h",
  "246": "o",
  "247": "s",
  "248": "t",
  "249": ":",
  "250": "3",
  "251": "0",
  "252": "0",
  "253": "0",
  "254": "/",
  "255": "a",
  "256": "p",
  "257": "i",
  "258": "/",
  "259": "m",
  "260": "o",
  "261": "m",
  "262": "o",
  "263": "/",
  "264": "i",
  "265": "p",
  "266": "n",
  "267": "/",
  "268": "d",
  "269": "e",
  "270": "v",
  "271": "?",
  "272": "o",
  "273": "r",
  "274": "d",
  "275": "e",
  "276": "r",
  "277": "I",
  "278": "d",
  "279": "R",
  "280": "e",
  "281": "s",
  "282": "u",
  "283": "l",
  "284": "t",
  "285": "=",
  "286": "1",
  "287": "7",
  "288": "4",
  "289": "0",
  "290": "1",
  "291": "3",
  "292": "3",
  "293": "2",
  "294": "9",
  "295": "9",
  "296": "7",
  "297": "8",
  "298": "6",
  "299": "_",
  "300": "6",
  "301": "7",
  "302": "b",
  "303": "4",
  "304": "9",
  "305": "5",
  "306": "c",
  "307": "a",
  "308": "9",
  "309": "d",
  "310": "3",
  "311": "5",
  "312": "c",
  "313": "7",
  "314": "5",
  "315": "8",
  "316": "6",
  "317": "0",
  "318": "7",
  "319": "e",
  "320": "2",
  "321": "7",
  "322": "c",
  "323": "c",
  "324": "&",
  "325": "r",
  "326": "e",
  "327": "q",
  "328": "u",
  "329": "e",
  "330": "s",
  "331": "t",
  "332": "I",
  "333": "d",
  "334": "=",
  "335": "1",
  "336": "7",
  "337": "4",
  "338": "0",
  "339": "1",
  "340": "3",
  "341": "3",
  "342": "2",
  "343": "9",
  "344": "9",
  "345": "7",
  "346": "8",
  "347": "6",
  "348": "_",
  "349": "6",
  "350": "7",
  "351": "b",
  "352": "4",
  "353": "9",
  "354": "5",
  "355": "c",
  "356": "a",
  "357": "9",
  "358": "d",
  "359": "3",
  "360": "5",
  "361": "c",
  "362": "7",
  "363": "5",
  "364": "8",
  "365": "6",
  "366": "0",
  "367": "7",
  "368": "e",
  "369": "2",
  "370": "7",
  "371": "c",
  "372": "c",
  "373": "&",
  "374": "r",
  "375": "e",
  "376": "q",
  "377": "u",
  "378": "e",
  "379": "s",
  "380": "t",
  "381": "T",
  "382": "y",
  "383": "p",
  "384": "e",
  "385": "=",
  "386": "p",
  "387": "a",
  "388": "y",
  "389": "W",
  "390": "i",
  "391": "t",
  "392": "h",
  "393": "M",
  "394": "e",
  "395": "t",
  "396": "h",
  "397": "o",
  "398": "d"
}
2025-02-21 17:21:39 [INFO]: Signature: {
  "0": "9",
  "1": "0",
  "2": "0",
  "3": "f",
  "4": "3",
  "5": "9",
  "6": "0",
  "7": "3",
  "8": "1",
  "9": "7",
  "10": "6",
  "11": "1",
  "12": "5",
  "13": "e",
  "14": "4",
  "15": "8",
  "16": "9",
  "17": "c",
  "18": "6",
  "19": "a",
  "20": "c",
  "21": "c",
  "22": "f",
  "23": "8",
  "24": "3",
  "25": "a",
  "26": "4",
  "27": "e",
  "28": "a",
  "29": "0",
  "30": "e",
  "31": "1",
  "32": "4",
  "33": "6",
  "34": "8",
  "35": "1",
  "36": "6",
  "37": "a",
  "38": "8",
  "39": "0",
  "40": "6",
  "41": "8",
  "42": "e",
  "43": "f",
  "44": "c",
  "45": "5",
  "46": "1",
  "47": "4",
  "48": "8",
  "49": "5",
  "50": "3",
  "51": "6",
  "52": "3",
  "53": "9",
  "54": "2",
  "55": "0",
  "56": "b",
  "57": "f",
  "58": "4",
  "59": "d",
  "60": "5",
  "61": "0",
  "62": "e",
  "63": "3"
}
2025-02-21 17:21:41 [INFO]: MoMo API Response: {
  "statusCode": 200,
  "resultCode": 0
}
2025-02-21 17:21:43 [ERROR]: Error processing MoMo payment: Order validation failed: amount: Path `amount` is required., status: `completed` is not a valid enum value for path `status`. {
  "errors": {
    "amount": {
      "name": "ValidatorError",
      "message": "Path `amount` is required.",
      "properties": {
        "message": "Path `amount` is required.",
        "type": "required",
        "path": "amount"
      },
      "kind": "required",
      "path": "amount"
    },
    "status": {
      "name": "ValidatorError",
      "message": "`completed` is not a valid enum value for path `status`.",
      "properties": {
        "message": "`completed` is not a valid enum value for path `status`.",
        "type": "enum",
        "enumValues": [
          "pending",
          "paid",
          "failed",
          "refunded"
        ],
        "path": "status",
        "value": "completed"
      },
      "kind": "enum",
      "path": "status",
      "value": "completed"
    }
  },
  "_message": "Order validation failed",
  "stack": "ValidationError: Order validation failed: amount: Path `amount` is required., status: `completed` is not a valid enum value for path `status`.\n    at Document.invalidate (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/document.js:3219:32)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/document.js:3012:17\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)"
}
2025-02-21 17:21:43 [ERROR]: Order validation failed: amount: Path `amount` is required., status: `completed` is not a valid enum value for path `status`. {}
2025-02-21 17:21:43 [ERROR]: Order validation failed: amount: Path `amount` is required., status: `completed` is not a valid enum value for path `status`. {
  "path": "/api/momo/ipn/dev",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "orderId": [
      "1740133143443_67b495ca9d35c758607e27cc",
      "1740133143443_67b495ca9d35c758607e27cc"
    ],
    "partnerCode": "MOMO",
    "requestId": "1740133143443_67b495ca9d35c758607e27cc",
    "amount": "10000",
    "orderInfo": "Payment for order 1740133143443_67b495ca9d35c758607e27cc",
    "orderType": "momo_wallet",
    "transId": "3291339912",
    "resultCode": "0",
    "message": "Thành công.",
    "payType": "qr",
    "responseTime": "1740133185550",
    "extraData": "",
    "signature": "2dbe67e93201fa9c39741e47a467b00f5d776414996adde0791ce81ea0fecba1"
  },
  "user": null
}
2025-02-21 17:21:43 [INFO]: MoMo payment created {
  "orderId": "1740133299786_67b495ca9d35c758607e27cc",
  "amount": 10000,
  "resultCode": 0
}
2025-02-21 17:23:48 [INFO]: Server is running on port 3000 
2025-02-21 17:23:48 [INFO]: Environment: development 
2025-02-21 17:23:48 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:23:54 [ERROR]: Error processing MoMo payment: Cast to ObjectId failed for value "1740133299786_67b495ca9d35c758607e27cc" (type string) at path "_id" for model "Order" {
  "stringValue": "\"1740133299786_67b495ca9d35c758607e27cc\"",
  "kind": "ObjectId",
  "value": "1740133299786_67b495ca9d35c758607e27cc",
  "path": "_id",
  "reason": {},
  "valueType": "string",
  "stack": "CastError: Cast to ObjectId failed for value \"1740133299786_67b495ca9d35c758607e27cc\" (type string) at path \"_id\" for model \"Order\"\n    at ObjectId.cast (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/schema/objectid.js:250:11)\n    at SchemaType.applySetters (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/schematype.js:1219:12)\n    at SchemaType.castForQuery (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/schematype.js:1633:15)\n    at cast (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/cast.js:389:32)\n    at Query.cast (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:4927:12)\n    at Query._castConditions (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:2237:10)\n    at model.Query._findOne (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:2533:8)\n    at model.Query.exec (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:4447:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async MoMoService.processIPNDev (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/momo.service.js:174:21)"
}
2025-02-21 17:23:54 [ERROR]: Cast to ObjectId failed for value "1740133299786_67b495ca9d35c758607e27cc" (type string) at path "_id" for model "Order" {}
2025-02-21 17:23:54 [ERROR]: Cast to ObjectId failed for value "1740133299786_67b495ca9d35c758607e27cc" (type string) at path "_id" for model "Order" {
  "path": "/api/momo/ipn/dev",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "orderIdResult": "1740133299786_67b495ca9d35c758607e27cc",
    "partnerCode": "MOMO",
    "orderId": "1740133299786_67b495ca9d35c758607e27cc",
    "requestId": "1740133299786_67b495ca9d35c758607e27cc",
    "amount": "10000",
    "orderInfo": "Payment for order 1740133299786_67b495ca9d35c758607e27cc",
    "orderType": "momo_wallet",
    "transId": "3291339914",
    "resultCode": "0",
    "message": "Thành công.",
    "payType": "qr",
    "responseTime": "1740133326409",
    "extraData": "",
    "signature": "b5d65aa81aeb4ce9b55762471b327b073473ece2e7cdb72149af2e00746ec77c"
  },
  "user": null
}
2025-02-21 17:23:55 [INFO]: Connected to MongoDB 
2025-02-21 17:24:44 [INFO]: Server is running on port 3000 
2025-02-21 17:24:44 [INFO]: Environment: development 
2025-02-21 17:24:44 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:24:47 [INFO]: Connected to MongoDB 
2025-02-21 17:24:52 [ERROR]: Error processing MoMo payment: Cast to ObjectId failed for value "1740133299786_67b495ca9d35c758607e27cc" (type string) at path "_id" for model "Order" {
  "stringValue": "\"1740133299786_67b495ca9d35c758607e27cc\"",
  "kind": "ObjectId",
  "value": "1740133299786_67b495ca9d35c758607e27cc",
  "path": "_id",
  "reason": {},
  "valueType": "string",
  "stack": "CastError: Cast to ObjectId failed for value \"1740133299786_67b495ca9d35c758607e27cc\" (type string) at path \"_id\" for model \"Order\"\n    at ObjectId.cast (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/schema/objectid.js:250:11)\n    at SchemaType.applySetters (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/schematype.js:1219:12)\n    at SchemaType.castForQuery (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/schematype.js:1633:15)\n    at cast (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/cast.js:389:32)\n    at Query.cast (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:4927:12)\n    at Query._castConditions (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:2237:10)\n    at model.Query._findOne (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:2533:8)\n    at model.Query.exec (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:4447:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async MoMoService.processIPNDev (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/momo.service.js:174:21)"
}
2025-02-21 17:24:52 [ERROR]: Cast to ObjectId failed for value "1740133299786_67b495ca9d35c758607e27cc" (type string) at path "_id" for model "Order" {}
2025-02-21 17:24:52 [ERROR]: Cast to ObjectId failed for value "1740133299786_67b495ca9d35c758607e27cc" (type string) at path "_id" for model "Order" {
  "path": "/api/momo/ipn/dev",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "orderIdResult": "1740133299786_67b495ca9d35c758607e27cc",
    "partnerCode": "MOMO",
    "orderId": "1740133299786_67b495ca9d35c758607e27cc",
    "requestId": "1740133299786_67b495ca9d35c758607e27cc",
    "amount": "10000",
    "orderInfo": "Payment for order 1740133299786_67b495ca9d35c758607e27cc",
    "orderType": "momo_wallet",
    "transId": "3291339914",
    "resultCode": "0",
    "message": "Thành công.",
    "payType": "qr",
    "responseTime": "1740133326409",
    "extraData": "",
    "signature": "b5d65aa81aeb4ce9b55762471b327b073473ece2e7cdb72149af2e00746ec77c"
  },
  "user": null
}
2025-02-21 17:25:57 [INFO]: Server is running on port 3000 
2025-02-21 17:25:57 [INFO]: Environment: development 
2025-02-21 17:25:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:26:02 [ERROR]: Error processing MoMo payment: Cast to ObjectId failed for value "1740133299786_67b495ca9d35c758607e27cc" (type string) at path "_id" for model "Order" {
  "stringValue": "\"1740133299786_67b495ca9d35c758607e27cc\"",
  "kind": "ObjectId",
  "value": "1740133299786_67b495ca9d35c758607e27cc",
  "path": "_id",
  "reason": {},
  "valueType": "string",
  "stack": "CastError: Cast to ObjectId failed for value \"1740133299786_67b495ca9d35c758607e27cc\" (type string) at path \"_id\" for model \"Order\"\n    at ObjectId.cast (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/schema/objectid.js:250:11)\n    at SchemaType.applySetters (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/schematype.js:1219:12)\n    at SchemaType.castForQuery (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/schematype.js:1633:15)\n    at cast (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/cast.js:389:32)\n    at Query.cast (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:4927:12)\n    at Query._castConditions (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:2237:10)\n    at model.Query._findOne (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:2533:8)\n    at model.Query.exec (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:4447:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async MoMoService.processIPNDev (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/momo.service.js:174:21)"
}
2025-02-21 17:26:02 [ERROR]: Cast to ObjectId failed for value "1740133299786_67b495ca9d35c758607e27cc" (type string) at path "_id" for model "Order" {}
2025-02-21 17:26:02 [ERROR]: Cast to ObjectId failed for value "1740133299786_67b495ca9d35c758607e27cc" (type string) at path "_id" for model "Order" {
  "path": "/api/momo/ipn/dev",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "orderIdResult": "1740133299786_67b495ca9d35c758607e27cc",
    "partnerCode": "MOMO",
    "orderId": "1740133299786_67b495ca9d35c758607e27cc",
    "requestId": "1740133299786_67b495ca9d35c758607e27cc",
    "amount": "10000",
    "orderInfo": "Payment for order 1740133299786_67b495ca9d35c758607e27cc",
    "orderType": "momo_wallet",
    "transId": "3291339914",
    "resultCode": "0",
    "message": "Thành công.",
    "payType": "qr",
    "responseTime": "1740133326409",
    "extraData": "",
    "signature": "b5d65aa81aeb4ce9b55762471b327b073473ece2e7cdb72149af2e00746ec77c"
  },
  "user": null
}
2025-02-21 17:26:04 [INFO]: Connected to MongoDB 
2025-02-21 17:26:26 [ERROR]: Error processing MoMo payment: Cast to ObjectId failed for value "1740133299786_67b495ca9d35c758607e27cc" (type string) at path "_id" for model "Order" {
  "stringValue": "\"1740133299786_67b495ca9d35c758607e27cc\"",
  "kind": "ObjectId",
  "value": "1740133299786_67b495ca9d35c758607e27cc",
  "path": "_id",
  "reason": {},
  "valueType": "string",
  "stack": "CastError: Cast to ObjectId failed for value \"1740133299786_67b495ca9d35c758607e27cc\" (type string) at path \"_id\" for model \"Order\"\n    at ObjectId.cast (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/schema/objectid.js:250:11)\n    at SchemaType.applySetters (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/schematype.js:1219:12)\n    at SchemaType.castForQuery (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/schematype.js:1633:15)\n    at cast (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/cast.js:389:32)\n    at Query.cast (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:4927:12)\n    at Query._castConditions (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:2237:10)\n    at model.Query._findOne (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:2533:8)\n    at model.Query.exec (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/query.js:4447:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async MoMoService.processIPNDev (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/momo.service.js:174:21)"
}
2025-02-21 17:26:26 [ERROR]: Cast to ObjectId failed for value "1740133299786_67b495ca9d35c758607e27cc" (type string) at path "_id" for model "Order" {}
2025-02-21 17:26:26 [ERROR]: Cast to ObjectId failed for value "1740133299786_67b495ca9d35c758607e27cc" (type string) at path "_id" for model "Order" {
  "path": "/api/momo/ipn/dev",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "orderIdResult": "1740133299786_67b495ca9d35c758607e27cc",
    "partnerCode": "MOMO",
    "orderId": "1740133299786_67b495ca9d35c758607e27cc",
    "requestId": "1740133299786_67b495ca9d35c758607e27cc",
    "amount": "10000",
    "orderInfo": "Payment for order 1740133299786_67b495ca9d35c758607e27cc",
    "orderType": "momo_wallet",
    "transId": "3291339914",
    "resultCode": "0",
    "message": "Thành công.",
    "payType": "qr",
    "responseTime": "1740133326409",
    "extraData": "",
    "signature": "b5d65aa81aeb4ce9b55762471b327b073473ece2e7cdb72149af2e00746ec77c"
  },
  "user": null
}
2025-02-21 17:26:42 [ERROR]: Error processing MoMo payment: Order validation failed: status: `completed` is not a valid enum value for path `status`. {
  "errors": {
    "status": {
      "name": "ValidatorError",
      "message": "`completed` is not a valid enum value for path `status`.",
      "properties": {
        "message": "`completed` is not a valid enum value for path `status`.",
        "type": "enum",
        "enumValues": [
          "pending",
          "paid",
          "failed",
          "refunded"
        ],
        "path": "status",
        "value": "completed"
      },
      "kind": "enum",
      "path": "status",
      "value": "completed"
    }
  },
  "_message": "Order validation failed",
  "stack": "ValidationError: Order validation failed: status: `completed` is not a valid enum value for path `status`.\n    at Document.invalidate (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/document.js:3219:32)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/document.js:3012:17\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/mongoose/lib/schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)"
}
2025-02-21 17:26:42 [ERROR]: Order validation failed: status: `completed` is not a valid enum value for path `status`. {}
2025-02-21 17:26:42 [ERROR]: Order validation failed: status: `completed` is not a valid enum value for path `status`. {
  "path": "/api/momo/ipn/dev",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "orderIdResult": "67b853b5b86cf9a233df6f64",
    "partnerCode": "MOMO",
    "orderId": "1740133299786_67b495ca9d35c758607e27cc",
    "requestId": "1740133299786_67b495ca9d35c758607e27cc",
    "amount": "10000",
    "orderInfo": "Payment for order 1740133299786_67b495ca9d35c758607e27cc",
    "orderType": "momo_wallet",
    "transId": "3291339914",
    "resultCode": "0",
    "message": "Thành công.",
    "payType": "qr",
    "responseTime": "1740133326409",
    "extraData": "",
    "signature": "b5d65aa81aeb4ce9b55762471b327b073473ece2e7cdb72149af2e00746ec77c"
  },
  "user": null
}
2025-02-21 17:27:33 [INFO]: Server is running on port 3000 
2025-02-21 17:27:33 [INFO]: Environment: development 
2025-02-21 17:27:33 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 17:27:37 [INFO]: Connected to MongoDB 
2025-02-21 17:27:41 [INFO]: MoMo payment processed {}
2025-02-21 17:45:36 [INFO]: MongoDB disconnected 
2025-02-21 18:52:58 [INFO]: MongoDB disconnected 
2025-02-21 18:59:48 [INFO]: MongoDB disconnected 
2025-02-21 19:15:41 [INFO]: MongoDB disconnected 
2025-02-21 19:31:11 [INFO]: MongoDB disconnected 
2025-02-21 19:47:03 [INFO]: MongoDB disconnected 
2025-02-21 19:56:47 [INFO]: MongoDB disconnected 
2025-02-21 20:12:39 [INFO]: MongoDB disconnected 
2025-02-21 20:28:32 [INFO]: MongoDB disconnected 
2025-02-21 20:44:02 [INFO]: MongoDB disconnected 
2025-02-21 20:48:17 [INFO]: MongoDB disconnected 
2025-02-21 21:08:06 [INFO]: MongoDB disconnected 
2025-02-21 21:23:59 [INFO]: MongoDB disconnected 
2025-02-21 21:37:56 [INFO]: MongoDB disconnected 
2025-02-21 21:56:08 [INFO]: Server is running on port 3000 
2025-02-21 21:56:08 [INFO]: Environment: development 
2025-02-21 21:56:08 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 21:56:12 [INFO]: Connected to MongoDB 
2025-02-21 21:56:57 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-21 21:58:09 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "2",
  "32": "2",
  "33": "2",
  "34": "2",
  "35": "2",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": ":",
  "60": "/",
  "61": "/",
  "62": "l",
  "63": "o",
  "64": "c",
  "65": "a",
  "66": "l",
  "67": "h",
  "68": "o",
  "69": "s",
  "70": "t",
  "71": ":",
  "72": "3",
  "73": "0",
  "74": "0",
  "75": "0",
  "76": "/",
  "77": "a",
  "78": "p",
  "79": "i",
  "80": "/",
  "81": "m",
  "82": "o",
  "83": "m",
  "84": "o",
  "85": "/",
  "86": "i",
  "87": "p",
  "88": "n",
  "89": "&",
  "90": "o",
  "91": "r",
  "92": "d",
  "93": "e",
  "94": "r",
  "95": "I",
  "96": "d",
  "97": "=",
  "98": "1",
  "99": "7",
  "100": "4",
  "101": "0",
  "102": "1",
  "103": "4",
  "104": "9",
  "105": "8",
  "106": "8",
  "107": "9",
  "108": "5",
  "109": "8",
  "110": "2",
  "111": "_",
  "112": "6",
  "113": "7",
  "114": "b",
  "115": "4",
  "116": "9",
  "117": "5",
  "118": "c",
  "119": "a",
  "120": "9",
  "121": "d",
  "122": "3",
  "123": "5",
  "124": "c",
  "125": "7",
  "126": "5",
  "127": "8",
  "128": "6",
  "129": "0",
  "130": "7",
  "131": "e",
  "132": "2",
  "133": "7",
  "134": "c",
  "135": "c",
  "136": "&",
  "137": "o",
  "138": "r",
  "139": "d",
  "140": "e",
  "141": "r",
  "142": "I",
  "143": "n",
  "144": "f",
  "145": "o",
  "146": "=",
  "147": "P",
  "148": "a",
  "149": "y",
  "150": "m",
  "151": "e",
  "152": "n",
  "153": "t",
  "154": " ",
  "155": "f",
  "156": "o",
  "157": "r",
  "158": " ",
  "159": "2",
  "160": " ",
  "161": "c",
  "162": "o",
  "163": "u",
  "164": "r",
  "165": "s",
  "166": "e",
  "167": "(",
  "168": "s",
  "169": ")",
  "170": "&",
  "171": "p",
  "172": "a",
  "173": "r",
  "174": "t",
  "175": "n",
  "176": "e",
  "177": "r",
  "178": "C",
  "179": "o",
  "180": "d",
  "181": "e",
  "182": "=",
  "183": "M",
  "184": "O",
  "185": "M",
  "186": "O",
  "187": "&",
  "188": "r",
  "189": "e",
  "190": "d",
  "191": "i",
  "192": "r",
  "193": "e",
  "194": "c",
  "195": "t",
  "196": "U",
  "197": "r",
  "198": "l",
  "199": "=",
  "200": "h",
  "201": "t",
  "202": "t",
  "203": "p",
  "204": ":",
  "205": "/",
  "206": "/",
  "207": "l",
  "208": "o",
  "209": "c",
  "210": "a",
  "211": "l",
  "212": "h",
  "213": "o",
  "214": "s",
  "215": "t",
  "216": ":",
  "217": "3",
  "218": "0",
  "219": "0",
  "220": "0",
  "221": "/",
  "222": "a",
  "223": "p",
  "224": "i",
  "225": "/",
  "226": "m",
  "227": "o",
  "228": "m",
  "229": "o",
  "230": "/",
  "231": "i",
  "232": "p",
  "233": "n",
  "234": "/",
  "235": "d",
  "236": "e",
  "237": "v",
  "238": "?",
  "239": "o",
  "240": "r",
  "241": "d",
  "242": "e",
  "243": "r",
  "244": "I",
  "245": "d",
  "246": "R",
  "247": "e",
  "248": "s",
  "249": "u",
  "250": "l",
  "251": "t",
  "252": "=",
  "253": "1",
  "254": "7",
  "255": "4",
  "256": "0",
  "257": "1",
  "258": "4",
  "259": "9",
  "260": "8",
  "261": "8",
  "262": "9",
  "263": "5",
  "264": "8",
  "265": "2",
  "266": "_",
  "267": "6",
  "268": "7",
  "269": "b",
  "270": "4",
  "271": "9",
  "272": "5",
  "273": "c",
  "274": "a",
  "275": "9",
  "276": "d",
  "277": "3",
  "278": "5",
  "279": "c",
  "280": "7",
  "281": "5",
  "282": "8",
  "283": "6",
  "284": "0",
  "285": "7",
  "286": "e",
  "287": "2",
  "288": "7",
  "289": "c",
  "290": "c",
  "291": "&",
  "292": "r",
  "293": "e",
  "294": "q",
  "295": "u",
  "296": "e",
  "297": "s",
  "298": "t",
  "299": "I",
  "300": "d",
  "301": "=",
  "302": "1",
  "303": "7",
  "304": "4",
  "305": "0",
  "306": "1",
  "307": "4",
  "308": "9",
  "309": "8",
  "310": "8",
  "311": "9",
  "312": "5",
  "313": "8",
  "314": "2",
  "315": "_",
  "316": "6",
  "317": "7",
  "318": "b",
  "319": "4",
  "320": "9",
  "321": "5",
  "322": "c",
  "323": "a",
  "324": "9",
  "325": "d",
  "326": "3",
  "327": "5",
  "328": "c",
  "329": "7",
  "330": "5",
  "331": "8",
  "332": "6",
  "333": "0",
  "334": "7",
  "335": "e",
  "336": "2",
  "337": "7",
  "338": "c",
  "339": "c",
  "340": "&",
  "341": "r",
  "342": "e",
  "343": "q",
  "344": "u",
  "345": "e",
  "346": "s",
  "347": "t",
  "348": "T",
  "349": "y",
  "350": "p",
  "351": "e",
  "352": "=",
  "353": "p",
  "354": "a",
  "355": "y",
  "356": "W",
  "357": "i",
  "358": "t",
  "359": "h",
  "360": "M",
  "361": "e",
  "362": "t",
  "363": "h",
  "364": "o",
  "365": "d"
}
2025-02-21 21:58:09 [INFO]: Signature: {
  "0": "8",
  "1": "d",
  "2": "5",
  "3": "7",
  "4": "8",
  "5": "3",
  "6": "8",
  "7": "a",
  "8": "3",
  "9": "0",
  "10": "9",
  "11": "e",
  "12": "f",
  "13": "1",
  "14": "a",
  "15": "b",
  "16": "a",
  "17": "8",
  "18": "6",
  "19": "0",
  "20": "e",
  "21": "4",
  "22": "6",
  "23": "4",
  "24": "8",
  "25": "0",
  "26": "d",
  "27": "f",
  "28": "e",
  "29": "4",
  "30": "9",
  "31": "7",
  "32": "7",
  "33": "7",
  "34": "0",
  "35": "5",
  "36": "b",
  "37": "1",
  "38": "d",
  "39": "0",
  "40": "2",
  "41": "c",
  "42": "0",
  "43": "a",
  "44": "f",
  "45": "6",
  "46": "7",
  "47": "6",
  "48": "5",
  "49": "d",
  "50": "e",
  "51": "6",
  "52": "e",
  "53": "d",
  "54": "f",
  "55": "4",
  "56": "2",
  "57": "5",
  "58": "9",
  "59": "c",
  "60": "8",
  "61": "a",
  "62": "0",
  "63": "9"
}
2025-02-21 21:58:14 [INFO]: MoMo API Response: {
  "statusCode": 200,
  "resultCode": 0
}
2025-02-21 21:58:14 [ERROR]: Error creating MoMo payment: Course is not defined {
  "stack": "ReferenceError: Course is not defined\n    at model.<anonymous> (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/models/order.model.js:39:21)\n    at callMiddlewareFunction (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/kareem/index.js:628:27)\n    at model.next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/kareem/index.js:93:7)\n    at _next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/kareem/index.js:146:10)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/kareem/index.js:653:30\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)"
}
2025-02-21 21:58:14 [ERROR]: Course is not defined {}
2025-02-21 21:58:14 [ERROR]: Course is not defined {
  "path": "/api/orders",
  "method": "POST",
  "body": {
    "courseIds": [
      "67b75fd6e2e66f1197d5bec9",
      "67b7f43fe1eb5507e5a3daf5"
    ]
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-21 21:59:02 [INFO]: Server is running on port 3000 
2025-02-21 21:59:02 [INFO]: Environment: development 
2025-02-21 21:59:02 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 21:59:06 [INFO]: Connected to MongoDB 
2025-02-21 21:59:09 [INFO]: Raw signature: {
  "0": "a",
  "1": "c",
  "2": "c",
  "3": "e",
  "4": "s",
  "5": "s",
  "6": "K",
  "7": "e",
  "8": "y",
  "9": "=",
  "10": "F",
  "11": "8",
  "12": "B",
  "13": "B",
  "14": "A",
  "15": "8",
  "16": "4",
  "17": "2",
  "18": "E",
  "19": "C",
  "20": "F",
  "21": "8",
  "22": "5",
  "23": "&",
  "24": "a",
  "25": "m",
  "26": "o",
  "27": "u",
  "28": "n",
  "29": "t",
  "30": "=",
  "31": "2",
  "32": "2",
  "33": "2",
  "34": "2",
  "35": "2",
  "36": "&",
  "37": "e",
  "38": "x",
  "39": "t",
  "40": "r",
  "41": "a",
  "42": "D",
  "43": "a",
  "44": "t",
  "45": "a",
  "46": "=",
  "47": "&",
  "48": "i",
  "49": "p",
  "50": "n",
  "51": "U",
  "52": "r",
  "53": "l",
  "54": "=",
  "55": "h",
  "56": "t",
  "57": "t",
  "58": "p",
  "59": ":",
  "60": "/",
  "61": "/",
  "62": "l",
  "63": "o",
  "64": "c",
  "65": "a",
  "66": "l",
  "67": "h",
  "68": "o",
  "69": "s",
  "70": "t",
  "71": ":",
  "72": "3",
  "73": "0",
  "74": "0",
  "75": "0",
  "76": "/",
  "77": "a",
  "78": "p",
  "79": "i",
  "80": "/",
  "81": "m",
  "82": "o",
  "83": "m",
  "84": "o",
  "85": "/",
  "86": "i",
  "87": "p",
  "88": "n",
  "89": "&",
  "90": "o",
  "91": "r",
  "92": "d",
  "93": "e",
  "94": "r",
  "95": "I",
  "96": "d",
  "97": "=",
  "98": "1",
  "99": "7",
  "100": "4",
  "101": "0",
  "102": "1",
  "103": "4",
  "104": "9",
  "105": "9",
  "106": "4",
  "107": "9",
  "108": "3",
  "109": "2",
  "110": "3",
  "111": "_",
  "112": "6",
  "113": "7",
  "114": "b",
  "115": "4",
  "116": "9",
  "117": "5",
  "118": "c",
  "119": "a",
  "120": "9",
  "121": "d",
  "122": "3",
  "123": "5",
  "124": "c",
  "125": "7",
  "126": "5",
  "127": "8",
  "128": "6",
  "129": "0",
  "130": "7",
  "131": "e",
  "132": "2",
  "133": "7",
  "134": "c",
  "135": "c",
  "136": "&",
  "137": "o",
  "138": "r",
  "139": "d",
  "140": "e",
  "141": "r",
  "142": "I",
  "143": "n",
  "144": "f",
  "145": "o",
  "146": "=",
  "147": "P",
  "148": "a",
  "149": "y",
  "150": "m",
  "151": "e",
  "152": "n",
  "153": "t",
  "154": " ",
  "155": "f",
  "156": "o",
  "157": "r",
  "158": " ",
  "159": "2",
  "160": " ",
  "161": "c",
  "162": "o",
  "163": "u",
  "164": "r",
  "165": "s",
  "166": "e",
  "167": "(",
  "168": "s",
  "169": ")",
  "170": "&",
  "171": "p",
  "172": "a",
  "173": "r",
  "174": "t",
  "175": "n",
  "176": "e",
  "177": "r",
  "178": "C",
  "179": "o",
  "180": "d",
  "181": "e",
  "182": "=",
  "183": "M",
  "184": "O",
  "185": "M",
  "186": "O",
  "187": "&",
  "188": "r",
  "189": "e",
  "190": "d",
  "191": "i",
  "192": "r",
  "193": "e",
  "194": "c",
  "195": "t",
  "196": "U",
  "197": "r",
  "198": "l",
  "199": "=",
  "200": "h",
  "201": "t",
  "202": "t",
  "203": "p",
  "204": ":",
  "205": "/",
  "206": "/",
  "207": "l",
  "208": "o",
  "209": "c",
  "210": "a",
  "211": "l",
  "212": "h",
  "213": "o",
  "214": "s",
  "215": "t",
  "216": ":",
  "217": "3",
  "218": "0",
  "219": "0",
  "220": "0",
  "221": "/",
  "222": "a",
  "223": "p",
  "224": "i",
  "225": "/",
  "226": "m",
  "227": "o",
  "228": "m",
  "229": "o",
  "230": "/",
  "231": "i",
  "232": "p",
  "233": "n",
  "234": "/",
  "235": "d",
  "236": "e",
  "237": "v",
  "238": "?",
  "239": "o",
  "240": "r",
  "241": "d",
  "242": "e",
  "243": "r",
  "244": "I",
  "245": "d",
  "246": "R",
  "247": "e",
  "248": "s",
  "249": "u",
  "250": "l",
  "251": "t",
  "252": "=",
  "253": "1",
  "254": "7",
  "255": "4",
  "256": "0",
  "257": "1",
  "258": "4",
  "259": "9",
  "260": "9",
  "261": "4",
  "262": "9",
  "263": "3",
  "264": "2",
  "265": "3",
  "266": "_",
  "267": "6",
  "268": "7",
  "269": "b",
  "270": "4",
  "271": "9",
  "272": "5",
  "273": "c",
  "274": "a",
  "275": "9",
  "276": "d",
  "277": "3",
  "278": "5",
  "279": "c",
  "280": "7",
  "281": "5",
  "282": "8",
  "283": "6",
  "284": "0",
  "285": "7",
  "286": "e",
  "287": "2",
  "288": "7",
  "289": "c",
  "290": "c",
  "291": "&",
  "292": "r",
  "293": "e",
  "294": "q",
  "295": "u",
  "296": "e",
  "297": "s",
  "298": "t",
  "299": "I",
  "300": "d",
  "301": "=",
  "302": "1",
  "303": "7",
  "304": "4",
  "305": "0",
  "306": "1",
  "307": "4",
  "308": "9",
  "309": "9",
  "310": "4",
  "311": "9",
  "312": "3",
  "313": "2",
  "314": "3",
  "315": "_",
  "316": "6",
  "317": "7",
  "318": "b",
  "319": "4",
  "320": "9",
  "321": "5",
  "322": "c",
  "323": "a",
  "324": "9",
  "325": "d",
  "326": "3",
  "327": "5",
  "328": "c",
  "329": "7",
  "330": "5",
  "331": "8",
  "332": "6",
  "333": "0",
  "334": "7",
  "335": "e",
  "336": "2",
  "337": "7",
  "338": "c",
  "339": "c",
  "340": "&",
  "341": "r",
  "342": "e",
  "343": "q",
  "344": "u",
  "345": "e",
  "346": "s",
  "347": "t",
  "348": "T",
  "349": "y",
  "350": "p",
  "351": "e",
  "352": "=",
  "353": "p",
  "354": "a",
  "355": "y",
  "356": "W",
  "357": "i",
  "358": "t",
  "359": "h",
  "360": "M",
  "361": "e",
  "362": "t",
  "363": "h",
  "364": "o",
  "365": "d"
}
2025-02-21 21:59:09 [INFO]: Signature: {
  "0": "b",
  "1": "5",
  "2": "3",
  "3": "d",
  "4": "9",
  "5": "2",
  "6": "3",
  "7": "6",
  "8": "7",
  "9": "2",
  "10": "2",
  "11": "8",
  "12": "6",
  "13": "7",
  "14": "a",
  "15": "f",
  "16": "0",
  "17": "5",
  "18": "a",
  "19": "3",
  "20": "7",
  "21": "8",
  "22": "3",
  "23": "1",
  "24": "9",
  "25": "2",
  "26": "9",
  "27": "a",
  "28": "7",
  "29": "7",
  "30": "7",
  "31": "a",
  "32": "1",
  "33": "0",
  "34": "d",
  "35": "3",
  "36": "7",
  "37": "3",
  "38": "0",
  "39": "9",
  "40": "e",
  "41": "c",
  "42": "8",
  "43": "e",
  "44": "8",
  "45": "b",
  "46": "6",
  "47": "4",
  "48": "6",
  "49": "f",
  "50": "6",
  "51": "0",
  "52": "e",
  "53": "a",
  "54": "d",
  "55": "2",
  "56": "b",
  "57": "f",
  "58": "b",
  "59": "f",
  "60": "e",
  "61": "7",
  "62": "a",
  "63": "6"
}
2025-02-21 21:59:13 [INFO]: MoMo API Response: {
  "statusCode": 200,
  "resultCode": 0
}
2025-02-21 21:59:14 [INFO]: MoMo payment created {
  "orderId": "1740149949323_67b495ca9d35c758607e27cc",
  "amount": 22222,
  "resultCode": 0
}
2025-02-21 21:59:14 [INFO]: Order created {
  "userId": "67b495ca9d35c758607e27cc",
  "courseIds": [
    "67b75fd6e2e66f1197d5bec9",
    "67b7f43fe1eb5507e5a3daf5"
  ],
  "amount": 22222,
  "orderId": "1740149949323_67b495ca9d35c758607e27cc"
}
2025-02-22 15:16:54 [INFO]: Server is running on port 3000 
2025-02-22 15:16:54 [INFO]: Environment: development 
2025-02-22 15:16:54 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 15:16:57 [INFO]: Connected to MongoDB 
2025-02-22 15:23:03 [INFO]: Server is running on port 3000 
2025-02-22 15:23:03 [INFO]: Environment: development 
2025-02-22 15:23:03 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 15:23:07 [INFO]: Connected to MongoDB 
2025-02-22 15:33:17 [INFO]: Server is running on port 3000 
2025-02-22 15:33:17 [INFO]: Environment: development 
2025-02-22 15:33:17 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 15:33:20 [INFO]: Connected to MongoDB 
2025-02-22 15:34:17 [INFO]: Server is running on port 3000 
2025-02-22 15:34:17 [INFO]: Environment: development 
2025-02-22 15:34:17 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 15:34:20 [INFO]: Connected to MongoDB 
2025-02-22 15:35:28 [INFO]: Server is running on port 3000 
2025-02-22 15:35:28 [INFO]: Environment: development 
2025-02-22 15:35:28 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 15:35:31 [INFO]: Connected to MongoDB 
2025-02-22 15:38:08 [INFO]: Server is running on port 3000 
2025-02-22 15:38:08 [INFO]: Environment: development 
2025-02-22 15:38:08 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 15:38:10 [INFO]: Server is running on port 3000 
2025-02-22 15:38:10 [INFO]: Environment: development 
2025-02-22 15:38:10 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 15:38:11 [INFO]: Server is running on port 3000 
2025-02-22 15:38:11 [INFO]: Environment: development 
2025-02-22 15:38:11 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 15:38:14 [INFO]: Connected to MongoDB 
2025-02-22 15:59:33 [INFO]: MongoDB disconnected 
2025-02-22 16:01:29 [INFO]: MongoDB disconnected 
2025-02-22 16:27:23 [INFO]: Server is running on port 3000 
2025-02-22 16:27:23 [INFO]: Environment: development 
2025-02-22 16:27:23 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 16:27:27 [INFO]: Connected to MongoDB 
2025-02-22 16:27:48 [INFO]: Server is running on port 3000 
2025-02-22 16:27:48 [INFO]: Environment: development 
2025-02-22 16:27:48 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 16:27:51 [INFO]: Connected to MongoDB 
2025-02-22 16:30:58 [INFO]: Server is running on port 3000 
2025-02-22 16:30:58 [INFO]: Environment: development 
2025-02-22 16:30:58 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 16:31:01 [INFO]: Connected to MongoDB 
2025-02-22 16:54:23 [INFO]: Server is running on port 3000 
2025-02-22 16:54:23 [INFO]: Environment: development 
2025-02-22 16:54:23 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 16:54:26 [INFO]: Connected to MongoDB 
2025-02-22 16:54:28 [INFO]: Server is running on port 3000 
2025-02-22 16:54:28 [INFO]: Environment: development 
2025-02-22 16:54:28 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 16:54:30 [INFO]: Connected to MongoDB 
2025-02-22 16:59:22 [INFO]: Server is running on port 3000 
2025-02-22 16:59:22 [INFO]: Environment: development 
2025-02-22 16:59:22 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 16:59:25 [INFO]: Connected to MongoDB 
2025-02-22 17:05:39 [INFO]: MongoDB disconnected 
2025-02-22 17:14:20 [INFO]: Server is running on port 3000 
2025-02-22 17:14:20 [INFO]: Environment: development 
2025-02-22 17:14:20 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 17:14:24 [INFO]: Connected to MongoDB 
2025-02-22 17:21:29 [INFO]: Server is running on port 3000 
2025-02-22 17:21:29 [INFO]: Environment: development 
2025-02-22 17:21:29 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 17:21:32 [INFO]: Connected to MongoDB 
2025-02-22 17:23:31 [INFO]: Server is running on port 3000 
2025-02-22 17:23:31 [INFO]: Environment: development 
2025-02-22 17:23:31 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 17:23:34 [INFO]: Connected to MongoDB 
2025-02-22 17:24:20 [INFO]: Server is running on port 3000 
2025-02-22 17:24:20 [INFO]: Environment: development 
2025-02-22 17:24:20 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 17:24:23 [INFO]: Connected to MongoDB 
2025-02-22 17:24:29 [INFO]: Server is running on port 3000 
2025-02-22 17:24:29 [INFO]: Environment: development 
2025-02-22 17:24:29 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 17:24:32 [INFO]: Connected to MongoDB 
2025-02-22 17:26:28 [INFO]: Server is running on port 3000 
2025-02-22 17:26:28 [INFO]: Environment: development 
2025-02-22 17:26:28 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 17:26:32 [INFO]: Server is running on port 3000 
2025-02-22 17:26:32 [INFO]: Environment: development 
2025-02-22 17:26:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 17:26:35 [INFO]: Connected to MongoDB 
2025-02-22 17:28:18 [INFO]: Server is running on port 3000 
2025-02-22 17:28:18 [INFO]: Environment: development 
2025-02-22 17:28:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 17:28:21 [INFO]: Connected to MongoDB 
2025-02-22 17:35:06 [ERROR]: Invalid token {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-22 17:35:34 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-22 17:35:47 [ERROR]: Document not found {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 17:36:44 [ERROR]: Document not found {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 17:36:52 [INFO]: MongoDB disconnected 
2025-02-22 17:36:55 [INFO]: Server is running on port 3000 
2025-02-22 17:36:55 [INFO]: Environment: development 
2025-02-22 17:36:55 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 17:37:16 [INFO]: Server is running on port 3000 
2025-02-22 17:37:16 [INFO]: Environment: development 
2025-02-22 17:37:16 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 17:37:19 [INFO]: Connected to MongoDB 
2025-02-22 17:37:24 [ERROR]: upload.invalidFormat {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Setup Flutter",
    "type": "video",
    "is_free": "true",
    "content": "{\"title\":\"hâhhaa\"}"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 17:53:17 [INFO]: MongoDB disconnected 
2025-02-22 17:57:57 [INFO]: Server is running on port 3000 
2025-02-22 17:57:57 [INFO]: Environment: development 
2025-02-22 17:57:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 17:58:01 [INFO]: Connected to MongoDB 
2025-02-22 17:58:06 [ERROR]: upload.invalidFormat {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Setup Flutter",
    "type": "video",
    "is_free": "true",
    "content": "{\"title\":\"hâhhaa\"}"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 17:58:25 [ERROR]: upload.invalidFormat {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Setup Flutter",
    "type": "video",
    "is_free": "true",
    "content": "{\"title\":\"hâhhaa\"}"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 17:59:28 [INFO]: Server is running on port 3000 
2025-02-22 17:59:28 [INFO]: Environment: development 
2025-02-22 17:59:28 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 17:59:31 [INFO]: Connected to MongoDB 
2025-02-22 17:59:38 [ERROR]: upload.invalidFormat {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Setup Flutter",
    "type": "video",
    "is_free": "true",
    "content": "{\"title\":\"hâhhaa\"}"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 17:59:52 [ERROR]: upload.invalidFormat {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Setup Flutter",
    "type": "video",
    "is_free": "true",
    "content": "{\"title\":\"hâhhaa\"}"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:00:17 [INFO]: Server is running on port 3000 
2025-02-22 18:00:17 [INFO]: Environment: development 
2025-02-22 18:00:17 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:00:19 [INFO]: Connected to MongoDB 
2025-02-22 18:00:22 [ERROR]: schema.validate is not a function {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Setup Flutter",
    "type": "video",
    "is_free": "true",
    "content": "{\"title\":\"hâhhaa\"}",
    "attachments": ""
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:01:35 [INFO]: Server is running on port 3000 
2025-02-22 18:01:35 [INFO]: Environment: development 
2025-02-22 18:01:35 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:01:38 [INFO]: Connected to MongoDB 
2025-02-22 18:01:41 [ERROR]: schema.validate is not a function {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Setup Flutter",
    "type": "video",
    "is_free": "true",
    "content": "{\"title\":\"hâhhaa\"}",
    "attachments": ""
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:02:45 [INFO]: Server is running on port 3000 
2025-02-22 18:02:45 [INFO]: Environment: development 
2025-02-22 18:02:45 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:02:51 [INFO]: Connected to MongoDB 
2025-02-22 18:03:03 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-22 18:04:01 [ERROR]: Insufficient permissions {
  "path": "/api/lessons/67b75fd6e2e66f1197d5bec9",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:04:37 [ERROR]: Insufficient permissions {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:05:06 [INFO]: Server is running on port 3000 
2025-02-22 18:05:06 [INFO]: Environment: development 
2025-02-22 18:05:06 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:05:10 [INFO]: Connected to MongoDB 
2025-02-22 18:05:12 [ERROR]: Document not found {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:05:59 [INFO]: Server is running on port 3000 
2025-02-22 18:05:59 [INFO]: Environment: development 
2025-02-22 18:05:59 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:06:02 [INFO]: Connected to MongoDB 
2025-02-22 18:06:05 [ERROR]: "content" must be of type object {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "video",
    "is_free": "true",
    "content": "{}",
    "attachments": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:06:20 [ERROR]: "content" must be of type object {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "video",
    "is_free": "true",
    "content": "{\"haha\":\"haha\"}",
    "attachments": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:07:32 [INFO]: Server is running on port 3000 
2025-02-22 18:07:32 [INFO]: Environment: development 
2025-02-22 18:07:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:07:35 [INFO]: Connected to MongoDB 
2025-02-22 18:07:37 [ERROR]: "content" must be of type object {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "video",
    "is_free": "true",
    "content": "{\"haha\":\"haha\"}",
    "attachments": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:08:35 [INFO]: Server is running on port 3000 
2025-02-22 18:08:35 [INFO]: Environment: development 
2025-02-22 18:08:35 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:08:38 [INFO]: Connected to MongoDB 
2025-02-22 18:10:26 [INFO]: Server is running on port 3000 
2025-02-22 18:10:26 [INFO]: Environment: development 
2025-02-22 18:10:26 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:10:29 [INFO]: Connected to MongoDB 
2025-02-22 18:10:32 [ERROR]: schema is not defined {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "video",
    "is_free": "true",
    "content": "{\"haha\":\"haha\"}",
    "attachments": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:10:52 [INFO]: Server is running on port 3000 
2025-02-22 18:10:52 [INFO]: Environment: development 
2025-02-22 18:10:52 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:10:55 [INFO]: Connected to MongoDB 
2025-02-22 18:10:57 [ERROR]: error is not defined {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "video",
    "is_free": "true",
    "content": "{\"haha\":\"haha\"}",
    "attachments": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:11:07 [INFO]: Server is running on port 3000 
2025-02-22 18:11:07 [INFO]: Environment: development 
2025-02-22 18:11:07 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:11:10 [INFO]: Connected to MongoDB 
2025-02-22 18:11:15 [ERROR]: Unhandled Rejection: Cannot read properties of undefined (reading 'handleError') {
  "stack": "TypeError: Cannot read properties of undefined (reading 'handleError')\n    at createLesson (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/lesson.controller.js:19:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)"
}
2025-02-22 18:12:30 [INFO]: Server is running on port 3000 
2025-02-22 18:12:30 [INFO]: Environment: development 
2025-02-22 18:12:30 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:12:33 [INFO]: Connected to MongoDB 
2025-02-22 18:12:39 [ERROR]: Unhandled Rejection: Cannot read properties of undefined (reading 'handleError') {
  "stack": "TypeError: Cannot read properties of undefined (reading 'handleError')\n    at createLesson (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/lesson.controller.js:19:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)"
}
2025-02-22 18:13:12 [INFO]: Server is running on port 3000 
2025-02-22 18:13:12 [INFO]: Environment: development 
2025-02-22 18:13:12 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:13:15 [INFO]: Connected to MongoDB 
2025-02-22 18:13:20 [ERROR]: Course not found {}
2025-02-22 18:13:20 [ERROR]: Course not found {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "video",
    "is_free": "true",
    "content": "{\"haha\":\"haha\"}",
    "attachments": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:13:40 [INFO]: Server is running on port 3000 
2025-02-22 18:13:40 [INFO]: Environment: development 
2025-02-22 18:13:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:13:43 [INFO]: Connected to MongoDB 
2025-02-22 18:13:50 [ERROR]: Cannot read properties of undefined (reading 'startsWith') {}
2025-02-22 18:13:50 [ERROR]: Cannot read properties of undefined (reading 'startsWith') {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "video",
    "is_free": "true",
    "content": "{\"haha\":\"haha\"}",
    "attachments": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:16:49 [ERROR]: Cannot read properties of undefined (reading 'startsWith') {}
2025-02-22 18:16:49 [ERROR]: Cannot read properties of undefined (reading 'startsWith') {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "video",
    "is_free": "true",
    "content": "{\"haha\":\"haha\"}",
    "attachments": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:17:41 [ERROR]: Cannot read properties of undefined (reading 'startsWith') {}
2025-02-22 18:17:41 [ERROR]: Cannot read properties of undefined (reading 'startsWith') {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "video",
    "is_free": "true",
    "content": "{\"haha\":\"haha\"}",
    "attachments": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:17:43 [INFO]: Server is running on port 3000 
2025-02-22 18:17:43 [INFO]: Environment: development 
2025-02-22 18:17:43 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:17:47 [INFO]: Connected to MongoDB 
2025-02-22 18:18:15 [INFO]: Server is running on port 3000 
2025-02-22 18:18:15 [INFO]: Environment: development 
2025-02-22 18:18:15 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:18:18 [INFO]: Connected to MongoDB 
2025-02-22 18:18:40 [ERROR]: upload.failed {}
2025-02-22 18:18:40 [ERROR]: upload.failed {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "video",
    "is_free": "true",
    "content": "{\"haha\":\"haha\"}",
    "attachments": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:21:49 [INFO]: Server is running on port 3000 
2025-02-22 18:21:49 [INFO]: Environment: development 
2025-02-22 18:21:49 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:21:52 [INFO]: Connected to MongoDB 
2025-02-22 18:26:35 [INFO]: Server is running on port 3000 
2025-02-22 18:26:35 [INFO]: Environment: development 
2025-02-22 18:26:35 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:26:39 [INFO]: Connected to MongoDB 
2025-02-22 18:27:06 [ERROR]: upload.failed {}
2025-02-22 18:27:06 [ERROR]: upload.failed {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "video",
    "is_free": "true",
    "content": "{\"haha\":\"haha\"}",
    "attachments": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:31:12 [INFO]: Server is running on port 3000 
2025-02-22 18:31:12 [INFO]: Environment: development 
2025-02-22 18:31:12 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:31:16 [INFO]: Connected to MongoDB 
2025-02-22 18:31:31 [ERROR]: CloudinaryFile validation failed: purpose: `lesson_video` is not a valid enum value for path `purpose`. {}
2025-02-22 18:31:31 [ERROR]: CloudinaryFile validation failed: purpose: `lesson_video` is not a valid enum value for path `purpose`. {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "video",
    "is_free": "true",
    "content": "{\"haha\":\"haha\"}",
    "attachments": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 18:33:57 [INFO]: Server is running on port 3000 
2025-02-22 18:33:57 [INFO]: Environment: development 
2025-02-22 18:33:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:34:00 [INFO]: Connected to MongoDB 
2025-02-22 18:55:53 [ERROR]: Unhandled Rejection: Cannot read properties of undefined (reading 'handleError') {
  "stack": "TypeError: Cannot read properties of undefined (reading 'handleError')\n    at getLessonsByCourse (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/lesson.controller.js:63:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)"
}
2025-02-22 18:56:03 [INFO]: Server is running on port 3000 
2025-02-22 18:56:03 [INFO]: Environment: development 
2025-02-22 18:56:03 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:56:06 [INFO]: Connected to MongoDB 
2025-02-22 18:56:08 [ERROR]: Unhandled Rejection: Cannot read properties of undefined (reading 'handleError') {
  "stack": "TypeError: Cannot read properties of undefined (reading 'handleError')\n    at getLessonsByCourse (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/lesson.controller.js:63:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)"
}
2025-02-22 18:57:17 [INFO]: Server is running on port 3000 
2025-02-22 18:57:17 [INFO]: Environment: development 
2025-02-22 18:57:17 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 18:57:20 [INFO]: Connected to MongoDB 
2025-02-22 19:07:15 [INFO]: Server is running on port 3000 
2025-02-22 19:07:15 [INFO]: Environment: development 
2025-02-22 19:07:15 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 19:07:18 [INFO]: Connected to MongoDB 
2025-02-22 19:10:54 [ERROR]: Invalid token {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-22 19:11:03 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-22 19:12:21 [INFO]: Server is running on port 3000 
2025-02-22 19:12:21 [INFO]: Environment: development 
2025-02-22 19:12:21 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 19:12:24 [INFO]: Connected to MongoDB 
2025-02-22 19:22:40 [INFO]: Server is running on port 3000 
2025-02-22 19:22:40 [INFO]: Environment: development 
2025-02-22 19:22:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 19:22:43 [INFO]: Connected to MongoDB 
2025-02-22 19:48:29 [INFO]: Server is running on port 3000 
2025-02-22 19:48:29 [INFO]: Environment: development 
2025-02-22 19:48:29 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 19:48:32 [INFO]: Connected to MongoDB 
2025-02-22 19:49:56 [ERROR]: Invalid token {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-22 19:50:20 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-22 20:08:41 [INFO]: Server is running on port 3000 
2025-02-22 20:08:41 [INFO]: Environment: development 
2025-02-22 20:08:41 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:08:44 [INFO]: Connected to MongoDB 
2025-02-22 20:11:17 [INFO]: Server is running on port 3000 
2025-02-22 20:11:17 [INFO]: Environment: development 
2025-02-22 20:11:17 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:11:20 [INFO]: Connected to MongoDB 
2025-02-22 20:12:35 [INFO]: Server is running on port 3000 
2025-02-22 20:12:35 [INFO]: Environment: development 
2025-02-22 20:12:35 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:12:39 [INFO]: Connected to MongoDB 
2025-02-22 20:13:36 [INFO]: Server is running on port 3000 
2025-02-22 20:13:36 [INFO]: Environment: development 
2025-02-22 20:13:36 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:13:39 [INFO]: Connected to MongoDB 
2025-02-22 20:14:16 [ERROR]: upload.invalidFormat {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "article",
    "is_free": "true",
    "content": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 20:15:14 [ERROR]: upload.invalidFormat {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "article",
    "is_free": "true",
    "content": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 20:15:55 [INFO]: Server is running on port 3000 
2025-02-22 20:15:55 [INFO]: Environment: development 
2025-02-22 20:15:55 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:15:58 [INFO]: Connected to MongoDB 
2025-02-22 20:16:25 [ERROR]: CloudinaryFile validation failed: format: Path `format` is required. {}
2025-02-22 20:16:25 [ERROR]: CloudinaryFile validation failed: format: Path `format` is required. {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "article",
    "is_free": "true",
    "content": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 20:19:46 [INFO]: Server is running on port 3000 
2025-02-22 20:19:46 [INFO]: Environment: development 
2025-02-22 20:19:46 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:19:51 [INFO]: Connected to MongoDB 
2025-02-22 20:21:09 [INFO]: Server is running on port 3000 
2025-02-22 20:21:09 [INFO]: Environment: development 
2025-02-22 20:21:09 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:21:13 [INFO]: Connected to MongoDB 
2025-02-22 20:21:20 [ERROR]: purpose is not defined {}
2025-02-22 20:21:20 [ERROR]: purpose is not defined {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "article",
    "is_free": "true",
    "content": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 20:22:08 [INFO]: Server is running on port 3000 
2025-02-22 20:22:08 [INFO]: Environment: development 
2025-02-22 20:22:08 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:22:12 [INFO]: Connected to MongoDB 
2025-02-22 20:22:25 [ERROR]: upload.failed {}
2025-02-22 20:22:25 [ERROR]: upload.failed {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "article",
    "is_free": "true",
    "content": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 20:22:57 [INFO]: Server is running on port 3000 
2025-02-22 20:22:57 [INFO]: Environment: development 
2025-02-22 20:22:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:23:01 [INFO]: Connected to MongoDB 
2025-02-22 20:27:11 [INFO]: Server is running on port 3000 
2025-02-22 20:27:11 [INFO]: Environment: development 
2025-02-22 20:27:11 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:27:15 [INFO]: Connected to MongoDB 
2025-02-22 20:30:05 [INFO]: Server is running on port 3000 
2025-02-22 20:30:05 [INFO]: Environment: development 
2025-02-22 20:30:05 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:30:09 [INFO]: Connected to MongoDB 
2025-02-22 20:32:23 [INFO]: Server is running on port 3000 
2025-02-22 20:32:23 [INFO]: Environment: development 
2025-02-22 20:32:23 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:32:27 [INFO]: Connected to MongoDB 
2025-02-22 20:32:38 [ERROR]: Cannot read properties of undefined (reading 'toString') {}
2025-02-22 20:32:38 [ERROR]: Cannot read properties of undefined (reading 'toString') {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "article",
    "is_free": "true",
    "content": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 20:43:31 [INFO]: MongoDB disconnected 
2025-02-22 20:47:50 [INFO]: Server is running on port 3000 
2025-02-22 20:47:50 [INFO]: Environment: development 
2025-02-22 20:47:50 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:47:56 [INFO]: Connected to MongoDB 
2025-02-22 20:48:01 [ERROR]: Cannot read properties of undefined (reading 'toString') {}
2025-02-22 20:48:01 [ERROR]: Cannot read properties of undefined (reading 'toString') {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "article",
    "is_free": "true",
    "content": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 20:48:15 [INFO]: Server is running on port 3000 
2025-02-22 20:48:15 [INFO]: Environment: development 
2025-02-22 20:48:15 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:48:19 [INFO]: Connected to MongoDB 
2025-02-22 20:52:49 [INFO]: Server is running on port 3000 
2025-02-22 20:52:49 [INFO]: Environment: development 
2025-02-22 20:52:49 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:52:54 [ERROR]: Invalid token {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-22 20:52:54 [INFO]: Connected to MongoDB 
2025-02-22 20:53:05 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-22 20:53:29 [INFO]: Server is running on port 3000 
2025-02-22 20:53:29 [INFO]: Environment: development 
2025-02-22 20:53:29 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:53:33 [INFO]: Connected to MongoDB 
2025-02-22 20:53:43 [INFO]: Server is running on port 3000 
2025-02-22 20:53:43 [INFO]: Environment: development 
2025-02-22 20:53:43 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:53:46 [INFO]: Connected to MongoDB 
2025-02-22 20:54:30 [INFO]: Server is running on port 3000 
2025-02-22 20:54:30 [INFO]: Environment: development 
2025-02-22 20:54:30 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:54:37 [INFO]: Connected to MongoDB 
2025-02-22 20:55:29 [INFO]: Server is running on port 3000 
2025-02-22 20:55:29 [INFO]: Environment: development 
2025-02-22 20:55:29 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:55:33 [INFO]: Connected to MongoDB 
2025-02-22 20:56:52 [INFO]: Server is running on port 3000 
2025-02-22 20:56:52 [INFO]: Environment: development 
2025-02-22 20:56:52 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 20:56:56 [INFO]: Connected to MongoDB 
2025-02-22 21:06:27 [INFO]: Server is running on port 3000 
2025-02-22 21:06:27 [INFO]: Environment: development 
2025-02-22 21:06:27 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 21:06:31 [INFO]: Connected to MongoDB 
2025-02-22 21:06:35 [INFO]: Server is running on port 3000 
2025-02-22 21:06:35 [INFO]: Environment: development 
2025-02-22 21:06:35 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 21:06:39 [INFO]: Connected to MongoDB 
2025-02-22 21:07:20 [INFO]: Server is running on port 3000 
2025-02-22 21:07:20 [INFO]: Environment: development 
2025-02-22 21:07:20 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 21:07:24 [INFO]: Connected to MongoDB 
2025-02-22 21:07:43 [ERROR]: CloudinaryFile validation failed: format: Path `format` is required. {}
2025-02-22 21:07:43 [ERROR]: CloudinaryFile validation failed: format: Path `format` is required. {
  "path": "/api/lessons/67b7f43fe1eb5507e5a3daf5",
  "method": "POST",
  "body": {
    "title": "Flutter Introduction",
    "description": "Hehehe",
    "type": "article",
    "is_free": "true",
    "content": "string"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-22 21:09:28 [INFO]: Server is running on port 3000 
2025-02-22 21:09:28 [INFO]: Environment: development 
2025-02-22 21:09:28 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 21:09:32 [INFO]: Connected to MongoDB 
2025-02-22 21:10:50 [INFO]: Server is running on port 3000 
2025-02-22 21:10:50 [INFO]: Environment: development 
2025-02-22 21:10:50 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-22 21:10:55 [INFO]: Connected to MongoDB 
