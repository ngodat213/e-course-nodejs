2025-02-18 17:14:37 [INFO]: Server is running on port 3000 
2025-02-18 17:14:42 [INFO]: Server is running on port 3000 
2025-02-18 17:14:42 [INFO]: Environment: development 
2025-02-18 17:14:42 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:14:50 [INFO]: Server is running on port 3000 
2025-02-18 17:14:50 [INFO]: Environment: development 
2025-02-18 17:14:50 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:14:54 [INFO]: Server is running on port 3000 
2025-02-18 17:14:54 [INFO]: Environment: development 
2025-02-18 17:14:54 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:15:00 [INFO]: Server is running on port 3000 
2025-02-18 17:15:00 [INFO]: Environment: development 
2025-02-18 17:15:00 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:15:00 [INFO]: Connected to MongoDB 
2025-02-18 17:15:03 [INFO]: Server is running on port 3000 
2025-02-18 17:15:03 [INFO]: Environment: development 
2025-02-18 17:15:03 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:15:03 [INFO]: Connected to MongoDB 
2025-02-18 17:15:07 [ERROR]: Invalid dev secret key {
  "stack": "Error: Invalid dev secret key\n    at DevController.registerAdmin (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/dev.controller.js:15:15)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/routes/dev.routes.js:19:23\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/middleware/validate.middleware.js:19:13\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:284:15"
}
2025-02-18 17:15:24 [INFO]: Server is running on port 3000 
2025-02-18 17:15:24 [INFO]: Environment: development 
2025-02-18 17:15:24 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:15:24 [INFO]: Connected to MongoDB 
2025-02-18 17:15:37 [INFO]: Server is running on port 3000 
2025-02-18 17:15:37 [INFO]: Environment: development 
2025-02-18 17:15:37 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:15:37 [INFO]: Connected to MongoDB 
2025-02-18 17:15:40 [ERROR]: Invalid dev secret key {
  "stack": "Error: Invalid dev secret key\n    at DevController.registerAdmin (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/dev.controller.js:15:15)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/routes/dev.routes.js:19:23\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/middleware/validate.middleware.js:19:13\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:284:15"
}
2025-02-18 17:15:57 [INFO]: Server is running on port 3000 
2025-02-18 17:15:57 [INFO]: Environment: development 
2025-02-18 17:15:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:15:57 [INFO]: Connected to MongoDB 
2025-02-18 17:15:59 [ERROR]: Invalid dev secret key {
  "stack": "Error: Invalid dev secret key\n    at DevController.registerAdmin (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/dev.controller.js:15:15)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/routes/dev.routes.js:19:23\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/middleware/validate.middleware.js:19:13\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:284:15"
}
2025-02-18 17:15:59 [ERROR]: Invalid dev secret key {
  "stack": "Error: Invalid dev secret key\n    at DevController.registerAdmin (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/dev.controller.js:15:15)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/routes/dev.routes.js:19:23\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/middleware/validate.middleware.js:19:13\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:284:15",
  "path": "/api/dev/register-admin",
  "method": "POST",
  "body": {
    "name": "string",
    "email": "user@example.com",
    "password": "string",
    "dev_secret_key": "string"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 17:16:25 [ERROR]: Email already exists {
  "stack": "Error: Email already exists\n    at UserService.createUser (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/user.service.js:83:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DevController.registerAdmin (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/dev.controller.js:24:21)"
}
2025-02-18 17:16:25 [ERROR]: Email already exists {
  "stack": "Error: Email already exists\n    at UserService.createUser (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/user.service.js:83:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DevController.registerAdmin (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/dev.controller.js:24:21)",
  "path": "/api/dev/register-admin",
  "method": "POST",
  "body": {
    "name": "Admin",
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003",
    "dev_secret_key": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 17:16:53 [INFO]: Server is running on port 3000 
2025-02-18 17:16:53 [INFO]: Environment: development 
2025-02-18 17:16:53 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:16:53 [INFO]: Connected to MongoDB 
2025-02-18 17:17:30 [INFO]: Server is running on port 3000 
2025-02-18 17:17:30 [INFO]: Environment: development 
2025-02-18 17:17:30 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:17:30 [INFO]: Connected to MongoDB 
2025-02-18 17:17:33 [INFO]: Server is running on port 3000 
2025-02-18 17:17:33 [INFO]: Environment: development 
2025-02-18 17:17:33 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:17:33 [INFO]: Connected to MongoDB 
2025-02-18 17:17:41 [INFO]: Server is running on port 3000 
2025-02-18 17:17:41 [INFO]: Environment: development 
2025-02-18 17:17:41 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:17:41 [INFO]: Connected to MongoDB 
2025-02-18 17:17:42 [INFO]: Dev admin created {
  "adminId": "67b45e46236970796c68985e",
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 17:18:24 [ERROR]: Unhandled Rejection: Cannot read properties of undefined (reading 'handleError') {
  "stack": "TypeError: Cannot read properties of undefined (reading 'handleError')\n    at login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:59:18)"
}
2025-02-18 17:19:18 [INFO]: Server is running on port 3000 
2025-02-18 17:19:18 [INFO]: Environment: development 
2025-02-18 17:19:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:19:18 [INFO]: Connected to MongoDB 
2025-02-18 17:19:21 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 17:20:39 [INFO]: Server is running on port 3000 
2025-02-18 17:20:39 [INFO]: Environment: development 
2025-02-18 17:20:39 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:20:39 [INFO]: Connected to MongoDB 
2025-02-18 17:21:36 [INFO]: Server is running on port 3000 
2025-02-18 17:21:36 [INFO]: Environment: development 
2025-02-18 17:21:36 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:21:36 [INFO]: Connected to MongoDB 
2025-02-18 17:23:13 [INFO]: Server is running on port 3000 
2025-02-18 17:23:13 [INFO]: Environment: development 
2025-02-18 17:23:13 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:23:13 [INFO]: Connected to MongoDB 
2025-02-18 17:23:24 [INFO]: Server is running on port 3000 
2025-02-18 17:23:24 [INFO]: Environment: development 
2025-02-18 17:23:24 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:23:24 [INFO]: Connected to MongoDB 
2025-02-18 17:23:25 [INFO]: Server is running on port 3000 
2025-02-18 17:23:25 [INFO]: Environment: development 
2025-02-18 17:23:25 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:23:25 [INFO]: Connected to MongoDB 
2025-02-18 17:23:26 [INFO]: Server is running on port 3000 
2025-02-18 17:23:26 [INFO]: Environment: development 
2025-02-18 17:23:26 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:23:26 [INFO]: Connected to MongoDB 
2025-02-18 17:24:06 [INFO]: Reset password email sent {
  "userId": "67b45e46236970796c68985e"
}
2025-02-18 17:24:06 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 17:31:31 [INFO]: Server is running on port 3000 
2025-02-18 17:31:31 [INFO]: Environment: development 
2025-02-18 17:31:31 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:31:31 [INFO]: Connected to MongoDB 
2025-02-18 17:37:06 [INFO]: Server is running on port 3000 
2025-02-18 17:37:06 [INFO]: Environment: development 
2025-02-18 17:37:06 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:37:06 [INFO]: Connected to MongoDB 
2025-02-18 17:37:33 [INFO]: Reset password email sent {
  "userId": "67b45e46236970796c68985e"
}
2025-02-18 17:37:33 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 17:38:45 [INFO]: Server is running on port 3000 
2025-02-18 17:38:45 [INFO]: Environment: development 
2025-02-18 17:38:45 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:38:45 [INFO]: Connected to MongoDB 
2025-02-18 17:39:02 [INFO]: Reset password email sent {
  "userId": "67b45e46236970796c68985e"
}
2025-02-18 17:39:02 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 17:40:24 [INFO]: Mobile user registered {
  "userId": "67b46394404940a4ce4b8880"
}
2025-02-18 17:40:24 [INFO]: Mobile user registered {
  "email": "gangal.dat@gmail.com"
}
2025-02-18 17:40:24 [ERROR]: res.created is not a function {
  "stack": "TypeError: res.created is not a function\n    at AuthController.createdResponse (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/base.controller.js:13:13)\n    at AuthController.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:24:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)"
}
2025-02-18 17:40:24 [ERROR]: res.created is not a function {
  "stack": "TypeError: res.created is not a function\n    at AuthController.createdResponse (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/base.controller.js:13:13)\n    at AuthController.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:24:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
  "path": "/api/auth/register/mobile",
  "method": "POST",
  "body": {
    "name": "NgoVanTienDat",
    "email": "gangal.dat@gmail.com",
    "password": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 17:43:07 [INFO]: Server is running on port 3000 
2025-02-18 17:43:07 [INFO]: Environment: development 
2025-02-18 17:43:07 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:43:07 [INFO]: Connected to MongoDB 
2025-02-18 17:43:21 [INFO]: Mobile user registered {
  "userId": "67b46445a26adb83470780f7"
}
2025-02-18 17:43:21 [INFO]: Mobile user registered {
  "email": "gangal.dat@gmail.com"
}
2025-02-18 17:43:21 [ERROR]: res.created is not a function {
  "stack": "TypeError: res.created is not a function\n    at AuthController.createdResponse (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/base.controller.js:13:13)\n    at AuthController.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:24:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)"
}
2025-02-18 17:43:21 [ERROR]: res.created is not a function {
  "stack": "TypeError: res.created is not a function\n    at AuthController.createdResponse (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/base.controller.js:13:13)\n    at AuthController.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:24:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
  "path": "/api/auth/register/mobile",
  "method": "POST",
  "body": {
    "name": "NgoVanTienDat",
    "email": "gangal.dat@gmail.com",
    "password": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 17:46:26 [INFO]: Server is running on port 3000 
2025-02-18 17:46:26 [INFO]: Environment: development 
2025-02-18 17:46:26 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:46:26 [INFO]: Connected to MongoDB 
2025-02-18 17:46:35 [INFO]: Mobile user registered {
  "userId": "67b46507bdfebb2a1ff8c00e"
}
2025-02-18 17:46:35 [INFO]: Mobile user registered {
  "email": "gangal.dat@gmail.com"
}
2025-02-18 17:48:21 [ERROR]: Dữ liệu không hợp lệ {
  "stack": "Error: Dữ liệu không hợp lệ\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/middleware/validate.middleware.js:16:23\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/node_modules/express/lib/router/index.js:47:12)",
  "path": "/api/auth/verify-otp",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "otp": "302896"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 17:56:52 [INFO]: Server is running on port 3000 
2025-02-18 17:56:52 [INFO]: Environment: development 
2025-02-18 17:56:52 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:56:52 [INFO]: Connected to MongoDB 
2025-02-18 17:56:56 [INFO]: Server is running on port 3000 
2025-02-18 17:56:56 [INFO]: Environment: development 
2025-02-18 17:56:56 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:56:56 [INFO]: Connected to MongoDB 
2025-02-18 17:57:58 [INFO]: Server is running on port 3000 
2025-02-18 17:57:58 [INFO]: Environment: development 
2025-02-18 17:57:58 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:57:58 [INFO]: Connected to MongoDB 
2025-02-18 17:58:06 [INFO]: Server is running on port 3000 
2025-02-18 17:58:06 [INFO]: Environment: development 
2025-02-18 17:58:06 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:58:06 [INFO]: Connected to MongoDB 
2025-02-18 17:58:07 [INFO]: Server is running on port 3000 
2025-02-18 17:58:07 [INFO]: Environment: development 
2025-02-18 17:58:07 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:58:07 [INFO]: Connected to MongoDB 
2025-02-18 17:58:08 [INFO]: Server is running on port 3000 
2025-02-18 17:58:08 [INFO]: Environment: development 
2025-02-18 17:58:08 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 17:58:08 [INFO]: Connected to MongoDB 
2025-02-18 17:58:11 [ERROR]: otp.notFound {
  "stack": "Error: otp.notFound\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:35:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)"
}
2025-02-18 17:58:11 [ERROR]: otp.notFound {
  "stack": "Error: otp.notFound\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:35:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)",
  "path": "/api/auth/verify-otp",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "otp": "302896"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 17:58:30 [INFO]: Mobile user registered {
  "userId": "67b467d2930761488f779a17"
}
2025-02-18 17:58:30 [INFO]: Mobile user registered {
  "email": "gangal.dat@gmail.com"
}
2025-02-18 17:58:48 [ERROR]: otp.notFound {
  "stack": "Error: otp.notFound\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:35:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)"
}
2025-02-18 17:58:48 [ERROR]: otp.notFound {
  "stack": "Error: otp.notFound\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:35:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)",
  "path": "/api/auth/verify-otp",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "otp": "970739"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 17:58:51 [ERROR]: otp.notFound {
  "stack": "Error: otp.notFound\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:35:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)"
}
2025-02-18 17:58:51 [ERROR]: otp.notFound {
  "stack": "Error: otp.notFound\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:35:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)",
  "path": "/api/auth/verify-otp",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "otp": "970739"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 18:06:23 [INFO]: Server is running on port 3000 
2025-02-18 18:06:23 [INFO]: Environment: development 
2025-02-18 18:06:23 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 18:06:23 [INFO]: Connected to MongoDB 
2025-02-18 18:06:39 [INFO]: Dev fetched all users {
  "totalUsers": 6,
  "page": 1,
  "limit": 10
}
2025-02-18 19:31:05 [INFO]: MongoDB disconnected 
2025-02-18 20:05:10 [INFO]: Mobile user registered {
  "userId": "67b485839489112649a9948d"
}
2025-02-18 20:05:10 [INFO]: Mobile user registered {
  "email": "haha@example.com"
}
2025-02-18 20:05:14 [INFO]: Dev fetched all users {
  "totalUsers": 7,
  "page": 1,
  "limit": 10
}
2025-02-18 20:38:03 [INFO]: Server is running on port 3000 
2025-02-18 20:38:03 [INFO]: Environment: development 
2025-02-18 20:38:03 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:38:03 [INFO]: Connected to MongoDB 
2025-02-18 20:38:31 [INFO]: Server is running on port 3000 
2025-02-18 20:38:31 [INFO]: Environment: development 
2025-02-18 20:38:31 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:38:31 [INFO]: Connected to MongoDB 
2025-02-18 20:38:47 [INFO]: Server is running on port 3000 
2025-02-18 20:38:47 [INFO]: Environment: development 
2025-02-18 20:38:47 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:38:47 [INFO]: Connected to MongoDB 
2025-02-18 20:40:38 [INFO]: Server is running on port 3000 
2025-02-18 20:40:38 [INFO]: Environment: development 
2025-02-18 20:40:38 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:40:38 [INFO]: Connected to MongoDB 
2025-02-18 20:40:49 [INFO]: Server is running on port 3000 
2025-02-18 20:40:49 [INFO]: Environment: development 
2025-02-18 20:40:49 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:40:49 [INFO]: Connected to MongoDB 
2025-02-18 20:40:54 [INFO]: Server is running on port 3000 
2025-02-18 20:40:54 [INFO]: Environment: development 
2025-02-18 20:40:54 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:40:54 [INFO]: Connected to MongoDB 
2025-02-18 20:41:04 [INFO]: Server is running on port 3000 
2025-02-18 20:41:04 [INFO]: Environment: development 
2025-02-18 20:41:04 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:41:04 [INFO]: Connected to MongoDB 
2025-02-18 20:41:08 [INFO]: Server is running on port 3000 
2025-02-18 20:41:08 [INFO]: Environment: development 
2025-02-18 20:41:08 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:41:08 [INFO]: Connected to MongoDB 
2025-02-18 20:42:05 [INFO]: Server is running on port 3000 
2025-02-18 20:42:05 [INFO]: Environment: development 
2025-02-18 20:42:05 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:42:05 [INFO]: Connected to MongoDB 
2025-02-18 20:42:16 [INFO]: Server is running on port 3000 
2025-02-18 20:42:16 [INFO]: Environment: development 
2025-02-18 20:42:16 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:42:16 [INFO]: Connected to MongoDB 
2025-02-18 20:42:32 [INFO]: Server is running on port 3000 
2025-02-18 20:42:32 [INFO]: Environment: development 
2025-02-18 20:42:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:42:32 [INFO]: Connected to MongoDB 
2025-02-18 20:42:45 [ERROR]: bcrypt is not defined {
  "stack": "ReferenceError: bcrypt is not defined\n    at HashService.hashData (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/hash.service.js:3:9)\n    at OTPService.saveOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:23:36)\n    at OTPService.generateAndSendOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:67:20)\n    at AuthService.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:176:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:22:28)"
}
2025-02-18 20:42:45 [ERROR]: bcrypt is not defined {
  "stack": "ReferenceError: bcrypt is not defined\n    at HashService.hashData (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/hash.service.js:3:9)\n    at OTPService.saveOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:23:36)\n    at OTPService.generateAndSendOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:67:20)\n    at AuthService.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:176:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthController.registerMobile (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:22:28)",
  "path": "/api/auth/register/mobile",
  "method": "POST",
  "body": {
    "name": "string",
    "email": "haha@example.com",
    "password": "string"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 20:43:35 [INFO]: Server is running on port 3000 
2025-02-18 20:43:35 [INFO]: Environment: development 
2025-02-18 20:43:35 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:43:35 [INFO]: Connected to MongoDB 
2025-02-18 20:43:37 [INFO]: Server is running on port 3000 
2025-02-18 20:43:37 [INFO]: Environment: development 
2025-02-18 20:43:37 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:43:37 [INFO]: Connected to MongoDB 
2025-02-18 20:43:51 [INFO]: Mobile user registered {
  "userId": "67b48e94cab365627a8b03dd"
}
2025-02-18 20:43:51 [INFO]: Mobile user registered {
  "email": "haha@example.com"
}
2025-02-18 20:44:14 [INFO]: Dev fetched all users {
  "totalUsers": 7,
  "page": 1,
  "limit": 10
}
2025-02-18 20:45:16 [INFO]: Server is running on port 3000 
2025-02-18 20:45:16 [INFO]: Environment: development 
2025-02-18 20:45:16 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:45:16 [INFO]: Connected to MongoDB 
2025-02-18 20:45:26 [INFO]: Server is running on port 3000 
2025-02-18 20:45:26 [INFO]: Environment: development 
2025-02-18 20:45:26 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:45:26 [INFO]: Connected to MongoDB 
2025-02-18 20:45:47 [INFO]: Server is running on port 3000 
2025-02-18 20:45:47 [INFO]: Environment: development 
2025-02-18 20:45:47 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 20:45:47 [INFO]: Connected to MongoDB 
2025-02-18 21:09:59 [INFO]: Server is running on port 3000 
2025-02-18 21:09:59 [INFO]: Environment: development 
2025-02-18 21:09:59 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:10:04 [INFO]: Connected to MongoDB 
2025-02-18 21:11:27 [INFO]: Server is running on port 3000 
2025-02-18 21:11:27 [INFO]: Environment: development 
2025-02-18 21:11:27 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:11:32 [INFO]: Connected to MongoDB 
2025-02-18 21:13:25 [INFO]: Mobile user registered {
  "userId": "67b495809d35c758607e27c7"
}
2025-02-18 21:13:25 [INFO]: Mobile user registered {
  "email": "haha@example.com"
}
2025-02-18 21:14:38 [INFO]: Mobile user registered {
  "userId": "67b495ca9d35c758607e27cc"
}
2025-02-18 21:14:38 [INFO]: Mobile user registered {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:15:07 [ERROR]: otp.invalid {
  "stack": "Error: otp.invalid\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:44:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)"
}
2025-02-18 21:15:07 [ERROR]: otp.invalid {
  "stack": "Error: otp.invalid\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:44:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)",
  "path": "/api/auth/verify-otp",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "otp": "773164"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 21:15:53 [INFO]: Server is running on port 3000 
2025-02-18 21:15:53 [INFO]: Environment: development 
2025-02-18 21:15:53 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:15:58 [INFO]: Connected to MongoDB 
2025-02-18 21:16:02 [ERROR]: user.notActive {
  "stack": "Error: user.notActive\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:44:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)"
}
2025-02-18 21:16:02 [ERROR]: user.notActive {
  "stack": "Error: user.notActive\n    at OTPService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/otp.service.js:44:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async AuthService.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:187:9)\n    at async AuthController.verifyOTP (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:33:28)",
  "path": "/api/auth/verify-otp",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "otp": "773164"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 21:16:12 [INFO]: Server is running on port 3000 
2025-02-18 21:16:12 [INFO]: Environment: development 
2025-02-18 21:16:12 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:16:16 [INFO]: Connected to MongoDB 
2025-02-18 21:16:20 [INFO]: OTP verified successfully {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:16:20 [INFO]: OTP verified {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:17:14 [ERROR]: Invalid email or password {
  "stack": "Error: Invalid email or password\n    at AuthService.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:80:19)\n    at async AuthController.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:55:28)"
}
2025-02-18 21:17:14 [ERROR]: Invalid email or password {
  "stack": "Error: Invalid email or password\n    at AuthService.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:80:19)\n    at async AuthController.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:55:28)",
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "string"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 21:17:46 [INFO]: Server is running on port 3000 
2025-02-18 21:17:46 [INFO]: Environment: development 
2025-02-18 21:17:46 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:17:51 [INFO]: Connected to MongoDB 
2025-02-18 21:17:54 [ERROR]: Invalid email or password {}
2025-02-18 21:17:54 [ERROR]: Invalid email or password {
  "stack": "Error: Invalid email or password\n    at AuthService.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:80:19)\n    at async AuthController.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:55:28)",
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "string"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 21:18:15 [ERROR]: Invalid email or password {}
2025-02-18 21:18:15 [ERROR]: Invalid email or password {
  "stack": "Error: Invalid email or password\n    at AuthService.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/auth.service.js:80:19)\n    at async AuthController.login (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/auth.controller.js:55:28)",
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "string"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 21:18:51 [INFO]: Server is running on port 3000 
2025-02-18 21:18:51 [INFO]: Environment: development 
2025-02-18 21:18:51 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:18:57 [INFO]: Connected to MongoDB 
2025-02-18 21:19:02 [ERROR]: Invalid email or password {}
2025-02-18 21:19:02 [ERROR]: Invalid email or password {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "string"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-18 21:19:13 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:20:21 [INFO]: Server is running on port 3000 
2025-02-18 21:20:21 [INFO]: Environment: development 
2025-02-18 21:20:21 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:20:26 [INFO]: Connected to MongoDB 
2025-02-18 21:20:31 [INFO]: Server is running on port 3000 
2025-02-18 21:20:31 [INFO]: Environment: development 
2025-02-18 21:20:31 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:20:34 [INFO]: Connected to MongoDB 
2025-02-18 21:21:14 [INFO]: Server is running on port 3000 
2025-02-18 21:21:14 [INFO]: Environment: development 
2025-02-18 21:21:14 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:21:16 [INFO]: Server is running on port 3000 
2025-02-18 21:21:16 [INFO]: Environment: development 
2025-02-18 21:21:16 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:21:20 [INFO]: Connected to MongoDB 
2025-02-18 21:21:35 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:22:31 [INFO]: Server is running on port 3000 
2025-02-18 21:22:31 [INFO]: Environment: development 
2025-02-18 21:22:31 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:22:36 [INFO]: Connected to MongoDB 
2025-02-18 21:24:51 [INFO]: Reset password email sent {
  "userId": "67b495ca9d35c758607e27cc"
}
2025-02-18 21:24:51 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:25:38 [INFO]: Forgot password mobile initiated {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:27:28 [INFO]: Server is running on port 3000 
2025-02-18 21:27:28 [INFO]: Environment: development 
2025-02-18 21:27:28 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:27:32 [INFO]: Connected to MongoDB 
2025-02-18 21:27:40 [INFO]: Forgot password mobile initiated {
  "email": "ngodat.it213@gmail.com"
}
2025-02-18 21:32:02 [INFO]: Server is running on port 3000 
2025-02-18 21:32:02 [INFO]: Environment: development 
2025-02-18 21:32:02 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-18 21:32:06 [INFO]: Connected to MongoDB 
2025-02-18 21:35:08 [INFO]: MongoDB disconnected 
2025-02-19 13:03:14 [INFO]: Server is running on port 3000 
2025-02-19 13:03:14 [INFO]: Environment: development 
2025-02-19 13:03:14 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:03:17 [INFO]: Connected to MongoDB 
2025-02-19 13:08:45 [INFO]: Server is running on port 3000 
2025-02-19 13:08:45 [INFO]: Environment: development 
2025-02-19 13:08:45 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:08:48 [INFO]: Connected to MongoDB 
2025-02-19 13:09:09 [INFO]: Server is running on port 3000 
2025-02-19 13:09:09 [INFO]: Environment: development 
2025-02-19 13:09:09 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:09:13 [INFO]: Connected to MongoDB 
2025-02-19 13:11:49 [INFO]: Reset password email sent {
  "userId": "67b495ca9d35c758607e27cc"
}
2025-02-19 13:11:49 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 13:13:40 [INFO]: Server is running on port 3000 
2025-02-19 13:13:40 [INFO]: Environment: development 
2025-02-19 13:13:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:13:43 [INFO]: Connected to MongoDB 
2025-02-19 13:13:44 [INFO]: Server is running on port 3000 
2025-02-19 13:13:44 [INFO]: Environment: development 
2025-02-19 13:13:44 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:13:47 [INFO]: Connected to MongoDB 
2025-02-19 13:13:55 [INFO]: Server is running on port 3000 
2025-02-19 13:13:55 [INFO]: Environment: development 
2025-02-19 13:13:55 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:13:58 [INFO]: Connected to MongoDB 
2025-02-19 13:14:18 [INFO]: Server is running on port 3000 
2025-02-19 13:14:18 [INFO]: Environment: development 
2025-02-19 13:14:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:14:21 [INFO]: Connected to MongoDB 
2025-02-19 13:14:42 [INFO]: Server is running on port 3000 
2025-02-19 13:14:42 [INFO]: Environment: development 
2025-02-19 13:14:42 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:14:46 [INFO]: Connected to MongoDB 
2025-02-19 13:15:32 [INFO]: Reset password email sent {
  "userId": "67b495ca9d35c758607e27cc"
}
2025-02-19 13:15:32 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 13:17:08 [INFO]: Server is running on port 3000 
2025-02-19 13:17:08 [INFO]: Environment: development 
2025-02-19 13:17:08 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:17:10 [INFO]: Server is running on port 3000 
2025-02-19 13:17:10 [INFO]: Environment: development 
2025-02-19 13:17:10 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:17:13 [INFO]: Connected to MongoDB 
2025-02-19 13:17:21 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 13:18:26 [INFO]: Server is running on port 3000 
2025-02-19 13:18:26 [INFO]: Environment: development 
2025-02-19 13:18:26 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:18:27 [INFO]: Server is running on port 3000 
2025-02-19 13:18:27 [INFO]: Environment: development 
2025-02-19 13:18:27 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:18:30 [INFO]: Connected to MongoDB 
2025-02-19 13:18:36 [INFO]: Password reset requested {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 13:19:17 [INFO]: Password reset completed {
  "token": "47f0774ea5c23941d2c986995d7e773ac7bc84ce9efef17e982745025ad01d06"
}
2025-02-19 13:19:41 [ERROR]: Invalid email or password {}
2025-02-19 13:19:41 [ERROR]: Invalid email or password {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 13:19:48 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 13:20:18 [INFO]: Server is running on port 3000 
2025-02-19 13:20:18 [INFO]: Environment: development 
2025-02-19 13:20:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:20:21 [INFO]: Connected to MongoDB 
2025-02-19 13:21:36 [INFO]: Dev fetched all users {
  "totalUsers": 2,
  "page": 1,
  "limit": 10
}
2025-02-19 13:22:21 [ERROR]: User is not defined {}
2025-02-19 13:22:21 [ERROR]: User is not defined {
  "path": "/api/auth/refresh-token",
  "method": "POST",
  "body": {
    "refresh_token": "40f78084117f14e2e24dc55748babd0d876aa776c99f0256b61466f3d79622b689da2127babd6798"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 13:22:39 [ERROR]: User is not defined {}
2025-02-19 13:22:39 [ERROR]: User is not defined {
  "path": "/api/auth/refresh-token",
  "method": "POST",
  "body": {
    "refresh_token": "40f78084117f14e2e24dc55748babd0d876aa776c99f0256b61466f3d79622b689da2127babd6798"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 13:25:16 [ERROR]: User is not defined {}
2025-02-19 13:25:16 [ERROR]: User is not defined {
  "path": "/api/auth/refresh-token",
  "method": "POST",
  "body": {
    "refresh_token": "40f78084117f14e2e24dc55748babd0d876aa776c99f0256b61466f3d79622b689da2127babd6798"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 13:25:42 [ERROR]: auth.invalidRefreshToken {}
2025-02-19 13:25:42 [ERROR]: auth.invalidRefreshToken {
  "path": "/api/auth/refresh-token",
  "method": "POST",
  "body": {
    "refresh_token": "40f78084117f14e2e24dc55748babd0d876"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 13:27:35 [INFO]: Server is running on port 3000 
2025-02-19 13:27:35 [INFO]: Environment: development 
2025-02-19 13:27:35 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:27:38 [INFO]: Connected to MongoDB 
2025-02-19 13:27:40 [INFO]: Server is running on port 3000 
2025-02-19 13:27:40 [INFO]: Environment: development 
2025-02-19 13:27:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:27:43 [INFO]: Connected to MongoDB 
2025-02-19 13:27:45 [ERROR]: Invalid refresh token {}
2025-02-19 13:27:45 [ERROR]: Invalid refresh token {
  "path": "/api/auth/refresh-token",
  "method": "POST",
  "body": {
    "refresh_token": "40f78084117f14e2e24dc55748babd0d876"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 13:30:14 [INFO]: Server is running on port 3000 
2025-02-19 13:30:14 [INFO]: Environment: development 
2025-02-19 13:30:14 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:30:17 [INFO]: Connected to MongoDB 
2025-02-19 13:30:20 [ERROR]: Invalid refresh token {}
2025-02-19 13:30:20 [ERROR]: Invalid refresh token {
  "path": "/api/auth/refresh-token",
  "method": "POST",
  "body": {
    "refresh_token": "40f78084117f14e2e24dc55748babd0d876"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 13:33:19 [INFO]: Server is running on port 3000 
2025-02-19 13:33:19 [INFO]: Environment: development 
2025-02-19 13:33:19 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:33:22 [INFO]: Connected to MongoDB 
2025-02-19 13:33:24 [INFO]: Server is running on port 3000 
2025-02-19 13:33:24 [INFO]: Environment: development 
2025-02-19 13:33:24 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:33:27 [INFO]: Server is running on port 3000 
2025-02-19 13:33:27 [INFO]: Environment: development 
2025-02-19 13:33:27 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:33:30 [INFO]: Connected to MongoDB 
2025-02-19 13:34:38 [INFO]: Server is running on port 3000 
2025-02-19 13:34:38 [INFO]: Environment: development 
2025-02-19 13:34:38 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:34:39 [INFO]: Server is running on port 3000 
2025-02-19 13:34:39 [INFO]: Environment: development 
2025-02-19 13:34:39 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:34:43 [INFO]: Connected to MongoDB 
2025-02-19 13:36:49 [INFO]: Server is running on port 3000 
2025-02-19 13:36:49 [INFO]: Environment: development 
2025-02-19 13:36:49 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 13:36:53 [INFO]: Connected to MongoDB 
2025-02-19 13:39:26 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 14:31:11 [INFO]: Server is running on port 3000 
2025-02-19 14:31:11 [INFO]: Environment: development 
2025-02-19 14:31:11 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:31:14 [INFO]: Connected to MongoDB 
2025-02-19 14:34:24 [INFO]: Server is running on port 3000 
2025-02-19 14:34:24 [INFO]: Environment: development 
2025-02-19 14:34:24 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:34:27 [INFO]: Connected to MongoDB 
2025-02-19 14:40:22 [INFO]: Server is running on port 3000 
2025-02-19 14:40:22 [INFO]: Environment: development 
2025-02-19 14:40:22 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:40:25 [INFO]: Connected to MongoDB 
2025-02-19 14:40:27 [INFO]: Server is running on port 3000 
2025-02-19 14:40:27 [INFO]: Environment: development 
2025-02-19 14:40:27 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:40:30 [INFO]: Connected to MongoDB 
2025-02-19 14:40:32 [INFO]: Server is running on port 3000 
2025-02-19 14:40:32 [INFO]: Environment: development 
2025-02-19 14:40:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:40:35 [INFO]: Connected to MongoDB 
2025-02-19 14:42:15 [ERROR]: Invalid token {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 14:42:21 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 14:42:34 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:43:50 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:43:52 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:44:19 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:45:08 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 14:45:21 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:46:57 [INFO]: MongoDB disconnected 
2025-02-19 14:47:03 [INFO]: Server is running on port 3000 
2025-02-19 14:47:03 [INFO]: Environment: development 
2025-02-19 14:47:03 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:47:07 [INFO]: Connected to MongoDB 
2025-02-19 14:47:14 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:47:44 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:48:18 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:50:17 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:50:42 [INFO]: Server is running on port 3000 
2025-02-19 14:50:42 [INFO]: Environment: development 
2025-02-19 14:50:42 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:50:46 [INFO]: Connected to MongoDB 
2025-02-19 14:50:55 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:53:49 [ERROR]: Insufficient permissions {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:53:50 [INFO]: Server is running on port 3000 
2025-02-19 14:53:50 [INFO]: Environment: development 
2025-02-19 14:53:50 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:53:54 [INFO]: Connected to MongoDB 
2025-02-19 14:53:54 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter",
    "price": "10000",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:54:38 [INFO]: Server is running on port 3000 
2025-02-19 14:54:38 [INFO]: Environment: development 
2025-02-19 14:54:38 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 14:54:41 [INFO]: Connected to MongoDB 
2025-02-19 14:54:43 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter",
    "price": "10000",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:55:22 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter",
    "price": "10000",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:55:52 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter",
    "price": "10000",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:55:59 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter",
    "price": "10000",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:56:30 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter",
    "price": "10000",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:56:55 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter",
    "price": "",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:57:13 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
    "price": "",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:57:39 [ERROR]: Course validation failed: instructor_id: Path `instructor_id` is required. {}
2025-02-19 14:57:39 [ERROR]: Course validation failed: instructor_id: Path `instructor_id` is required. {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
    "price": "111111",
    "status": "draft",
    "thumbnail_id": "ecourse/[object Object]/sbbl2u8b3yiwwzrmbckk"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 14:59:07 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter ",
    "price": "111111",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:03:25 [INFO]: MongoDB disconnected 
2025-02-19 15:04:43 [ERROR]: Invalid token {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 15:04:51 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 15:05:08 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter ",
    "price": "111111",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:05:35 [INFO]: Server is running on port 3000 
2025-02-19 15:05:35 [INFO]: Environment: development 
2025-02-19 15:05:35 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:05:42 [ERROR]: Dữ liệu không hợp lệ {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter ",
    "price": "111111",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:05:44 [INFO]: Connected to MongoDB 
2025-02-19 15:06:37 [ERROR]: Course validation failed: instructor_id: Path `instructor_id` is required. {}
2025-02-19 15:06:37 [ERROR]: Course validation failed: instructor_id: Path `instructor_id` is required. {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter for beginner hahahahahaha",
    "price": "111111",
    "status": "draft",
    "thumbnail_id": "ecourse/[object Object]/xs7kvykgvtpemlcn6tmy"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:07:48 [ERROR]: Course validation failed: instructor_id: Path `instructor_id` is required. {}
2025-02-19 15:07:48 [ERROR]: Course validation failed: instructor_id: Path `instructor_id` is required. {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Flutter for beginner",
    "description": "Flutter for beginner hahahahahaha",
    "price": "111111",
    "status": "draft",
    "thumbnail_id": "ecourse/[object Object]/tyuibfrqbun1tbp8uu5y"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:07:55 [INFO]: Server is running on port 3000 
2025-02-19 15:07:55 [INFO]: Environment: development 
2025-02-19 15:07:55 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:07:58 [INFO]: Connected to MongoDB 
2025-02-19 15:08:13 [INFO]: Course created {
  "id": "67b5916d1222c1d3e8ccfbd2"
}
2025-02-19 15:22:18 [INFO]: Server is running on port 3000 
2025-02-19 15:22:18 [INFO]: Environment: development 
2025-02-19 15:22:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:22:21 [INFO]: Connected to MongoDB 
2025-02-19 15:25:03 [ERROR]: Invalid email or password {}
2025-02-19 15:25:03 [ERROR]: Invalid email or password {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "john@example.com",
    "password": "password123"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 15:27:09 [INFO]: Server is running on port 3000 
2025-02-19 15:27:09 [INFO]: Environment: development 
2025-02-19 15:27:09 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:27:13 [INFO]: Connected to MongoDB 
2025-02-19 15:27:17 [ERROR]: Invalid token {
  "path": "/api/users/info",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 15:27:34 [ERROR]: Invalid email or password {}
2025-02-19 15:27:34 [ERROR]: Invalid email or password {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 15:27:41 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 15:27:56 [ERROR]: UserController.getUserById is not a function {
  "path": "/api/users/info",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:29:34 [ERROR]: UserController.getUserById is not a function {
  "path": "/api/users/info",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:29:53 [INFO]: Server is running on port 3000 
2025-02-19 15:29:53 [INFO]: Environment: development 
2025-02-19 15:29:53 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:29:54 [ERROR]: Cannot read properties of undefined (reading 'findById') {}
2025-02-19 15:29:54 [ERROR]: Cannot read properties of undefined (reading 'findById') {
  "path": "/api/users/info",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:29:56 [INFO]: Connected to MongoDB 
2025-02-19 15:33:37 [INFO]: Server is running on port 3000 
2025-02-19 15:33:37 [INFO]: Environment: development 
2025-02-19 15:33:37 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:33:41 [INFO]: Connected to MongoDB 
2025-02-19 15:34:04 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 15:34:17 [ERROR]: Cannot read properties of undefined (reading 'findById') {}
2025-02-19 15:34:17 [ERROR]: Cannot read properties of undefined (reading 'findById') {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:34:20 [ERROR]: Cannot read properties of undefined (reading 'findById') {}
2025-02-19 15:34:20 [ERROR]: Cannot read properties of undefined (reading 'findById') {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:35:34 [INFO]: Server is running on port 3000 
2025-02-19 15:35:34 [INFO]: Environment: development 
2025-02-19 15:35:34 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:35:37 [INFO]: Connected to MongoDB 
2025-02-19 15:36:01 [ERROR]: Invalid email or password {}
2025-02-19 15:36:01 [ERROR]: Invalid email or password {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 15:36:07 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 15:36:19 [ERROR]: User not found {}
2025-02-19 15:36:19 [ERROR]: User not found {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:36:42 [INFO]: Server is running on port 3000 
2025-02-19 15:36:42 [INFO]: Environment: development 
2025-02-19 15:36:42 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:36:47 [INFO]: Connected to MongoDB 
2025-02-19 15:36:51 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {}
2025-02-19 15:36:51 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:39:11 [INFO]: Server is running on port 3000 
2025-02-19 15:39:11 [INFO]: Environment: development 
2025-02-19 15:39:11 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:39:14 [INFO]: Connected to MongoDB 
2025-02-19 15:40:10 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 15:41:30 [ERROR]: CloudinaryService.upload is not a function {}
2025-02-19 15:41:30 [ERROR]: CloudinaryService.upload is not a function {
  "path": "/api/users/avatar",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:41:56 [INFO]: Server is running on port 3000 
2025-02-19 15:41:56 [INFO]: Environment: development 
2025-02-19 15:41:56 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:42:03 [INFO]: Connected to MongoDB 
2025-02-19 15:42:04 [ERROR]: upload.failed {}
2025-02-19 15:42:04 [ERROR]: upload.failed {
  "path": "/api/users/avatar",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:46:24 [ERROR]: upload.failed {}
2025-02-19 15:46:24 [ERROR]: upload.failed {
  "path": "/api/users/avatar",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:50:49 [ERROR]: upload.failed {}
2025-02-19 15:50:49 [ERROR]: upload.failed {
  "path": "/api/users/avatar",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 15:54:02 [INFO]: Server is running on port 3000 
2025-02-19 15:54:02 [INFO]: Environment: development 
2025-02-19 15:54:02 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 15:54:06 [INFO]: Connected to MongoDB 
2025-02-19 15:58:30 [ERROR]: Invalid token {
  "path": "/api/users/avatar",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 15:58:44 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 16:00:41 [INFO]: Server is running on port 3000 
2025-02-19 16:00:41 [INFO]: Environment: development 
2025-02-19 16:00:41 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 16:00:47 [INFO]: Connected to MongoDB 
2025-02-19 16:24:23 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 16:25:08 [INFO]: Server is running on port 3000 
2025-02-19 16:25:08 [INFO]: Environment: development 
2025-02-19 16:25:08 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 16:25:11 [INFO]: Connected to MongoDB 
2025-02-19 16:29:36 [INFO]: Server is running on port 3000 
2025-02-19 16:29:36 [INFO]: Environment: development 
2025-02-19 16:29:36 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 16:29:40 [INFO]: Connected to MongoDB 
2025-02-19 17:41:48 [INFO]: MongoDB disconnected 
2025-02-19 17:59:11 [INFO]: MongoDB disconnected 
2025-02-19 18:09:57 [INFO]: Server is running on port 3000 
2025-02-19 18:09:57 [INFO]: Environment: development 
2025-02-19 18:09:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 18:10:01 [INFO]: Connected to MongoDB 
2025-02-19 18:10:05 [ERROR]: Invalid token {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 18:10:14 [ERROR]: RefreshToken validation failed: expires_at: Cast to date failed for value "Invalid Date" (type Date) at path "expires_at" {}
2025-02-19 18:10:14 [ERROR]: RefreshToken validation failed: expires_at: Cast to date failed for value "Invalid Date" (type Date) at path "expires_at" {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003#!@"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 18:11:38 [INFO]: Server is running on port 3000 
2025-02-19 18:11:38 [INFO]: Environment: development 
2025-02-19 18:11:38 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 18:11:41 [INFO]: Connected to MongoDB 
2025-02-19 18:11:44 [ERROR]: RefreshToken validation failed: expires_at: Cast to date failed for value "Invalid Date" (type Date) at path "expires_at" {}
2025-02-19 18:11:44 [ERROR]: RefreshToken validation failed: expires_at: Cast to date failed for value "Invalid Date" (type Date) at path "expires_at" {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003#!@"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 18:12:24 [INFO]: Server is running on port 3000 
2025-02-19 18:12:24 [INFO]: Environment: development 
2025-02-19 18:12:24 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 18:12:27 [INFO]: Connected to MongoDB 
2025-02-19 18:12:30 [ERROR]: RefreshToken validation failed: expires_at: Cast to date failed for value "Invalid Date" (type Date) at path "expires_at" {}
2025-02-19 18:12:30 [ERROR]: RefreshToken validation failed: expires_at: Cast to date failed for value "Invalid Date" (type Date) at path "expires_at" {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003#!@"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 18:13:11 [INFO]: Server is running on port 3000 
2025-02-19 18:13:11 [INFO]: Environment: development 
2025-02-19 18:13:11 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 18:13:14 [INFO]: Connected to MongoDB 
2025-02-19 18:13:20 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 18:14:57 [INFO]: Server is running on port 3000 
2025-02-19 18:14:57 [INFO]: Environment: development 
2025-02-19 18:14:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 18:15:01 [INFO]: Connected to MongoDB 
2025-02-19 18:15:06 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 18:16:13 [INFO]: Server is running on port 3000 
2025-02-19 18:16:13 [INFO]: Environment: development 
2025-02-19 18:16:13 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 18:16:17 [INFO]: Connected to MongoDB 
2025-02-19 18:25:06 [ERROR]: Cannot destructure property 'search' of 'query' as it is undefined. {}
2025-02-19 18:25:06 [ERROR]: Cannot destructure property 'search' of 'query' as it is undefined. {
  "path": "/api/users",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 18:25:09 [ERROR]: Cannot destructure property 'search' of 'query' as it is undefined. {}
2025-02-19 18:25:09 [ERROR]: Cannot destructure property 'search' of 'query' as it is undefined. {
  "path": "/api/users",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 18:48:56 [INFO]: MongoDB disconnected 
2025-02-19 19:00:48 [INFO]: MongoDB disconnected 
2025-02-19 19:02:34 [ERROR]: User not found {
  "path": "/api/users/change-password",
  "method": "PUT",
  "body": {
    "currentPassword": "Code26102003#!@",
    "newPassword": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:03:00 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 19:03:17 [ERROR]: User not found {
  "path": "/api/users/change-password",
  "method": "PUT",
  "body": {
    "currentPassword": "Code26102003#!@",
    "newPassword": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:03:55 [ERROR]: User not found {
  "path": "/api/users/change-password",
  "method": "PUT",
  "body": {
    "currentPassword": "Code26102003#!@",
    "newPassword": "Code26102003"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:03:58 [INFO]: Server is running on port 3000 
2025-02-19 19:03:58 [INFO]: Environment: development 
2025-02-19 19:03:58 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:04:02 [INFO]: Connected to MongoDB 
2025-02-19 19:04:06 [INFO]: Password changed {}
2025-02-19 19:04:19 [ERROR]: Invalid email or password {}
2025-02-19 19:04:19 [ERROR]: Invalid email or password {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "ngodat.it213@gmail.com",
    "password": "Code26102003#!@"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-19 19:04:25 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 19:06:57 [ERROR]: Cannot destructure property 'search' of 'query' as it is undefined. {}
2025-02-19 19:06:57 [ERROR]: Cannot destructure property 'search' of 'query' as it is undefined. {
  "path": "/api/users",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:07:32 [INFO]: Server is running on port 3000 
2025-02-19 19:07:32 [INFO]: Environment: development 
2025-02-19 19:07:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:07:35 [INFO]: Connected to MongoDB 
2025-02-19 19:08:03 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 19:13:22 [INFO]: Server is running on port 3000 
2025-02-19 19:13:22 [INFO]: Environment: development 
2025-02-19 19:13:22 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:13:25 [INFO]: Connected to MongoDB 
2025-02-19 19:13:31 [INFO]: Server is running on port 3000 
2025-02-19 19:13:31 [INFO]: Environment: development 
2025-02-19 19:13:31 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:13:34 [INFO]: Connected to MongoDB 
2025-02-19 19:22:39 [INFO]: Server is running on port 3000 
2025-02-19 19:22:39 [INFO]: Environment: development 
2025-02-19 19:22:39 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:22:45 [INFO]: Connected to MongoDB 
2025-02-19 19:31:35 [INFO]: Server is running on port 3000 
2025-02-19 19:31:35 [INFO]: Environment: development 
2025-02-19 19:31:35 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:31:39 [INFO]: Connected to MongoDB 
2025-02-19 19:32:58 [INFO]: Server is running on port 3000 
2025-02-19 19:32:58 [INFO]: Environment: development 
2025-02-19 19:32:58 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:33:02 [INFO]: Connected to MongoDB 
2025-02-19 19:34:55 [INFO]: Server is running on port 3000 
2025-02-19 19:34:55 [INFO]: Environment: development 
2025-02-19 19:34:55 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:34:59 [INFO]: Connected to MongoDB 
2025-02-19 19:35:18 [INFO]: Server is running on port 3000 
2025-02-19 19:35:18 [INFO]: Environment: development 
2025-02-19 19:35:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:35:21 [INFO]: Connected to MongoDB 
2025-02-19 19:35:43 [INFO]: Server is running on port 3000 
2025-02-19 19:35:43 [INFO]: Environment: development 
2025-02-19 19:35:43 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:35:46 [INFO]: Connected to MongoDB 
2025-02-19 19:36:30 [INFO]: Server is running on port 3000 
2025-02-19 19:36:30 [INFO]: Environment: development 
2025-02-19 19:36:30 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:36:34 [INFO]: Connected to MongoDB 
2025-02-19 19:38:12 [INFO]: Server is running on port 3000 
2025-02-19 19:38:12 [INFO]: Environment: development 
2025-02-19 19:38:12 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:38:15 [ERROR]: Cannot read properties of undefined (reading 'findById') {}
2025-02-19 19:38:15 [ERROR]: Cannot read properties of undefined (reading 'findById') {
  "path": "/api/users/67b495ca9d35c758607e27cc",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:38:16 [INFO]: Connected to MongoDB 
2025-02-19 19:39:07 [INFO]: Server is running on port 3000 
2025-02-19 19:39:07 [INFO]: Environment: development 
2025-02-19 19:39:07 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:39:10 [INFO]: Connected to MongoDB 
2025-02-19 19:40:13 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {}
2025-02-19 19:40:13 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:40:30 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {}
2025-02-19 19:40:30 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:41:15 [INFO]: Server is running on port 3000 
2025-02-19 19:41:15 [INFO]: Environment: development 
2025-02-19 19:41:15 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:41:18 [INFO]: Server is running on port 3000 
2025-02-19 19:41:18 [INFO]: Environment: development 
2025-02-19 19:41:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:41:22 [INFO]: Connected to MongoDB 
2025-02-19 19:41:26 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {}
2025-02-19 19:41:26 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:42:17 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {}
2025-02-19 19:42:17 [ERROR]: Schema hasn't been registered for model "Notification".
Use mongoose.model(name, schema) {
  "path": "/api/users/profile",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-19 19:43:51 [INFO]: Server is running on port 3000 
2025-02-19 19:43:51 [INFO]: Environment: development 
2025-02-19 19:43:51 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:43:54 [INFO]: Connected to MongoDB 
2025-02-19 19:45:17 [INFO]: Server is running on port 3000 
2025-02-19 19:45:17 [INFO]: Environment: development 
2025-02-19 19:45:17 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:45:20 [INFO]: Connected to MongoDB 
2025-02-19 19:49:39 [INFO]: Server is running on port 3000 
2025-02-19 19:49:39 [INFO]: Environment: development 
2025-02-19 19:49:39 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:49:42 [INFO]: Connected to MongoDB 
2025-02-19 19:50:07 [ERROR]: Invalid token {
  "path": "/api/users/admin",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10",
    "sort": "-createdAt"
  },
  "user": null
}
2025-02-19 19:50:10 [ERROR]: Invalid token {
  "path": "/api/users/admin",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10",
    "sort": "-createdAt"
  },
  "user": null
}
2025-02-19 19:50:32 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-19 19:51:29 [INFO]: Server is running on port 3000 
2025-02-19 19:51:29 [INFO]: Environment: development 
2025-02-19 19:51:29 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-19 19:51:32 [INFO]: Connected to MongoDB 
2025-02-20 19:40:57 [INFO]: Server is running on port 3000 
2025-02-20 19:40:57 [INFO]: Environment: development 
2025-02-20 19:40:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 19:41:01 [INFO]: Connected to MongoDB 
2025-02-20 20:15:42 [INFO]: MongoDB disconnected 
2025-02-20 20:19:18 [INFO]: MongoDB disconnected 
2025-02-20 20:33:56 [INFO]: MongoDB disconnected 
2025-02-20 20:39:35 [INFO]: MongoDB disconnected 
2025-02-20 20:55:40 [INFO]: Server is running on port 3000 
2025-02-20 20:55:40 [INFO]: Environment: development 
2025-02-20 20:55:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:55:45 [INFO]: Connected to MongoDB 
2025-02-20 20:56:07 [INFO]: Server is running on port 3000 
2025-02-20 20:56:07 [INFO]: Environment: development 
2025-02-20 20:56:07 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:56:11 [INFO]: Connected to MongoDB 
2025-02-20 20:56:58 [INFO]: Server is running on port 3000 
2025-02-20 20:56:58 [INFO]: Environment: development 
2025-02-20 20:56:58 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:57:02 [INFO]: Connected to MongoDB 
2025-02-20 20:57:33 [INFO]: Server is running on port 3000 
2025-02-20 20:57:33 [INFO]: Environment: development 
2025-02-20 20:57:33 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:57:38 [INFO]: Connected to MongoDB 
2025-02-20 20:57:39 [INFO]: Server is running on port 3000 
2025-02-20 20:57:39 [INFO]: Environment: development 
2025-02-20 20:57:39 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:57:43 [INFO]: Server is running on port 3000 
2025-02-20 20:57:43 [INFO]: Environment: development 
2025-02-20 20:57:43 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:57:46 [INFO]: Connected to MongoDB 
2025-02-20 20:57:57 [INFO]: Server is running on port 3000 
2025-02-20 20:57:57 [INFO]: Environment: development 
2025-02-20 20:57:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:58:00 [INFO]: Server is running on port 3000 
2025-02-20 20:58:00 [INFO]: Environment: development 
2025-02-20 20:58:00 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:58:04 [INFO]: Connected to MongoDB 
2025-02-20 20:59:31 [INFO]: Server is running on port 3000 
2025-02-20 20:59:31 [INFO]: Environment: development 
2025-02-20 20:59:31 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:59:32 [INFO]: Server is running on port 3000 
2025-02-20 20:59:32 [INFO]: Environment: development 
2025-02-20 20:59:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 20:59:36 [INFO]: Connected to MongoDB 
2025-02-20 21:00:35 [INFO]: Server is running on port 3000 
2025-02-20 21:00:35 [INFO]: Environment: development 
2025-02-20 21:00:35 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 21:00:39 [INFO]: Connected to MongoDB 
2025-02-20 21:01:36 [INFO]: Server is running on port 3000 
2025-02-20 21:01:36 [INFO]: Environment: development 
2025-02-20 21:01:36 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 21:01:41 [INFO]: Connected to MongoDB 
2025-02-20 21:02:20 [INFO]: Server is running on port 3000 
2025-02-20 21:02:20 [INFO]: Environment: development 
2025-02-20 21:02:20 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 21:02:25 [INFO]: Connected to MongoDB 
2025-02-20 21:45:17 [INFO]: Server is running on port 3000 
2025-02-20 21:45:17 [INFO]: Environment: development 
2025-02-20 21:45:17 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 21:45:22 [INFO]: Connected to MongoDB 
2025-02-20 21:47:19 [INFO]: MongoDB disconnected 
2025-02-20 21:51:27 [INFO]: Server is running on port 3000 
2025-02-20 21:51:27 [INFO]: Environment: development 
2025-02-20 21:51:27 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 21:51:33 [INFO]: Connected to MongoDB 
2025-02-20 21:56:58 [ERROR]: Invalid email or password {}
2025-02-20 21:56:58 [ERROR]: Invalid email or password {
  "path": "/api/auth/login",
  "method": "POST",
  "body": {
    "email": "john@example.com",
    "password": "password123"
  },
  "params": {},
  "query": {},
  "user": null
}
2025-02-20 22:00:12 [INFO]: MongoDB disconnected 
2025-02-20 22:13:03 [INFO]: MongoDB disconnected 
2025-02-20 22:18:02 [INFO]: MongoDB disconnected 
2025-02-20 23:12:54 [INFO]: Server is running on port 3000 
2025-02-20 23:12:54 [INFO]: Environment: development 
2025-02-20 23:12:54 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:12:57 [INFO]: Server is running on port 3000 
2025-02-20 23:12:57 [INFO]: Environment: development 
2025-02-20 23:12:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:13:00 [INFO]: Connected to MongoDB 
2025-02-20 23:37:32 [INFO]: Server is running on port 3000 
2025-02-20 23:37:32 [INFO]: Environment: development 
2025-02-20 23:37:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:37:35 [INFO]: Connected to MongoDB 
2025-02-20 23:38:39 [INFO]: Server is running on port 3000 
2025-02-20 23:38:39 [INFO]: Environment: development 
2025-02-20 23:38:39 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:38:40 [INFO]: Server is running on port 3000 
2025-02-20 23:38:40 [INFO]: Environment: development 
2025-02-20 23:38:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:38:43 [INFO]: Connected to MongoDB 
2025-02-20 23:38:50 [INFO]: Server is running on port 3000 
2025-02-20 23:38:50 [INFO]: Environment: development 
2025-02-20 23:38:50 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:38:52 [INFO]: Connected to MongoDB 
2025-02-20 23:39:02 [INFO]: Server is running on port 3000 
2025-02-20 23:39:02 [INFO]: Environment: development 
2025-02-20 23:39:02 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:39:05 [INFO]: Connected to MongoDB 
2025-02-20 23:43:14 [INFO]: Server is running on port 3000 
2025-02-20 23:43:14 [INFO]: Environment: development 
2025-02-20 23:43:14 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:43:17 [INFO]: Connected to MongoDB 
2025-02-20 23:43:56 [INFO]: Server is running on port 3000 
2025-02-20 23:43:56 [INFO]: Environment: development 
2025-02-20 23:43:56 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:43:59 [INFO]: Connected to MongoDB 
2025-02-20 23:44:26 [INFO]: Server is running on port 3000 
2025-02-20 23:44:26 [INFO]: Environment: development 
2025-02-20 23:44:26 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:44:29 [INFO]: Connected to MongoDB 
2025-02-20 23:44:30 [INFO]: Server is running on port 3000 
2025-02-20 23:44:30 [INFO]: Environment: development 
2025-02-20 23:44:30 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:44:33 [INFO]: Connected to MongoDB 
2025-02-20 23:44:53 [INFO]: Server is running on port 3000 
2025-02-20 23:44:53 [INFO]: Environment: development 
2025-02-20 23:44:53 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:44:56 [INFO]: Connected to MongoDB 
2025-02-20 23:44:57 [INFO]: Server is running on port 3000 
2025-02-20 23:44:57 [INFO]: Environment: development 
2025-02-20 23:44:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:45:00 [INFO]: Connected to MongoDB 
2025-02-20 23:45:33 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-20 23:48:40 [ERROR]: upload.failed {}
2025-02-20 23:48:40 [ERROR]: upload.failed {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
    "description": "stringstringstringsthhhhhhhhhhhhhhhh",
    "price": "11111",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-20 23:49:31 [INFO]: MongoDB disconnected 
2025-02-20 23:49:37 [INFO]: Server is running on port 3000 
2025-02-20 23:49:37 [INFO]: Environment: development 
2025-02-20 23:49:37 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:49:40 [INFO]: Connected to MongoDB 
2025-02-20 23:50:33 [INFO]: Server is running on port 3000 
2025-02-20 23:50:33 [INFO]: Environment: development 
2025-02-20 23:50:33 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:50:35 [INFO]: Connected to MongoDB 
2025-02-20 23:50:39 [INFO]: Course created {
  "id": "67b75d5fafb6a48541650170"
}
2025-02-20 23:52:20 [INFO]: Course created {
  "id": "67b75dc4afb6a48541650174"
}
2025-02-20 23:53:44 [INFO]: Server is running on port 3000 
2025-02-20 23:53:44 [INFO]: Environment: development 
2025-02-20 23:53:44 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:53:47 [INFO]: Connected to MongoDB 
2025-02-20 23:53:58 [ERROR]: Course validation failed: thumbnail_id: Cast to ObjectId failed for value "course-thumbnails/yodo3gccxztnzzhvlsry" (type string) at path "thumbnail_id" because of "BSONError" {}
2025-02-20 23:53:58 [ERROR]: Course validation failed: thumbnail_id: Cast to ObjectId failed for value "course-thumbnails/yodo3gccxztnzzhvlsry" (type string) at path "thumbnail_id" because of "BSONError" {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
    "description": "stringstringstringsthhhhhhhhhhhhhhhh",
    "price": "11111",
    "status": "draft",
    "thumbnail_id": "course-thumbnails/yodo3gccxztnzzhvlsry",
    "instructor_id": "67b495ca9d35c758607e27cc"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-20 23:59:55 [INFO]: Server is running on port 3000 
2025-02-20 23:59:55 [INFO]: Environment: development 
2025-02-20 23:59:55 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-20 23:59:58 [INFO]: Connected to MongoDB 
2025-02-21 00:00:04 [ERROR]: CloudinaryFile validation failed: purpose: `course_thumbnail` is not a valid enum value for path `purpose`. {}
2025-02-21 00:00:04 [ERROR]: CloudinaryFile validation failed: purpose: `course_thumbnail` is not a valid enum value for path `purpose`. {
  "path": "/api/courses",
  "method": "POST",
  "body": {
    "title": "Hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
    "description": "stringstringstringsthhhhhhhhhhhhhhhh",
    "price": "11111",
    "status": "draft"
  },
  "params": {},
  "query": {},
  "user": "67b495ca9d35c758607e27cc"
}
2025-02-21 00:00:58 [INFO]: Server is running on port 3000 
2025-02-21 00:00:58 [INFO]: Environment: development 
2025-02-21 00:00:58 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:01:01 [INFO]: Connected to MongoDB 
2025-02-21 00:01:13 [INFO]: Course created {
  "id": "67b75fd6e2e66f1197d5bec9"
}
2025-02-21 00:06:53 [ERROR]: CourseService.getById is not a function {}
2025-02-21 00:06:53 [ERROR]: CourseService.getById is not a function {
  "path": "/api/courses/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:07:23 [INFO]: Server is running on port 3000 
2025-02-21 00:07:23 [INFO]: Environment: development 
2025-02-21 00:07:23 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:07:26 [INFO]: Connected to MongoDB 
2025-02-21 00:07:30 [ERROR]: Schema hasn't been registered for model "thumbnail_id".
Use mongoose.model(name, schema) {}
2025-02-21 00:07:30 [ERROR]: Schema hasn't been registered for model "thumbnail_id".
Use mongoose.model(name, schema) {
  "path": "/api/courses/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:09:47 [ERROR]: Schema hasn't been registered for model "thumbnail_id".
Use mongoose.model(name, schema) {}
2025-02-21 00:09:47 [ERROR]: Schema hasn't been registered for model "thumbnail_id".
Use mongoose.model(name, schema) {
  "path": "/api/courses/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:10:22 [INFO]: Server is running on port 3000 
2025-02-21 00:10:22 [INFO]: Environment: development 
2025-02-21 00:10:22 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:10:25 [INFO]: Connected to MongoDB 
2025-02-21 00:10:27 [ERROR]: Cannot populate path `lessons` because it is not in your schema. Set the `strictPopulate` option to false to override. {}
2025-02-21 00:10:27 [ERROR]: Cannot populate path `lessons` because it is not in your schema. Set the `strictPopulate` option to false to override. {
  "path": "/api/courses/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:10:40 [INFO]: Server is running on port 3000 
2025-02-21 00:10:40 [INFO]: Environment: development 
2025-02-21 00:10:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:10:43 [INFO]: Connected to MongoDB 
2025-02-21 00:13:23 [INFO]: Server is running on port 3000 
2025-02-21 00:13:23 [INFO]: Environment: development 
2025-02-21 00:13:23 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:13:26 [INFO]: Connected to MongoDB 
2025-02-21 00:13:47 [INFO]: Server is running on port 3000 
2025-02-21 00:13:47 [INFO]: Environment: development 
2025-02-21 00:13:47 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:13:49 [INFO]: Connected to MongoDB 
2025-02-21 00:17:57 [INFO]: Server is running on port 3000 
2025-02-21 00:17:57 [INFO]: Environment: development 
2025-02-21 00:17:57 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:18:00 [INFO]: Connected to MongoDB 
2025-02-21 00:19:07 [INFO]: Server is running on port 3000 
2025-02-21 00:19:07 [INFO]: Environment: development 
2025-02-21 00:19:07 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:19:10 [INFO]: Connected to MongoDB 
2025-02-21 00:20:25 [INFO]: Server is running on port 3000 
2025-02-21 00:20:25 [INFO]: Environment: development 
2025-02-21 00:20:25 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:20:28 [INFO]: Connected to MongoDB 
2025-02-21 00:21:00 [INFO]: Server is running on port 3000 
2025-02-21 00:21:00 [INFO]: Environment: development 
2025-02-21 00:21:00 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:21:04 [INFO]: Connected to MongoDB 
2025-02-21 00:25:18 [INFO]: Server is running on port 3000 
2025-02-21 00:25:18 [INFO]: Environment: development 
2025-02-21 00:25:18 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:25:20 [ERROR]: Invalid token {
  "path": "/api/courses/haha/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:25:21 [INFO]: Connected to MongoDB 
2025-02-21 00:25:23 [ERROR]: Invalid token {
  "path": "/api/courses/haha/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:25:31 [ERROR]: Invalid token {
  "path": "/api/courses/haha/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:25:50 [ERROR]: Invalid token {
  "path": "/api/courses/haha/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:26:08 [ERROR]: Invalid token {
  "path": "/api/courses/haha/67b75fd6e2e66f1197d5bec9",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 00:27:40 [INFO]: Server is running on port 3000 
2025-02-21 00:27:40 [INFO]: Environment: development 
2025-02-21 00:27:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:27:46 [INFO]: Connected to MongoDB 
2025-02-21 00:28:27 [INFO]: Server is running on port 3000 
2025-02-21 00:28:27 [INFO]: Environment: development 
2025-02-21 00:28:27 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:28:30 [INFO]: Connected to MongoDB 
2025-02-21 00:29:09 [INFO]: Server is running on port 3000 
2025-02-21 00:29:09 [INFO]: Environment: development 
2025-02-21 00:29:09 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:29:13 [INFO]: Connected to MongoDB 
2025-02-21 00:31:20 [INFO]: Server is running on port 3000 
2025-02-21 00:31:20 [INFO]: Environment: development 
2025-02-21 00:31:20 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:31:23 [INFO]: Connected to MongoDB 
2025-02-21 00:35:40 [INFO]: Server is running on port 3000 
2025-02-21 00:35:40 [INFO]: Environment: development 
2025-02-21 00:35:40 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:35:43 [INFO]: Connected to MongoDB 
2025-02-21 00:36:13 [INFO]: Server is running on port 3000 
2025-02-21 00:36:13 [INFO]: Environment: development 
2025-02-21 00:36:13 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:36:15 [INFO]: Connected to MongoDB 
2025-02-21 00:39:03 [INFO]: Server is running on port 3000 
2025-02-21 00:39:03 [INFO]: Environment: development 
2025-02-21 00:39:03 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:39:06 [INFO]: Connected to MongoDB 
2025-02-21 00:41:21 [INFO]: Server is running on port 3000 
2025-02-21 00:41:21 [INFO]: Environment: development 
2025-02-21 00:41:21 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:41:24 [INFO]: Connected to MongoDB 
2025-02-21 00:43:08 [INFO]: Server is running on port 3000 
2025-02-21 00:43:08 [INFO]: Environment: development 
2025-02-21 00:43:08 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 00:43:11 [INFO]: Connected to MongoDB 
2025-02-21 00:58:50 [INFO]: MongoDB disconnected 
2025-02-21 01:14:44 [INFO]: MongoDB disconnected 
2025-02-21 01:30:15 [INFO]: MongoDB disconnected 
2025-02-21 01:45:45 [INFO]: MongoDB disconnected 
2025-02-21 02:01:37 [INFO]: MongoDB disconnected 
2025-02-21 02:17:29 [INFO]: MongoDB disconnected 
2025-02-21 02:33:21 [INFO]: MongoDB disconnected 
2025-02-21 02:44:58 [INFO]: MongoDB disconnected 
2025-02-21 03:00:28 [INFO]: MongoDB disconnected 
2025-02-21 03:16:21 [INFO]: MongoDB disconnected 
2025-02-21 03:32:13 [INFO]: MongoDB disconnected 
2025-02-21 03:47:43 [INFO]: MongoDB disconnected 
2025-02-21 04:03:14 [INFO]: MongoDB disconnected 
2025-02-21 04:19:06 [INFO]: MongoDB disconnected 
2025-02-21 04:22:20 [INFO]: MongoDB disconnected 
2025-02-21 04:38:13 [INFO]: MongoDB disconnected 
2025-02-21 04:54:05 [INFO]: MongoDB disconnected 
2025-02-21 05:09:36 [INFO]: MongoDB disconnected 
2025-02-21 05:25:29 [INFO]: MongoDB disconnected 
2025-02-21 05:41:21 [INFO]: MongoDB disconnected 
2025-02-21 05:57:14 [INFO]: MongoDB disconnected 
2025-02-21 06:01:00 [INFO]: MongoDB disconnected 
2025-02-21 06:17:01 [INFO]: MongoDB disconnected 
2025-02-21 06:32:53 [INFO]: MongoDB disconnected 
2025-02-21 06:48:23 [INFO]: MongoDB disconnected 
2025-02-21 07:04:16 [INFO]: MongoDB disconnected 
2025-02-21 07:20:07 [INFO]: MongoDB disconnected 
2025-02-21 07:36:00 [INFO]: MongoDB disconnected 
2025-02-21 07:52:21 [INFO]: MongoDB disconnected 
2025-02-21 08:02:13 [INFO]: MongoDB disconnected 
2025-02-21 08:18:06 [INFO]: MongoDB disconnected 
2025-02-21 08:33:37 [INFO]: MongoDB disconnected 
2025-02-21 08:49:29 [INFO]: MongoDB disconnected 
2025-02-21 09:03:10 [INFO]: MongoDB disconnected 
2025-02-21 09:19:03 [INFO]: MongoDB disconnected 
2025-02-21 09:21:11 [INFO]: MongoDB disconnected 
2025-02-21 09:36:42 [INFO]: MongoDB disconnected 
2025-02-21 09:42:06 [INFO]: MongoDB disconnected 
2025-02-21 09:43:33 [INFO]: MongoDB disconnected 
2025-02-21 09:59:33 [INFO]: MongoDB disconnected 
2025-02-21 10:02:52 [INFO]: MongoDB disconnected 
2025-02-21 10:06:11 [INFO]: Server is running on port 3000 
2025-02-21 10:06:11 [INFO]: Environment: development 
2025-02-21 10:06:11 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:06:14 [INFO]: Connected to MongoDB 
2025-02-21 10:08:22 [INFO]: Server is running on port 3000 
2025-02-21 10:08:22 [INFO]: Environment: development 
2025-02-21 10:08:22 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:08:25 [INFO]: Connected to MongoDB 
2025-02-21 10:08:42 [ERROR]: Invalid token {
  "path": "/api/courses",
  "method": "POST",
  "body": {},
  "params": {},
  "query": {},
  "user": null
}
2025-02-21 10:08:55 [INFO]: User logged in {
  "email": "ngodat.it213@gmail.com"
}
2025-02-21 10:09:32 [INFO]: Server is running on port 3000 
2025-02-21 10:09:32 [INFO]: Environment: development 
2025-02-21 10:09:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:09:36 [INFO]: Connected to MongoDB 
2025-02-21 10:09:38 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:09:38 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:11:16 [INFO]: Server is running on port 3000 
2025-02-21 10:11:16 [INFO]: Environment: development 
2025-02-21 10:11:16 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:11:20 [INFO]: Connected to MongoDB 
2025-02-21 10:11:22 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:11:22 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:18:27 [INFO]: MongoDB disconnected 
2025-02-21 10:34:23 [INFO]: Course created {
  "id": "67b7f43fe1eb5507e5a3daf5"
}
2025-02-21 10:34:31 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:34:31 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:41:39 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:41:39 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:45:52 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:45:52 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:47:12 [INFO]: Server is running on port 3000 
2025-02-21 10:47:12 [INFO]: Environment: development 
2025-02-21 10:47:12 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:47:15 [INFO]: Connected to MongoDB 
2025-02-21 10:47:21 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:47:21 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:48:48 [INFO]: Server is running on port 3000 
2025-02-21 10:48:48 [INFO]: Environment: development 
2025-02-21 10:48:48 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:48:51 [INFO]: Connected to MongoDB 
2025-02-21 10:49:05 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:49:05 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:49:47 [INFO]: Server is running on port 3000 
2025-02-21 10:49:47 [INFO]: Environment: development 
2025-02-21 10:49:47 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:49:50 [INFO]: Connected to MongoDB 
2025-02-21 10:49:55 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:49:55 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:55:47 [INFO]: Server is running on port 3000 
2025-02-21 10:55:47 [INFO]: Environment: development 
2025-02-21 10:55:47 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:55:50 [INFO]: Connected to MongoDB 
2025-02-21 10:55:56 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:55:56 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:56:15 [INFO]: Server is running on port 3000 
2025-02-21 10:56:15 [INFO]: Environment: development 
2025-02-21 10:56:15 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 10:56:17 [INFO]: Connected to MongoDB 
2025-02-21 10:56:27 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:56:27 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 10:57:04 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 10:57:04 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 11:14:08 [INFO]: MongoDB disconnected 
2025-02-21 11:59:52 [INFO]: Server is running on port 3000 
2025-02-21 11:59:52 [INFO]: Environment: development 
2025-02-21 11:59:52 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 11:59:55 [INFO]: Connected to MongoDB 
2025-02-21 12:00:19 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 12:00:19 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 12:00:26 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 12:00:26 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 12:00:30 [INFO]: Server is running on port 3000 
2025-02-21 12:00:30 [INFO]: Environment: development 
2025-02-21 12:00:30 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:00:33 [INFO]: Connected to MongoDB 
2025-02-21 12:00:36 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {}
2025-02-21 12:00:36 [ERROR]: Cannot read properties of null (reading 'thumbnail_id') {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 12:01:27 [INFO]: Server is running on port 3000 
2025-02-21 12:01:27 [INFO]: Environment: development 
2025-02-21 12:01:27 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:01:30 [ERROR]: Cast to ObjectId failed for value "{ page: '1', limit: '10' }" (type Object) at path "_id" for model "Course" {}
2025-02-21 12:01:30 [ERROR]: Cast to ObjectId failed for value "{ page: '1', limit: '10' }" (type Object) at path "_id" for model "Course" {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 12:01:31 [INFO]: Connected to MongoDB 
2025-02-21 12:01:32 [INFO]: Server is running on port 3000 
2025-02-21 12:01:32 [INFO]: Environment: development 
2025-02-21 12:01:32 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:01:36 [INFO]: Connected to MongoDB 
2025-02-21 12:01:36 [ERROR]: Cast to ObjectId failed for value "{ page: '1', limit: '10' }" (type Object) at path "_id" for model "Course" {}
2025-02-21 12:01:36 [ERROR]: Cast to ObjectId failed for value "{ page: '1', limit: '10' }" (type Object) at path "_id" for model "Course" {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 12:01:55 [INFO]: Server is running on port 3000 
2025-02-21 12:01:55 [INFO]: Environment: development 
2025-02-21 12:01:55 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:01:58 [ERROR]: course.fetchError {}
2025-02-21 12:01:58 [ERROR]: course.fetchError {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 12:01:58 [INFO]: Connected to MongoDB 
2025-02-21 12:02:12 [INFO]: Server is running on port 3000 
2025-02-21 12:02:12 [INFO]: Environment: development 
2025-02-21 12:02:12 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:02:15 [INFO]: Connected to MongoDB 
2025-02-21 12:02:20 [ERROR]: course.fetchError {}
2025-02-21 12:02:20 [ERROR]: course.fetchError {
  "path": "/api/courses",
  "method": "GET",
  "body": {},
  "params": {},
  "query": {
    "page": "1",
    "limit": "10"
  },
  "user": null
}
2025-02-21 12:02:29 [INFO]: Server is running on port 3000 
2025-02-21 12:02:29 [INFO]: Environment: development 
2025-02-21 12:02:29 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:02:32 [INFO]: Connected to MongoDB 
2025-02-21 12:02:37 [ERROR]: Unhandled Rejection: courseData is not defined {
  "stack": "ReferenceError: courseData is not defined\n    at CourseService._transformCourseData (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/course.service.js:304:5)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/course.service.js:35:29\n    at Array.map (<anonymous>)\n    at CourseService.getAll (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/course.service.js:33:42)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async CourseController.getAll (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/course.controller.js:13:23)"
}
2025-02-21 12:02:48 [INFO]: Server is running on port 3000 
2025-02-21 12:02:48 [INFO]: Environment: development 
2025-02-21 12:02:48 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:02:52 [INFO]: Connected to MongoDB 
2025-02-21 12:02:56 [ERROR]: Unhandled Rejection: courseData is not defined {
  "stack": "ReferenceError: courseData is not defined\n    at CourseService._transformCourseData (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/course.service.js:304:5)\n    at /Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/course.service.js:35:29\n    at Array.map (<anonymous>)\n    at CourseService.getAll (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/services/course.service.js:33:42)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async CourseController.getAll (/Users/datngovantien/Documents/Projects/bacnend/nodejs/e-course-nodejs/src/controllers/course.controller.js:13:23)"
}
2025-02-21 12:03:43 [INFO]: Server is running on port 3000 
2025-02-21 12:03:43 [INFO]: Environment: development 
2025-02-21 12:03:43 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:03:47 [INFO]: Connected to MongoDB 
2025-02-21 12:04:12 [INFO]: Server is running on port 3000 
2025-02-21 12:04:12 [INFO]: Environment: development 
2025-02-21 12:04:12 [INFO]: API Documentation: http://localhost:3000/api-docs 
2025-02-21 12:04:15 [INFO]: Connected to MongoDB 
